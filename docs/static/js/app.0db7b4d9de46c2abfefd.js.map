{"version":3,"sources":["webpack:///./src/assets/cooking ^\\.\\/.*\\.jpg$","webpack:///./src/views/cooking/menu/东北炖大鹅.json","webpack:///./src/assets/cooking/东北炖大鹅.jpg","webpack:///src/App.vue","webpack:///./src/App.vue?502c","webpack:///./src/App.vue","webpack:///./src/components/HelloWorld.vue?a31e","webpack:///./src/components/HelloWorld.vue","webpack:///src/components/HelloWorld.vue","webpack:///src/views/table/table.vue","webpack:///./src/views/table/table.vue?a1aa","webpack:///./src/views/table/table.vue","webpack:///src/views/calendar/calendar.vue","webpack:///./src/views/calendar/calendar.vue?92bd","webpack:///./src/views/calendar/calendar.vue","webpack:///./src/views/cooking/menu/index.js","webpack:///src/components/CookingImage.vue","webpack:///./src/components/CookingImage.vue?9ff1","webpack:///./src/components/CookingImage.vue","webpack:///src/views/cooking/cooking.vue","webpack:///./src/views/cooking/cooking.vue?9311","webpack:///./src/views/cooking/cooking.vue","webpack:///./src/router/index.js","webpack:///./src/registerServiceWorker.js","webpack:///./src/main.js","webpack:///./src/views/cooking/menu/溜肉段.json","webpack:///./src/assets/cooking/锅包肉.jpg","webpack:///./src/assets/cooking/地三鲜.jpg","webpack:///./node_modules/ant-design-vue/package.json","webpack:///./src/assets/cooking/溜肉段.jpg","webpack:///./src/assets/cooking/红烧鸡爪.jpg","webpack:///./src/views/cooking/menu/锅包肉.json","webpack:///./node_modules/xlsx/xlsx.mjs","webpack:///./node_modules/moment/locale ^\\.\\/.*$","webpack:///./src/views/cooking/menu/红烧鸡爪.json","webpack:///./src/views/cooking/menu/地三鲜.json"],"names":["map","./东北炖大鹅.jpg","./地三鲜.jpg","./溜肉段.jpg","./红烧鸡爪.jpg","./锅包肉.jpg","webpackContext","req","__webpack_require__","webpackContextResolve","id","Error","keys","Object","resolve","module","exports","name","need","todo","remarks","p","App","data","collapsed","menuList","this","$router","options","routes","defaultSelectedKeys","$route","matched","length","components","default","created","console","log","method","selectortype_template_index_0_src_App","render","_vm","_h","$createElement","_c","_self","attrs","trigger","collapsible","model","value","callback","$$v","expression","staticClass","_v","theme","mode","default-selected-keys","_l","item","key","componentName","to","path","type","icon","_s","staticStyle","background","padding","style","margin","minHeight","staticRenderFns","src_App","normalizeComponent","ssrContext","components_HelloWorld","msg","src_components_HelloWorld","HelloWorld_normalizeComponent","columns","title","dataIndex","filters","text","onFilter","record","includes","scopedSlots","customRender","sorter","a","b","changeMoney","user","table","tableData","fileUrl","mounted","xlsx","readWorkbookFromRemoteFile","setTable","methods","url","xhr","XMLHttpRequest","open","responseType","onload","e","status","Uint8Array","response","workbook","json","Sheets","SheetNames","newData","sheet_to_json","header","send","i","push","date","splitText","detailType","get_label","r","c","encode_cell","indexOf","split","table_table","color","on","click","$event","data-source","pagination","_u","fn","views_table_table","table_normalizeComponent","calendar","calendarData","version","setCalendar","getListData","dayjs","format","listData","getMonthData","month","_this","forEach","index","$message","warning","calendar_calendar","slot","_e","views_calendar_calendar","calendar_normalizeComponent","menu","地三鲜","锅包肉","红烧鸡爪","溜肉段","东北炖大鹅","CookingImage","props","components_CookingImage","src","alt","cooking","CookingImage_normalizeComponent","currentItem","visible","needValue","cooking_menu","openDrawer","onClose","copyNeeds","join","oInput","document","createElement","body","appendChild","select","execCommand","success","remove","cooking_cooking","width","placement","closable","close","span","views_cooking_cooking","cooking_normalizeComponent","Vue","use","Router","router","redirect","component","Cooking","HelloWorld","Table","Calendar","register","process","BASE_URL","ready","registered","cached","updatefound","updated","offline","error","config","productionTip","prototype","Antd","el","template","_args","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_spec","_where","bugs","dependencies","@ant-design/icons","@ant-design/icons-vue","@simonwep/pickr","add-dom-event-listener","array-tree-filter","async-validator","babel-helper-vue-jsx-merge-props","babel-runtime","classnames","component-classes","dom-align","dom-closest","dom-scroll-into-view","enquire.js","intersperse","is-mobile","is-negative-zero","ismobilejs","json2mq","lodash","moment","mutationobserver-shim","node-emoji","omit.js","raf","resize-observer-polyfill","shallow-equal","shallowequal","vue-ref","description","devDependencies","@commitlint/cli","@commitlint/config-conventional","@octokit/rest","@vue/cli-plugin-eslint","@vue/server-test-utils","@vue/test-utils","acorn","autoprefixer","axios","babel-cli","babel-core","babel-eslint","babel-jest","babel-loader","babel-plugin-import","babel-plugin-inline-import-data-uri","babel-plugin-istanbul","babel-plugin-syntax-dynamic-import","babel-plugin-syntax-jsx","babel-plugin-transform-class-properties","babel-plugin-transform-decorators","babel-plugin-transform-decorators-legacy","babel-plugin-transform-es3-member-expression-literals","babel-plugin-transform-es3-property-literals","babel-plugin-transform-object-assign","babel-plugin-transform-object-rest-spread","babel-plugin-transform-runtime","babel-plugin-transform-vue-jsx","babel-polyfill","babel-preset-env","case-sensitive-paths-webpack-plugin","chalk","cheerio","codecov","colorful","commander","compare-versions","cross-env","css-loader","deep-assign","enquire-js","eslint","eslint-config-prettier","eslint-plugin-html","eslint-plugin-markdown","eslint-plugin-vue","fetch-jsonp","fs-extra","glob","gulp","gulp-babel","gulp-strip-code","html-webpack-plugin","husky","istanbul-instrumenter-loader","jest","jest-serializer-vue","jest-transform-stub","js-base64","json-templater","jsonp","less","less-loader","less-plugin-npm-import","lint-staged","marked","merge2","mini-css-extract-plugin","minimist","mkdirp","mockdate","nprogress","optimize-css-assets-webpack-plugin","postcss","postcss-loader","prettier","pretty-quick","querystring","raw-loader","reqwest","rimraf","rucksack-css","selenium-server","semver","style-loader","stylelint","stylelint-config-prettier","stylelint-config-standard","terser-webpack-plugin","through2","url-loader","vue","vue-antd-md-loader","vue-clipboard2","vue-draggable-resizable","vue-eslint-parser","vue-i18n","vue-infinite-scroll","vue-jest","vue-loader","vue-router","vue-server-renderer","vue-template-compiler","vue-virtual-scroller","vuex","webpack","webpack-cli","webpack-dev-server","webpack-merge","webpackbar","xhr-mock","files","homepage","keywords","license","main","peerDependencies","repository","scripts","compile","dev","dist","lint","lint:docs","lint:site","lint:style","postinstall","pre-publish","prepublish","pub","pub-with-ci","start","test","sideEffects","typings","defineProperty","__webpack_exports__","Buffer","d","set_cptable","set_fs","parse_xlscfb","parse_zip","readSync","readFileSync","writeSync","writeFileSync","writeFileAsync","writeSyncXLSX","writeFileSyncXLSX","utils","SSF","CFB","XLSX","current_codepage","current_ansi","VALID_ANSI","CS2CP","0","1","2","77","128","129","130","134","136","161","162","163","177","178","186","204","222","238","255","69","set_ansi","cp","set_cp","reset_cp","char_codes","o","len","charCodeAt","utf16beread","String","fromCharCode","cptable","debom","c1","c2","utf16leread","slice","_getchar","x","_getansi","_cptable","decode","cpdoit","DENSE","DIF_XL","Base64","encode","input","c3","e1","e2","e3","e4","isNaN","charAt","replace","has_buf","versions","node","Buffer_from","nbfs","from","buf","enc","bind","alloc","n","allocUnsafe","new_raw_buf","Array","new_unsafe_buf","s2a","s","s2ab","ArrayBuffer","view","a2s","isArray","ab2a","bconcat","bufs","maxlen","set","concat","apply","call","chr0","chr1","make_ssf","_strrev","fill","l","pad0","v","t","pad_","rpad_","p2_32","Math","pow","pad0r","round","pad0r1","pad0r2","isgeneral","days","months","init_table","table_fmt","default_map","defi","default_str","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","time","dow","dout","out","T","u","y","m","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","fix_hijri","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","toString","general_fmt_num","trailing_zeroes_and_decimal","strip_decimal","mantissa_zeroes_and_decimal","exp_with_single_digit","V","LOG10E","normalize_exp","toPrecision","w","toFixed","toExponential","small_exp","substr","large_exp","toUpperCase","general_fmt","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","_frac","write_num_flt","match","ffmt","idx","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","XLMLFormatMap","General Number","General Date","Long Date","Medium Date","Short Date","Long Time","Medium Time","Short Time","Currency","Fixed","Standard","Percent","Scientific","Yes/No","True/False","On/Off","SSFImplicit","5","6","7","8","23","24","25","26","27","28","29","30","31","32","33","34","35","36","41","42","43","44","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","70","71","72","73","74","75","76","78","79","80","81","dateNFregex","CRC32","T0","Int32Array","signed_crc_table","TT","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","factory","fs","dirname","filename","write_dos_date","hms","getHours","getMinutes","getSeconds","write_shift","ymd","parse_extra_field","blob","prep_blob","flags","read_shift","sz","tgt","mtime","atime","ctime","mt","get_fs","parse","file","root","isBuffer","di","row","mboundary","boundary","FileIndex","FullPaths","init_cfb","start_di","fcnt","line","parse_mime","parse_mad","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","chk","HEADER_SIGNATURE","check_get_mver","shift","check_shifts","dir_cnt","sectors","nsectors","ceil","sectorify","sleuth_fat","cnt","ENDOFCHAIN","sector","__readInt32LE","sector_list","sl","chkd","buf_chain","modulus","k","seen","addr","nodes","__toBuffer","make_sector_list","Paths","mini","minifat_store","pl","namelen","__utf16le","R","clsid","state","size","ct","read_date","storage","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","entry","payload","MSSZ","new_buf","offset","__readUInt32LE","cfb","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","fullPaths","create","HEADER_CLSID","sort","Z","namecmp","elt","_write","_opts","fileType","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","write_quoted_printable","write_base64_76","write_mad","cdirs","compression","start_cd","crcs","sz_cd","namebuf","outbuf","_zlib","deflateRawSync","_deflate","write_zip","mini_size","fat_size","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","copy","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","CLEN_ORDER","LEN_LN","DST_LN","use_typed_arrays","bitswap8","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_1","write_bits_8","write_bits_16","realloc","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","rev","cleni","fix_lmap","fix_dmap","dlens","_deflateRaw","DST_LN_RE","LEN_LN_RE","boff","write_stored","addrs","hash","mlen","len_eb","dst_eb","write_huff_fixed","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","usz","woff","OL","max_len_1","max_len_2","bits","code","dst","inflate","warn_or_throw","wrn","csz","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","parse_dos_date","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","cfb_add","unsafe","ContentTypeMap","htm","xml","gif","jpg","png","mso","thmx","sh33tj5","ctype","ext","encoded","si","end","tmp","fdata","fname","cte","trim","oi","parse_quoted_printable","fpath","cfb_gc","UCFullPaths","UCPaths","UCPath","read","read_file","write","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","message","_inflateRaw","_fs","blobify","a2u","write_dl","Deno","TextEncoder","utf8write","IE_SaveFile","Blob","navigator","msSaveBlob","saveAs","URL","createObjectURL","chrome","downloads","download","revokeObjectURL","setTimeout","href","removeChild","$","File","Folder","encoding","ks","o2","hasOwnProperty","evert_key","obj","K","evert","evert_num","datenum","refdate","refoffset","numdate","setTime","parse_isodur","sec","good_pd_date","good_pd","parseDate","fixdate","cc2str","arr","debomit","dup","JSON","stringify","fuzzynum","Number","isFinite","NaN","wt","lower_months","fuzzydate","getYear","lower","safe_split_regex","getdatastr","asNodeBuffer","asBinary","_data","getContent","getdatabin","safegetzipfile","zip","g","getzipfile","getzipdata","safe","getzipstr","zipentries","zip_add_file","res","widx","ridx","utf8decode","zip_new","zip_read","resolve_path","result","target","step","XML_HEADER","attregexg","tagregex","nsregex","nsregex2","parsexmltag","tag","skip_root","skip_LC","z","eq","quot","strip_ns","encregex","coderegex","encodings","&quot;","&apos;","&gt;","&lt;","&amp;","rencoding","unescapexml","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","xlml_fixstr","entregex","entrepl","xlml_unfixstr","parsexmlbool","utf8read","orig","utf8readb","ww","corpus","utf8readc","mtcache","entities","vt_cache","matchtag","RegExp","htmldecode","vtregex","vtvregex","vtmregex","parseVector","matches","baseType","WTF","wtregex","writetag","wxt_helper","writextag","write_w3cdtf","toISOString","XMLNS","dc","dcterms","dcmitype","mx","sjs","vt","xsi","xsd","XLMLNS","html","__lpp4","___lpp4","___toBuffer","__readUInt16LE","___utf16le","__hexlify","___hexlify","__utf8","__readUInt8","___utf8","__lpstr","___lpstr","__cpstr","___cpstr","__lpwstr","___lpwstr","__double","___double","__8lpp4","___8lpp4","Infinity","read_double_le","is_buf","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","loc","oo","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","cppayload","bs","av","LN2","write_double_le","hexstr","fld","pos","parsenoop","recordhopper","cb","tmpbyte","cntbyte","RT","XLSBRecordEnum","buf_array","blksz","newblk","curbuf","endbuf","next","_bufs","write_record","ba","XLSBRE","shift_cell_xls","cell","cRel","rRel","biff","shift_range_xls","range","encode_cell_xls","fix_row","encode_range_xls","encode_row","encode_col","decode_row","rowstr","decode_col","colstr","col","decode_cell","decode_range","encode_range","cs","ce","safe_decode_range","safe_format_cell","XF","numFmtId","format_cell","BErr","sheet_to_workbook","sheet","sheets","sheet_add_aoa","_ws","dense","ws","_R","_C","origin","_origin","_range","__R","__C","nullError","sheetStubs","cellDates","cell_ref","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_StrRun","ich","ifnt","parse_RichStr","rgsStrRun","dwSizeStrRun","parse_BrtCommentText","write_BrtCommentText","run","write_StrRun","parse_XLSBCell","iStyleRef","write_XLSBCell","parse_XLSBShortCell","write_XLSBShortCell","parse_XLSBCodeName","write_XLSBCodeName","parse_XLNullableWideString","write_XLNullableWideString","parse_XLNameWideString","parse_RelID","write_RelID","parse_RkNumber","fX100","fInt","RK","write_RkNumber","d100","parse_RfX","parse_UncheckedRfX","write_UncheckedRfX","parse_Xnum","write_Xnum","write_BrtColor","auto","nTS","tint","rgb","parse_ClipboardFormatOrString","3","14","VT_I2","VT_I4","VT_VARIANT","VT_USTR","VT_CUSTOM","DocSummaryPIDDSI","4","9","10","11","12","13","VT_VECTOR","15","16","17","19","22","2147483648","2147483651","1919054434","SummaryPIDSI","18","DocSummaryRE","SummaryRE","CountryEnum","20","39","45","46","47","48","49","82","84","86","90","105","213","216","218","351","354","358","420","886","961","962","963","964","965","966","971","972","974","981","65535","XLSFillPattern","XLSIcv","RBErr","ct2type","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml","application/vnd.ms-excel.binIndexWs","application/vnd.ms-excel.intlmacrosheet","application/vnd.ms-excel.binIndexMs","application/vnd.openxmlformats-package.core-properties+xml","application/vnd.openxmlformats-officedocument.custom-properties+xml","application/vnd.openxmlformats-officedocument.extended-properties+xml","application/vnd.openxmlformats-officedocument.customXmlProperties+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty","application/vnd.ms-excel.pivotTable","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml","application/vnd.openxmlformats-officedocument.drawingml.chart+xml","application/vnd.ms-office.chartcolorstyle+xml","application/vnd.ms-office.chartstyle+xml","application/vnd.ms-office.chartex+xml","application/vnd.ms-excel.calcChain","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings","application/vnd.ms-office.activeX","application/vnd.ms-office.activeX+xml","application/vnd.ms-excel.attachedToolbars","application/vnd.ms-excel.connections","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml","application/vnd.ms-excel.externalLink","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml","application/vnd.ms-excel.sheetMetadata","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml","application/vnd.ms-excel.pivotCacheDefinition","application/vnd.ms-excel.pivotCacheRecords","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml","application/vnd.ms-excel.queryTable","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml","application/vnd.ms-excel.userNames","application/vnd.ms-excel.revisionHeaders","application/vnd.ms-excel.revisionLog","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml","application/vnd.ms-excel.tableSingleCells","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml","application/vnd.ms-excel.slicer","application/vnd.ms-excel.slicerCache","application/vnd.ms-excel.slicer+xml","application/vnd.ms-excel.slicerCache+xml","application/vnd.ms-excel.wsSortMap","application/vnd.ms-excel.table","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml","application/vnd.openxmlformats-officedocument.theme+xml","application/vnd.openxmlformats-officedocument.themeOverride+xml","application/vnd.ms-excel.Timeline+xml","application/vnd.ms-excel.TimelineCache+xml","application/vnd.ms-office.vbaProject","application/vnd.ms-office.vbaProjectSignature","application/vnd.ms-office.volatileDependencies","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml","application/vnd.ms-excel.controlproperties+xml","application/vnd.openxmlformats-officedocument.model+data","application/vnd.ms-excel.Survey+xml","application/vnd.openxmlformats-officedocument.drawing+xml","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml","application/vnd.openxmlformats-officedocument.vmlDrawing","application/vnd.openxmlformats-package.relationships+xml","application/vnd.openxmlformats-officedocument.oleObject","image/png","CT_LIST","workbooks","xlsm","xlsb","xlam","xltx","strs","comments","charts","dialogs","macros","metadata","styles","type2ct","evert_arr","CT","CTYPE_XML_ROOT","xmlns","xmlns:xsd","xmlns:xsi","CTYPE_DEFAULTS","rels","Extension","ContentType","write_ct","f1","PartName","bookType","f2","f3","RELS","WB","SHEET","HLINK","VML","XPATH","XMISS","XLINK","CXML","CXMLP","VBA","get_rels_path","parse_rels","currentFilePath","!id","rel","Type","Target","Id","TargetMode","canonictarget","RELS_ROOT","write_rels","rid","RELS_EXTERN","add_rels","rId","relobj","targetmode","CT_ODS","write_rdf_type","write_meta_ods","CORE_PROPS","CORE_PROPS_REGEX","parse_core_props","cur","CORE_PROPS_XML_ROOT","xmlns:cp","xmlns:dc","xmlns:dcterms","xmlns:dcmitype","cp_doit","write_core_props","Props","CreatedDate","xsi:type","ModifiedDate","EXT_PROPS","load_props_pairs","HP","TOP","hp","parts","Worksheets","NamedRanges","DefinedNames","Chartsheets","ChartNames","EXT_PROPS_XML_ROOT","xmlns:vt","write_ext_props","W","Application","CUST_PROPS","custregex","CUST_PROPS_XML_ROOT","write_cust_props","pid","write_vt","fmtid","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","LastPrinted","Category","Manager","Company","AppVersion","ContentStatus","Identifier","Language","evert_XLMLDPM","xlml_set_prop","parse_FILETIME","dwLowDateTime","dwHighDateTime","parse_lpstr","pad","parse_lpwstr","parse_VtStringBase","stringType","parse_VtString","parse_VtHeadingPair","headingString","parse_TypedPropertyValue","parse_dictionary","CodePage","dict","parse_BLOB","bytes","ret","Size","parse_ClipboardData","parse_VtUnalignedString","cElements","parse_VtVecHeadingPairValue","parse_VtVecLpwstrValue","parse_VtVecUnalignedLpstrValue","write_TypedPropertyValue","write_FILETIME","parse_PropertySet","PIDSI","start_addr","NumProps","Dictionary","DictObj","PropID","Offset","PropH","fail","piddsi","oldpos","parsebool","XLSPSSkip","guess_property_type","write_PropertySet","entries","RE","hdr","piao","prop","pr","pio","unshift","pinfo","parse_PropertySetStream","NumSets","FMTID0","FMTID1","Offset0","Offset1","SystemIdentifier","PSet1","PSet0","rval","FMTID","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsenoop2","writebool","parseuint16","writeuint16","parseuint16a","parslurp","write_Bes","parse_ShortXLUnicodeString","cch","parse_XLUnicodeRichExtendedString","cbExtRst","fExtSt","fRichSt","cRun","write_XLUnicodeRichExtendedString","xlstr","otext","parse_XLUnicodeStringNoCch","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","parse_HyperlinkMoniker","extra","parse_URLMoniker","cAnti","preamble","ansiPath","parse_FileMoniker","parse_HyperlinkString","write_HyperlinkString","parse_LongRGBA","parse_LongRGB","parse_XLSCell","ixfe","write_XLSCell","parse_XTI","parse_RkRec","parse_Ref8U","rwFirst","rwLast","write_Ref8U","parse_RefU","parse_Ref","parse_FtCmo","ot","parse_FtSkip","FtTab","cf","fSharedNote","21","parse_BOF","BIFFVer","write_BOF","wb","write_BoundSheet8","hs","parse_DefaultRowHeight","miyRw","Unsynced","DyZero","ExAsc","ExDsc","write_Format","b5","parse_BIFF2Format","parse_Dimensions","write_XF","ixfeP","parse_BoolErr","parse_Bes","parse_XLHeaderFooter","parse_ExternName","fBuiltIn","fWantAdvise","fWantPict","fOle","fOleLink","fIcon","sbcch","udfName","parse_AddinUdf","Name","XLSLblBuiltIn","parse_Lbl","chKey","cce","itab","npflen","rgce","rgcb","parse_Rgce","parse_RgbExtra","parse_NameParsedFormula","parse_ExternSheet","parse_BIFF5ExternSheet","parse_Array","ref","parse_ArrayParsedFormula","parse_BIFF5OT","write_HLink","hl","O","hashidx","F","Pretarget","write_Hyperlink","write_HLinkTooltip","Tooltip","parse_ColInfo","cellStyles","colFirst","colLast","coldx","level","cchName","parse_Blank","parse_Scl","parse_String","DBF","dbf_codepage_map","100","101","102","103","104","106","107","120","121","122","123","124","125","126","150","151","152","200","201","202","203","37","38","87","88","89","108","135","dbf_reverse_map","dbf_to_sheet","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","codepage","fields","field","hend","sheetRows","dbf_to_aoa","_RLEN","?","","to_workbook","to_sheet","from_sheet","aoa","headers","hcnt","coltypes","guess","_guess","hf","_f","hb","rout","SYLK","sylk_escapes","AA","BA","CA","DA","HA","JA","AE","BE","CE","HE","AI","BI","CI","HI","AO","BO","CO","DO","HO","AU","BU","CU","HU","Aa","Ba","Ca","Da","Ha","Ja","Ae","Be","Ce","He","Ai","Bi","Ci","Hi","Ao","Bo","Co","Do","Ho","Au","Bu","Cu","Hu","KC","Kc","DN","Dn","Hy","B ","!","\"","#","(","%","'","H ","+",";","<","=",">","{","sylk_char_regex","sylk_char_fn","_","decode_sylk_char","newcc","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","rowinfo","colinfo","cw","Mval","rstr","C_seen_K","C_seen_X","C_seen_S","C_seen_E","formula","rc_to_a1","shrbase","shift_formula_str","F_seen","hidden","wch","process_col","hpt","hpx","pt2px","sylk_to_sheet","aoasht","sylk_to_aoa","write_ws_cell_sylk","a1_to_rc","RS","rec","wpx","width2px","px2char","rows","px2pt","write_ws_rows_sylk","coord","DIF","dif_to_aoa_str","dif_to_sheet","dif_to_aoa","push_field","push_value","topic","ETH","eth_to_sheet","eth_to_aoa","sep","meta","sheet_to_eth_data","PRN","set_text_arr","guess_seps","guess_sep_weights","guess_sep","instr","dsv_to_sheet_str","FS","sepcc","startcc","_re","finish_cell","Y","datestr","timestr","dateNF_fix","cellText","cellNF","outer","prn_to_sheet_str","lines","prn_to_aoa_str","prn_to_sheet","firstbyte","WK_","lotushopper","Enum","WK1Enum","lotus_to_workbook_buf","next_n","sidx","snames","realnames","refguess","vers","qpro","tmpcell","WK3Enum","osheets","rnames","!ref","parse_cell","parse_LABEL","write_LABEL","write_INTEGER","write_NUMBER","wk1_parse_rc","FuncTab","83","111","BinOpTab","parse_cell_3","write_LABEL_16","wsidx","parse_NUMBER_17","v1","v2","write_NUMBER_17","log2","parse_NUMBER_27","parse_SHEETNAMECS","write_XFORMAT_SHEETNAME","argc","argL","argR","args","wk1_fmla_to_csf","40","142","147","153","154","155","156","174","175","176","184","185","187","188","195","205","206","207","208","256","259","260","261","262","263","265","266","267","268","270","271","384","389","390","393","396","512","514","513","516","517","640","641","642","643","644","645","646","647","648","658","659","660","661","662","665","666","768","772","1537","1600","1602","1793","1794","1795","1796","1920","2048","2049","2052","2688","10998","12849","28233","28484","sheet_to_wk1","cols","write_biff_rec","write_RANGE","max_R","book_to_wk3","wscnt","write_BOF_WK3","parse_rs","tregex","rpregex","parse_r","rpr","font","pass","shadow","outline","strike","uval","family","valign","parse_rpr","rregex","rend","rs","filter","rs_to_html","nlregex","r_to_html","terms","intro","outro","align","parse_rpr2","sitregex","sirregex","sirphregex","parse_si","cellHTML","sstr0","sstr1","sstr2","SST","straywsregex","write_sst_xml","sst","bookSST","count","Count","uniqueCount","Unique","sitag","write_BrtSSTItem","write_sst_bin","write_BrtBeginSst","_JS2ANSI","parse_CRYPTOVersion","Major","Minor","parse_DataSpaceMapEntry","comps","parse_Primary","U","parse_TransformInfoHeader","ename","cmode","parse_EncryptionHeader","Flags","AlgID","valid","AlgIDHash","KeySize","ProviderType","CSPName","parse_EncryptionVerifier","Salt","Verifier","VerifierHash","parse_EncryptionInfo","verifier","parse_EncInfoStd","parse_EncInfoExt","KeyData","encryptedHmacKey","encryptedHmacValue","encs","uri","parse_EncInfoAgl","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","PasswordByte","PasswordDecoded","PadArray","InitialCode","XorMatrix","XorRor","crypto_CreateXorArray_Method1","byte1","byte2","Byte","password","Temp","PasswordLastChar","PadIndex","XorKey","CurrentElement","Char","CreateXorKey_Method1","Index","ObfuscationArray","crypto_MakeXorDecryptor","XorArrayIndex","XorArray","Data","Value","crypto_DecryptData_Method1","parse_FilePassHeader","Info","EncryptionVersionInfo","EncryptedVerifier","EncryptedVerifierHash","parse_RC4Header","EncryptionHeader","EncryptionVerifier","parse_RC4CryptoHeader","RTF","rtf_to_sheet","rtf_to_sheet_str","rowtf","rtfre","last_index","exec","lastIndex","rgb2Hex","rgb_tint","hex","hsl","G","H6","L2","rgb2HSL","X","h6","hsl2RGB","DEF_MDW","MAX_MDW","MIN_MDW","MDW","px","char2width","chr","cycle_width","collw","find_mdw_colw","delta","_MDW","coll","customWidth","PPI","pt","XLMLPatternTypeMap","None","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinHorzCross","cellXF_uint","cellXF_bool","numFmtRegex","cellXfRegex","fillsRegex","fontsRegex","bordersRegex","parse_sty_xml","themes","NumberFmt","formatCode","parse_numFmts","Fonts","bold","italic","underline","condense","extend","vertAlign","scheme","indexed","icv","themeElements","clrScheme","parse_fonts","Fills","patternType","bgColor","fgColor","parse_fills","Borders","border","diagonalUp","diagonalDown","parse_borders","xf","CellXf","alignment","vertical","horizontal","textRotation","indent","wrapText","parse_cellXfs","STYLES_XML_ROOT","write_sty_xml","NF","write_numFmts","cellXfs","write_cellXfs","write_BrtFmt","write_BrtFont","grbit","write_FontFlags","sss","charset","STY","rev_XLSBFillPTNames","parse_BrtFill","write_BrtFill","fls","write_BrtXF","write_Blxf","parse_BrtBorder","write_BORDERS_bin","write_STYLES_bin","xfId","builtinId","write_TABLESTYLES_bin","defTableStyle","defPivotStyle","write_BrtBeginTableStyles","write_sty_bin","write_FMTS_bin","write_FONTS_bin","write_FILLS_bin","fontId","fillId","borderId","write_CELLSTYLEXFS_bin","write_CELLXFS_bin","write_DXFS_bin","THEME","XLSXThemeClrScheme","clrsregex","fntsregex","fmtsregex","parse_themeElements","lastClr","themeltregex","parse_theme_xml","write_theme","Themes","themeXLSX","parse_FullColorExt","xclrType","nTintShade","xclrValue","parse_IcvXF","parse_ColorTheme","parse_ExtProp","extType","parse_XFExtGradient","write_xlmeta_xml","write_xlmeta_bin","write_BrtBeginEsfmd","cm","write_BrtBeginEsmdb","mdb","write_BrtMdb","XLMETA","IMG","DRAW","_shapeid","write_comments_vml","csize","bbox","xmlns:v","xmlns:o","xmlns:x","xmlns:mv","v:ext","joinstyle","gradientshapeok","o:connecttype","o:spt","coordsize","fillopts","color2","angle","fillxml","fillcolor","strokecolor","obscured","CMNT","CMNT_XML_ROOT","write_comments_xml","iauthor","parse_BrtCommentAuthor","write_comments_bin","comment","CT_VBA","VBAFMTS","DS","MS","rcregex","rcbase","rcfunc","fstr","crefregex","$0","$4","$5","shift_formula_xlsx","_xlfn","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_RgceLoc_BIFF2","parse_PtgAttrSpaceType","parse_SerAr","parse_PtgExtraMem","parse_PtgExtraArray","parse_PtgElfLoc","fQuoted","parse_RgceElfLoc","parse_PtgElfNoop","parse_PtgElfCol","parse_PtgElfColS","parse_PtgElfColSV","parse_PtgElfColV","parse_PtgElfLel","parse_PtgElfRadical","parse_PtgElfRadicalLel","parse_PtgElfRadicalS","parse_PtgElfRw","parse_PtgElfRwV","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","parsetab","Cetab","nameindex","rl","parse_RgceLocRel_BIFF2","cl","parse_RgceLocRel","parse_RgceAreaRel","ixti","parse_PtgNameX_BIFF5","PtgDupes","96","97","98","99","109","110","91","92","93","Ptg18","coltype","rt","Ptg19","bitSemi","bitIf","bitGoto","ptgs","stringify_array","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","quoteCharacters","get_ixti_raw","supbooks","XTI","SID","get_ixti","ixtiraw","sname","formula_quote_sheet_name","stringify_formula","stack","nameidx","last_sp","sp","fflen","func","lbl","names","xlfn","externbook","bookidx","ixtidata","lp","rp","sharedf","parsedf","fnd","arrayf","_left","parse_Formula","parse_FormulaValue","cbf","parse_XLSCellParsedFormula","shared","write_Formula","os","o1","write_FormulaValue","o3","bf","parse_XLSBParsedFormula","parse_XLSBArrayParsedFormula","parse_XLSBCellParsedFormula","parse_XLSBNameParsedFormula","parse_XLSBSharedParsedFormula","85","94","95","112","113","114","115","116","117","118","119","127","131","132","133","137","138","139","140","143","144","145","146","148","149","159","164","166","167","168","169","170","171","172","173","189","190","191","192","193","194","196","197","198","199","209","210","211","212","214","215","217","219","220","223","224","225","226","227","228","229","240","243","249","250","251","252","253","254","269","272","273","274","276","277","278","279","280","281","282","283","284","285","288","289","290","291","292","293","295","296","297","298","302","305","306","307","308","309","310","311","312","313","314","315","316","318","319","320","321","322","323","324","325","328","330","336","338","339","342","343","344","350","352","355","356","370","373","374","375","376","377","378","379","380","381","382","383","385","386","388","391","392","394","395","397","398","399","400","412","413","414","415","416","417","421","422","423","424","425","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","480","481","482","485","489","491","493","494","495","509","510","511","518","519","520","521","522","523","545","546","547","548","549","620","621","653","667","673","753","755","808","141","157","158","160","165","179","180","181","182","183","221","230","231","232","233","234","235","236","237","239","241","242","244","245","246","247","248","257","258","264","275","286","287","294","299","300","301","303","304","317","326","327","329","331","332","334","335","337","340","341","345","346","347","348","349","353","357","359","360","361","362","363","364","365","366","367","368","369","371","372","387","401","402","403","404","405","406","407","408","409","410","411","418","419","426","427","428","429","457","724","479","483","484","ods_to_csf_formula","ods_to_csf_3D","_ssfopts","WS","browser_has_Map","Map","get_sst_id","has","revarr","get","col_obj_w","outlineLevel","default_margins","margins","defs","left","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","safe_format","fillid","raw_rgb","check_ws","mergecregex","sheetdataregex","hlinkregex","dimregex","colregex","afregex","marginregex","sheetprregex","sheetprregex2","svsregex","parse_ws_xml","data1","data2","mtch","sheetPr","parse_ws_xml_sheetpr","parse_ws_xml_sheetpr2","parse_ws_xml_dim","svs","Views","sviewregex","zoomScale","zoom","rightToLeft","RTL","parse_ws_xml_sheetviews","seencol","coli","colm","colM","parse_ws_xml_cols","parse_ws_xml_data","afilter","parse_ws_xml_autofilter","merges","_merge","hlink","location","Rel","tooltip","rng","parse_ws_xml_hlinks","tmpref","codeName","CodeName","sheetprot_deffalse","sheetprot_deftrue","write_ws_xml_cell","oldt","oldv","Strings","revStrings","cellregex","rowregex","isregex","refregex","match_v","match_f","sdata","sstr","ftag","cells","cref","tagr","tagc","do_format","rowobj","rowrite","marr","marrlen","xlen","rstarti","outa","ht","rslice","cellFormula","___f","_tag","xlmeta","Types","_r","WS_XML_ROOT","xmlns:r","write_ws_xml","rdata","_drawing","needed","vbaraw","cname","Workbook","outlineprops","summaryBelow","summaryRight","above","write_ws_xml_sheetpr","sview","workbookViewId","write_ws_xml_sheetviews","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","params","height","_cell","customHeight","write_ws_xml_data","write_ws_xml_protection","Names","Sheet","Ref","write_ws_xml_autofilter","relc","ignoreEC","numberStoredAsText","sqref","r:id","write_row_header","ncolspan","lcs","caddr","first","last","write_BrtRowHdr","parse_BrtWsDim","write_BrtWsDim","parse_BrtShortReal","parse_BrtMergeCell","write_BrtMergeCell","BrtMarginKeys","write_ws_bin_cell","last_seen","ncell","write_BrtShortIsst","write_BrtCellIsst","write_BrtShortSt","write_BrtCellSt","write_BrtShortRk","write_BrtCellRk","write_BrtShortReal","write_BrtCellReal","write_BrtShortBool","write_BrtCellBool","write_BrtShortError","write_BrtCellError","write_BrtShortBlank","write_BrtCellBlank","write_MERGECELLS","write_COLINFOS","write_BrtColInfo","write_IGNOREECS","write_HLINKS","locidx","write_BrtHLink","write_WSVIEWS2","write_BrtBeginWsView","write_SHEETPROTECT","write_ws_bin","write_BrtWsProp","cap","write_CELLTABLE","write_AUTOFILTER","write_LEGACYDRAWING","parse_chart","csheet","!type","nc","cache","num","nf","parse_Cache","CHART","CHARTEX","CS","WBPropsDef","WBViewDef","SheetDef","CalcPrDef","push_defaults_array","defaults","push_defaults","parse_wb_defaults","WBProps","CalcPr","WBView","badchars","check_ws_name","_good","check_wb","N","codes","cn","wbnsregex","WB_XML_ROOT","write_wb_xml","write_names","workbookPr","Hidden","sheetId","Comment","localSheetId","parse_BrtFRTArchID$","ArchID","write_BOOKVIEWS","vistab","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BrtWbProp","iTabID","strRelID","write_BrtBundleSh","write_BUNDLESHS","parse_wb","R_n","Ptg","parse_wb_bin","dname","dnstart","parse_wb_xml","parse_ws","ai","af","vm","aii","_d","relId","rfx","parse_ws_bin","parse_cs","!drawel","!rel","parse_cs_bin","parse_cs_xml","parse_sty","parse_sty_bin","parse_sst","parse_sst_bin","parse_sst_xml","parse_cmnt","authors","author","parse_comments_bin","commentList","authtag","cmnttag","authorId","guid","textMatch","parse_comments_xml","parse_cc","parse_cc_bin","parse_cc_xml","parse_xlink","parse_xlink_bin","parse_xlmeta","parse_xlmeta_bin","parse_xlmeta_xml","write_ws","write_cmnt","attregexg2","attregex2","xlml_parsexmltag","words","xlml_parsexmltagobj","xlml_set_custprop","Custprops","oval","safe_format_xlml","process_style_xlml","stag","Interior","I","Pattern","ID","parse_xlml_data","csty","sid","StyleID","interiors","Parent","UTC","Formula","ArrayRange","xlml_clean_comment","xlml_normalize","xlmlregex","parse_xlml_xml","Rn","opening","ishtml","_o","HTML_","sheetnames","cursheet","sheetname","dtag","didx","fidx","pidx","cstys","wsprops","raw_Rn3","HRef","HRefScreenTip","MergeAcross","MergeDown","cma","cmd","AutoFitHeight","Height","Format","ssfidx","Width","_col","Span","_NamedRange","_DefinedName","RefersTo","AutoFilter","Range","parse_fods","Margin","pagemargins","Top","Left","Right","Bottom","bookSheets","bookProps","parse_xlml","fix_read_opts","write_props_xlml","xlml_write_docprops","BLACKLIST","dt:dt","xlml_write_custprops","write_name_xlml","ss:Name","ss:RefersTo","write_ws_xlml_cell","attr","mi","ss:Author","write_ws_xlml_row","write_ws_xlml","write_ws_xlml_names","ss:Index","skip","write_ws_xlml_table","x:Margin","x:Bottom","x:Left","x:Right","x:Top","objects","scenarios","selectLockedCells","selectUnlockedCells","write_ws_xlml_wsopts","write_xlml","General","ss:Format","ss:ID","write_sty_xlml","write_names_xlml","xmlns:ss","xmlns:dt","xmlns:html","parse_compobj","AnsiUserType","AnsiClipboardFormat","parse_ClipboardFormatOrAnsiString","Reserved1","UnicodeClipboardFormat","parse_ClipboardFormatOrUnicodeString","Reserved2","slurp","insitu","XLSRecordEnum","ll","safe_format_xf","make_cell","parse_workbook","lastcell","cmnt","rngC","rngR","temp_val","country","Directory","last_formula","cur_sheet","Preamble","last_cell","XFs","palette","get_rgb","addcell","file_depth","xfd","icvFore","icvBack","process_cell_style","afi","rrtabid","lastuser","winlocked","wtf","last_lbl","last_Rn","BIFF2Fmt","BIFF2FmtTable","FilterDatabases","seen_codepage","RecordType","Date1904","WriteProtect","cpval","CalcRefMode","FullCalc","fDialog","fBelow","fRight","ExternCount","tmpri","1033","1024","1280","1536","biffguess","fakebs8","rknum","rkrec","_fr","_fc","_fe","_arraystart","isst","_j","_ixfe","b4idx","b2idx","cmo","lastobj","TxO","ImData","noteobj","xfe","Encryption","Metadata","Country","PSCLSID","SI","DSI","UDI","CompObj","WorkbookP","bookVBA","newcfb","newpath","make_vba_xls","DocSummary","Summary","HeadingPairs","TitlesOfParts","parse_xls_props","bookFiles","write_xlscfb","wbpath","write_biff_buf","Keys","DSEntries","SEntries","CEntries","CEntries2","write_xls_props","vba","fill_vba_xls","fBold","fItalic","fUnderline","fStrikeout","fOutline","fShadow","fCondense","fExtend","parse_FontFlags","bCharSet","xColorType","bR","bG","bB","parse_BrtColor","ixfeParent","ifmt","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","333","fAlwaysCalc","486","487","488","490","492","display","496","497","498","499","500","501","502","503","504","505","506","507","508","515","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","550","551","552","553","554","555","556","557","558","559","560","561","562","564","565","566","569","570","572","573","574","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","649","650","651","652","654","655","656","657","663","664","668","669","671","672","674","675","676","677","678","679","680","681","1025","1026","1027","1028","1029","1030","1031","1032","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1177","1178","1180","1181","1182","2050","2051","2053","2054","2055","2056","2057","2058","2060","2067","2068","2069","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","3072","3073","4096","4097","5002","5003","5081","5082","5083","5084","5085","5086","5087","5088","5089","5090","5092","5093","5094","5095","5096","5097","5099","idObj","stAuthor","parse_NoteSh","verificationBytes","parse_XORObfuscation","dyHeight","fl","Pos","Dim","CurTab","FirstTab","Selected","TabRatio","UserName","fts","parse_BIFF5Obj","parse_FtArray","ccv","rw","rkrecs","lastcol","ixfes","fStyle","alc","fWrap","alcV","fJustLast","trot","cIndent","fShrinkToFit","iReadOrder","fAtrNum","fAtrFnt","fAtrAlc","fAtrBdr","fAtrPat","fAtrProt","dgLeft","dgRight","dgTop","dgBottom","icvLeft","icvRight","grbitDiag","icvTop","icvBottom","icvDiag","dgDiag","fsxButton","parse_CellStyleXF","cmcs","ucnt","extsst","dsst","ctab","virtPath","rgst","texts","accel","parse_ControlInfo","cchText","sVer","displayName","targetFrameName","moniker","oleMoniker","fileTime","Loc","parse_Hyperlink","xnum","1212","cUse","parse_SharedParsedFormula","wzTooltip","2059","2061","2062","2063","2064","2066","2146","2147","2148","2149","2150","2151","2152","2154","2155","2156","2161","2162","2164","2165","2166","2167","2168","2169","2170","2171","2172","cxfs","crc","2173","cexts","2174","2175","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2194","2195","2196","cchComment","2197","2198","themeXML","2199","2200","2201","2202","2203","2204","2205","2206","2207","2211","parse_frtHeader","2212","2213","2214","2215","4098","4099","4102","4103","4105","4106","4107","4108","4109","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4132","4133","4134","4135","4146","4147","4148","4149","4154","4156","4157","4158","4159","4160","4161","4163","4164","def","area","4165","4166","4168","4170","4171","4174","4175","4176","4177","4187","4188","4189","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","env","lcb","2157","2163","2177","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2262","29282","XLSRE","write_BIFF2Cell","write_ws_biff2_cell","write_BIFF2NUM","write_BIFF2BERR","write_BIFF2LABEL","write_biff2_buf","write_ws_biff2","write_FONTS_biff8","write_Font","write_ws_cols_biff8","write_ColInfo","write_ws_biff8_cell","write_Number","write_BoolErr","write_LabelSst","b8","write_Label","write_ws_biff8","guts","_WB","_sheet","MAX_ROWS","write_Dimensions","write_Window2","write_MergeCells","HL","write_ws_biff8_hlinks","write_FEAT","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","safe1904","write_FMTS_biff8","write_CELLXFS_biff8","write_Country","write_biff_continue","write_SST","blen","fix_write_opts","write_biff8_buf","html_to_sheet","mtch2","re","split_regex","hd","midx","colspan","rowspan","_t","make_html_row","editable","make_html_preamble","_BEGIN","_END","book_new","book_append_sheet","_row","BEGIN","END","_preamble","sheet_add_dom","or_R","or_C","getElementsByTagName","is_dom_element_hidden","elts","hasAttribute","getAttribute","innerHTML","Aelts","Aelti","parse_dom_table","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","get_get_computed_style_function","getPropertyValue","number_formats","parse_content_xml","day","year","hours","minutes","seconds","am-pm","day-of-week","era","quarter","sheetag","rowtag","fixed","NFtag","ctag","textp","textpidx","textR","row_ol","number_format_map","mrange","rowpeat","colpeat","atag","_Ref","creator","creatoridx","isstub","intable","rptR","rpt","nrange","ptp","parse_ods","FEtag","parse_manifest","write_styles_ods","master_styles","xmlns:office","xmlns:table","xmlns:style","xmlns:text","xmlns:draw","xmlns:fo","xmlns:xlink","xmlns:number","xmlns:svg","xmlns:of","office:version","write_content_ods","null_cell_xml","ods","ROWS","_Fref","text_p","_tgt","xlink:href","xmlns:meta","xmlns:presentation","xmlns:chart","xmlns:dr3d","xmlns:math","xmlns:form","xmlns:script","xmlns:ooo","xmlns:ooow","xmlns:oooc","xmlns:dom","xmlns:xforms","xmlns:sheet","xmlns:rpt","xmlns:xhtml","xmlns:grddl","xmlns:tableooo","xmlns:drawooo","xmlns:calcext","xmlns:loext","xmlns:field","xmlns:formx","xmlns:css3t","fods","xmlns:config","office:mimetype","cidx","colobj","write_automatic_styles_ods","write_ods","manifest","rdf","write_rdf","write_manifest","NUMBERS","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","__toCommonJS","temp","copyDefault","desc","enumerable","__reExport","WeakMap","numbers_exports","all","__export","parse_numbers","numbers_default","u8_to_dataview","array","DataView","buffer","byteOffset","byteLength","u8str","u8","TextDecoder","u8concat","u8a","reduce","acc","popcnt","readDecimal128LE","exp","mantissa","parse_varint49","ptr","varint","varint_to_i32","i32","parse_shallow","mappa","_a","parse_snappy_chunk","chunks","rsst","dv","getUint32","data_offset","ieee","getFloat64","parse_old_storage","d128","parse_storage","docroot","packets","deframe","messages","parse_iwa","packet","iwams","iwam","parse_Reference","root2","pb","tableref","mtype","store","parse_TST_TableDataList","tiles","tl","parse_TST_TileRowInfo","tile2","parse_TST_TableModelArchive","parse_TST_TableInfoArchive","parse_sheetroot","parse_docroot","le","rtp","rtpref","tswpsa","_b","_g","_i","pre_bnc","pre_bnc_offsets","storage_offsets","getUint16","fix_opts_func","safe_parse_wbrels","wbrels","safe_parse_sheet","relsPath","sheetRels","stype","dfile","drelsp","chartp","parse_drawing","crelsp","parse_ds","sheet_insert_comments","strip_front_slash","_zip","getzipbin","binname","dir","links","coreprops","extprops","custprops","calcchains","drawings","TODO","ctext","calcchain","parse_ct","parse_theme","link","propdata","parse_ext_props","toks","warn","parse_cust_props","deps","bookDeps","wbsheets","wbext","wbrelsi","wbrelsfile","nmode","wsloop","snjseen","snj","Deps","Styles","bin","parse_xlsxcfb","dsm","parse_DataSpaceMap","seds","parse_DataSpaceDefinition","einfo","decrypt_agile","decrypt_std76","foo","vbafmt","_sn","wsrels","_type","need_vml","rId1","write_sst","write_wb","write_sty","write_zip_xlsxb","read_plaintext","read_prn","infile","read_binary","bstrify","ab","vu","read_cfb","OLD_WTF","read_wb_ID","read_zip","read_utf16","read_plaintext_raw","write_obj_str","write_htm_str","write_csv_str","sheet_to_csv","write_slk_str","write_dif_str","write_prn_str","write_rtf_str","write_txt_str","sheet_to_txt","write_dbf_buf","write_eth_str","write_wk1_buf","write_cfb_ctr","write_zip_typeXLSX","write_zip_denouement","write_zip_xlsx","oopts","ftype","nodebuffer","string","generate","encrypt_agile","write_string_type","bom","write_binary_type","write_stxt_type","write_cfb_type","write_zip_type","resolve_book_type","xls","slk","socialcalc","Sh33tJS","_cb","Function","make_json_row","defval","isempty","__rowNum__","rawNumbers","outi","counter","CC","blankrows","qreg","make_csv_row","txt","forceQuotes","endregex","skipHidden","strip","sheet_add_json","js","skipHeader","JS","sheet_get_cell","split_cell","json_to_sheet","table_to_sheet","table_to_book","sheet_to_html","sheet_to_formulae","cmds","sheet_to_row_object_array","get_default","ws_get_cell_stub","RC","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_hyperlink","cell_set_internal_link","cell_add_comment","sheet_set_array_formula","dynamic","rngstr","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn-bd","./bn-bd.js","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-in","./en-in.js","./en-nz","./en-nz.js","./en-sg","./en-sg.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-mx","./es-mx.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fil","./fil.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-deva","./gom-deva.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./oc-lnc","./oc-lnc.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tk","./tk.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-mo","./zh-mo.js","./zh-tw","./zh-tw.js"],"mappings":"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CAC,GAAA,KACAC,GAAA,KACAE,GAAA,KACAurB,GAAA,KACAtrB,GAAA,KACAE,GAAA,KACAC,GAAA,KACAorB,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACArrB,GAAA,KACAG,GAAA,KACAM,GAAA,KACAG,GAAA,KACAE,GAAA,KACAa,GAAA,KACA2pB,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,MAIAC,IACA,KACA,QACA,aACA,WACA,YACA,iBACA,eACA,WACA,SACA,WACA,cACA,kBACA,gBACA,YACA,UACA,YACA,eACA,UACA,YAOA,IAgQAv/B,GApKAw/B,GAAAhU,IA1FA,EACA,SACA,SACA,MACA,IACA,SACA,SACA,MAGA,EACA,SACA,SACA,MACA,IACA,SACA,SACA,MAEA,QACA,MACA,IACA,QACA,QACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,MACA,SAEA,IACA,SACA,SACA,MACA,QACA,QACA,MACA,IACA,MACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,SACA,QACA,QAGA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GA9F4ExoC,IAAA,SAAA6d,GAA6B,OAAAA,GAAA,OAAAA,GAAA,UAAAA,MAmGzG+2B,IACAr5B,EAAA,SACA4S,EAAA,UACAwrB,GAAA,UACAtrB,GAAA,QACAM,GAAA,SACAO,GAAA,QACAE,GAAA,OACAC,GAAA,gBACA5S,IAAA,SAEAggC,GAA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CAuqB,IAAA,MACAC,IAAA,OACAxd,IAAA,OACAkiB,IAAA,QACAC,IAAA,QACAC,IAAA,SACAC,IAAA,OACAC,IAAA,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,UACA5wB,IAAA,aACAC,IAAA,OACAC,IAAA,QACAC,IAAA,YACAC,IAAA,OACAC,IAAA,OACAC,IAAA,QACAuwB,IAAA,SACA3pE,IAAA,WACAC,IAAA,UACAC,IAAA,IACA0pE,IAAA,IACAC,IAAA,QACAC,IAAA,SACA3pE,IAAA,QACA+5C,IAAA,UACA95C,IAAA,QACA2pE,IAAA,WACAC,IAAA,SACAC,IAAA,OACAC,IAAA,YACA6N,IAAA,YACA3vB,IAAA,MACA+hB,IAAA,MACAC,IAAA,MACAC,IAAA,UACAC,IAAA,UACAjiB,IAAA,UACAkiB,IAAA,WACAC,IAAA,WACAnxB,IAAA,OACAC,IAAA,UACAC,IAAA,WACA+O,IAAA,cACAC,IAAA,iBACAC,IAAA,gBACAC,IAAA,iBACAuvB,IAAA,WACAC,IAAA,cACAxN,IAAA,iBACAyN,IAAA,iBACA73E,IAAA,aACAC,IAAA,QACAC,IAAA,UACAmqE,IAAA,WACAyN,IAAA,QACAxN,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,aACAC,IAAA,MACAC,IAAA,QACAC,IAAA,QACAxiB,IAAA,OACAC,IAAA,WACAC,IAAA,UACApoD,IAAA,OACAC,IAAA,UACA23E,IAAA,YACAC,IAAA,UACAC,IAAA,OACAC,IAAA,UACAC,IAAA,UACA3vB,IAAA,OACAC,IAAA,WACApoD,IAAA,gBACAqoD,IAAA,aACAC,IAAA,eACAmiB,IAAA,WACAC,IAAA,YACAC,IAAA,WACAC,IAAA,OACAC,IAAA,SACAC,IAAA,OACAviB,IAAA,UACAwiB,IAAA,QACAC,IAAA,QACAC,IAAA,YACAC,IAAA,UACApyB,IAAA,aACAC,IAAA,aACA94C,IAAA,WACAuoD,IAAA,QACAC,IAAA,UACAC,IAAA,WACAC,IAAA,QACAwiB,IAAA,SACAC,IAAA,OACAC,IAAA,OACAC,IAAA,UACAv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uF,OAAAsuF,EAAA,GAAAlrG,OAAA,IAAAi2B,EAAArwB,MAAAslG,EAAA,QAEA,MAEA,oBACA,MACA,uBACA,yBACA,+BACA,6BACA,iBACA,iBACA,YACA,cACA,iBACA,iBACA,cACA,aACA,4BACA,mBACA,gBACA,oBACA,sBACA,uBACA,SAAAA,EAAA,IAAmB,IAAAtpE,EAAA3L,EAAA2B,OAAA,KAAAszE,EAAA,aAAAxsG,MAAA,cAAAkjC,EAAAn4B,KAAA,UACnB,MAAAyhG,EAAA,GAAAtuF,OAAAsuF,EAAA,GAAAlrG,OAAA,IAAAi2B,EAAArwB,MAAAslG,EAAA,QACA,MAEA,iBAEA,QAEA,MAAAj1E,EAAAj2B,QAAA,YAAAkrG,EAAA,UAAAiC,GAAA5nF,EAAAlE,GAEA,MAAA4U,EAAAj2B,QAAA,OAAAkrG,EAAA,UAAAiC,GAAA5nF,EAAAlE,GAEA,IAAA+T,IAAA,EACA,OAAAa,IAAAj2B,OAAA,OAEA,oCAAAkrG,EAAA,IACA,eACA,gCACA,yBACA,2BACA,aACA,YACA,YACA,UACA,uBACA,gCACA,QAAA91E,IAAA,EACK,MAGL,8BAAA81E,EAAA,IACA,cACA,qBACA,yBACA,YACA,cACA,gBACA,eACA,4BACA,QAAA91E,IAAA,EACK,MAGL,2BAAA81E,EAAA,IACA,eAEAvM,EAAA6F,QAAAriF,UAAA,EACA,MACA,mBACA,kBACA,iBACA,iBACA,eACA,uBACA,oBACA,qBACA,kBACA,sBACA,wBACA,cACA,gBACA,iBACA,sBACA,qBACA,UACA,6BACA,0BACA,gBACA,oBACA,gBACA,WACA,UACA,YACA,qBACA,kBACA,eACA,oBACA,UACA,iBACA,cACA,eACA,cACA,iBACA,cACA,YACA,WACA,UACA,oBACA,qBACA,+BACA,aACA,kBACA,+BACA,QAAAiT,IAAA,EACK,MAGL,6BAAA81E,EAAA,IACA,iBACA,aACA,kBACA,QAAA91E,IAAA,EACK,MAGL,8BAAA81E,EAAA,IACA,cACA,UAAAA,EAAA,GAAAxvF,OAAA,SACA,SAAAwvF,EAAA,UAAA3lF,EAAA7J,MAAAmwF,EAAAX,EAAArjG,QACA,kBAAAkkG,EAAAxG,OAAA,EAA8C,MAC9C,sBAAAwG,EAAAxG,OAAA,OAEAsG,EAAAX,EAAArjG,MAAAqjG,EAAA,GAAAlrG,OACA,MACA,aACAwrG,EAAA,aAAAtT,GAAAsT,EAAA,eAAuE,QACvE7uF,OAAAusB,GAAAgiE,EAAA,IAAAkC,UAAA5B,EAAA,YAAA/lG,QAAAyjC,GAAAgiE,EAAA,IAAAkC,QACA,MACA,aACA5B,EAAA,aAAAtT,GAAAsT,EAAA,eAAuE,QACvE7uF,OAAAusB,GAAAgiE,EAAA,IAAAkC,UAAA5B,EAAA,YAAA/S,QAAAvvD,GAAAgiE,EAAA,IAAAkC,QACA,MACA,kBACA,IAAAC,GAAAnkE,GAAAgiE,EAAA,IACAM,EAAA,aAAAtT,GAAAsT,EAAA,eAAuE,QACvE7uF,OAAA0wF,GAAAC,OAAA9B,EAAA,YAAAjT,KAAA8U,GAAAC,KACA3wF,OAAA0wF,GAAAE,QAAA/B,EAAA,YAAAnT,MAAAgV,GAAAE,MACA5wF,OAAA0wF,GAAAG,SAAAhC,EAAA,YAAAlT,OAAA+U,GAAAG,OACA7wF,OAAA0wF,GAAAI,UAAAjC,EAAA,YAAAhT,QAAA6U,GAAAI,QACA,MACA,yBACA9O,EAAAtE,QAAAsE,EAAAtE,UACAsE,EAAAtE,MAAA,KAAAsE,EAAAtE,MAAA,OACAsE,EAAAtE,MAAA,GAAAK,KAAA,EACA,MAEA,kBACA,0BAEA,sBACA,oBAGA,4BAGA,gBACA,gBACA,uBACA,0BAEA,eACA,YACA,kBACA,YACA,YACA,WACA,aACA,aACA,gBACA,eACA,qBACA,sBACA,uBACA,uBACA,2BACA,yBACA,qBACA,iBACA,oBACA,wBACA,gBACA,qBACA,qBACA,qBACA,oBACA,eACA,eACA,gBACA,qBACA,WACA,kBACA,gBACA,gBACA,kBACA,sBACA,sBACA,sBACA,sBACA,4BACA,uBACA,oBACA,0BACA,+BACA8Q,EAAA,cAAAA,EAAA,gBACAA,EAAA,YAAAzM,OAAA,EACA,MACA,oBACA,2BACA,+BACA,kCACAyM,EAAA,cAAAA,EAAA,gBACAA,EAAA,YAAAnT,MAAA,EACA,MACA,oBACA,wBACA,uBACA,qBACA,0BACA,oBACA,0BACA,iBACA,oBACA,gBACA,4BACA,QAAAjjE,IAAA,EACK,MAGL,yCAAA81E,EAAA,IACA,2BACA,gCACA,uBACA,eACA,iBACA,kBACA,iBACA,6BACA,uBACA,eACA,gBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,uBACA,WACA,eACA,eACA,iBACA,6BACA,eACA,gBACA,oBACA,iBACA,0BACA,aACA,eACA,gBACA,oBACA,eACA,wBACA,qBACA,kBACA,qBACA,kBACA,kBACA,sBACA,yBACA,wBACA,2BACA,4BACA,wBACA,QAAA91E,IAAA,EACK,MAGL,wBAAA81E,EAAA,IACA,gBACA,eACA,gBACA,eACA,eACA,aACA,mBACA,QAAA91E,IAAA,EACK,MAGL,wBAAA81E,EAAA,IACA,uBACA,0BACA,oBACA,yBACA,QAAA91E,IAAA,EACK,MAGL,wBAAA81E,EAAA,IACA,SACA,qBACA,wBACA,kBACA,gBACA,yBACA,qBACA,gBACA,iBACA,iBACA,kBACA,kBACA,eACA,aACA,iBACA,qBACA,yBACA,yBACA,aACA,aACA,cACA,wBACA,2BACA,qBACA,gBACA,iBACA,UACA,YACA,qBACA,sBACA,+BACA,QAAA91E,IAAA,EACK,MAEL,qBACA,OAAA81E,EAAA,IACA,YAEA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,aACA,aAEA,0BACA,QAAA91E,IAAA,EACK,MAEL,cACA,4BACA,OAAA81E,EAAA,IACA,YACA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,oBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,aACA,mBACA,QAAA91E,IAAA,EACK,MAGL,6CAAA81E,EAAA,IACA,UACA,YACA,YACA,YACA,YACA,cACA,eACA,gBACA,kBACA,0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C,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,WAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,WAAA,OACAC,cAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,YAAA,OACAC,eAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,WAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,QAAA,OACAC,WAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,WAAA,OACAC,QAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,WAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,YAAA,OACAC,eAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,QAEA,SAAA3sJ,EAAAC,GACA,OAAAC,EAAAC,EAAAF,IAEA,SAAAE,EAAAF,GACA,IAAAG,EAAAV,EAAAO,GACA,KAAAG,EAAA,GACA,UAAAC,MAAA,uBAAAJ,EAAA,MACA,OAAAG,EAEAJ,EAAAM,KAAA,WACA,OAAAC,OAAAD,KAAAZ,IAEAM,EAAAQ,QAAAL,EACAM,EAAAC,QAAAV,EACAA,EAAAI,GAAA,2BC9RAK,EAAAC,SAAkBC,KAAA,OAAAC,MAAA,kEAAAC,MAAA,8DAAAC,QAAA,oDCAlBL,EAAAC,SAAkBC,KAAA,MAAAC,MAAA,gEAAAC,MAAA,+HAAAC,QAAA","file":"static/js/app.0db7b4d9de46c2abfefd.js","sourcesContent":["var map = {\n\t\"./东北炖大鹅.jpg\": \"LAUO\",\n\t\"./地三鲜.jpg\": \"Qhgl\",\n\t\"./溜肉段.jpg\": \"YRkV\",\n\t\"./红烧鸡爪.jpg\": \"bbFG\",\n\t\"./锅包肉.jpg\": \"QCJy\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"CU6Q\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cooking ^\\.\\/.*\\.jpg$\n// module id = CU6Q\n// module chunks = 1","module.exports = {\"name\":\"东北炖大鹅\",\"need\":[\"大鹅\",\"米酒/白酒/料酒\",\"啤酒\",\"姜丝、姜片\",\"香叶\",\"八角\",\"桂皮\",\"干辣椒\",\"花椒\",\"大葱葱段\",\"蒜粒\",\"生抽\",\"老抽\",\"蚝油\",\"盐\",\"味精\"],\"todo\":[\"大鹅洗净切块反复冲洗几遍\",\"冷水下锅加姜片，水开加米酒/白酒/料酒\",\"撇浮沫，保留汤汁，控水捞出大鹅\",\"准备姜丝，香叶，八角，桂皮，干辣椒，花椒，葱端，蒜粒\",\"猪油炒鹅，变色放料，翻炒均匀\",\"加三勺生抽，两勺老抽，两勺耗油，继续翻炒均匀\",\"加啤酒，加原汤汁，大火烧开转小火\",\"炖两个小时，加盐，加粉条，大火闷煮五分钟\",\"开盖大火收汁，最后撒葱花\"],\"remarks\":\"煸炒时间要足够，新鲜大鹅可以不焯水，加汤汁、啤酒一定要加够，有的粉条可以出锅前20分钟放\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/cooking/menu/东北炖大鹅.json\n// module id = Cay0\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/东北炖大鹅.aa07d1f.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cooking/东北炖大鹅.jpg\n// module id = LAUO\n// module chunks = 1","<template>\n  <div id=\"app\">\n    <a-layout id=\"components-layout-demo-custom-trigger\">\n      <a-layout-sider v-model=\"collapsed\" :trigger=\"null\" collapsible>\n        <div class=\"logo\" />\n        <a-menu\n          theme=\"dark\"\n          mode=\"inline\"\n          :default-selected-keys=\"[defaultSelectedKeys]\"\n        >\n          <a-menu-item v-for=\"item in menuList\" :key=\"item.componentName\">\n            <router-link :to=\"item.path\">\n              <a-icon :type=\"item.icon\" />\n              <span>{{ item.name }}</span>\n            </router-link>\n          </a-menu-item>\n        </a-menu>\n      </a-layout-sider>\n      <a-layout>\n        <a-layout-header style=\"background: #fff; padding: 0\">\n          <div class=\"header-title\">{{$route.name}}</div>\n          <!-- <a-icon\n            class=\"trigger\"\n            :type=\"collapsed ? 'menu-unfold' : 'menu-fold'\"\n            @click=\"() => (collapsed = !collapsed)\"\n          /> -->\n        </a-layout-header>\n        <a-layout-content\n          :style=\"{\n            margin: '24px 16px',\n            padding: '24px',\n            background: '#fff',\n            minHeight: 'calc(100vh - 112px)',\n          }\"\n        >\n          <router-view />\n        </a-layout-content>\n      </a-layout>\n    </a-layout>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n\n    return {\n      collapsed: false,\n      menuList: this.$router.options.routes,\n      defaultSelectedKeys: this.$route.matched && this.$route.matched.length ? this.$route.matched[0].components.default.name : '首页',\n    };\n  },\n  created() {\n    console.log(this.$router.options.routes);\n    console.log(this.$route);\n  },\n  method: {\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  .header-title {\n    font-weight: bold;\n    height: 100%;\n    font-size: 20px;\n    text-align: left;\n    padding-left: 24px;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('a-layout',{attrs:{\"id\":\"components-layout-demo-custom-trigger\"}},[_c('a-layout-sider',{attrs:{\"trigger\":null,\"collapsible\":\"\"},model:{value:(_vm.collapsed),callback:function ($$v) {_vm.collapsed=$$v},expression:\"collapsed\"}},[_c('div',{staticClass:\"logo\"}),_vm._v(\" \"),_c('a-menu',{attrs:{\"theme\":\"dark\",\"mode\":\"inline\",\"default-selected-keys\":[_vm.defaultSelectedKeys]}},_vm._l((_vm.menuList),function(item){return _c('a-menu-item',{key:item.componentName},[_c('router-link',{attrs:{\"to\":item.path}},[_c('a-icon',{attrs:{\"type\":item.icon}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(item.name))])],1)],1)}),1)],1),_vm._v(\" \"),_c('a-layout',[_c('a-layout-header',{staticStyle:{\"background\":\"#fff\",\"padding\":\"0\"}},[_c('div',{staticClass:\"header-title\"},[_vm._v(_vm._s(_vm.$route.name))])]),_vm._v(\" \"),_c('a-layout-content',{style:({\n          margin: '24px 16px',\n          padding: '24px',\n          background: '#fff',\n          minHeight: 'calc(100vh - 112px)',\n        })},[_c('router-view')],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8d059734\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8d059734\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8d059734\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('h1',[_vm._v(_vm._s(_vm.msg))])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ee6e237a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ee6e237a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ee6e237a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ee6e237a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  data () {\n    return {\n      msg: 'Welcome to family pay cms'\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/HelloWorld.vue","<template>\n  <div class=\"home-container\">\n    <div class=\"home-container-top\">\n      <div\n        :style=\"{ color: '#841584' }\"\n        @click=\"readWorkbookFromRemoteFile(fileUrl)\"\n      >\n        readWorkbookFromRemoteFile\n      </div>\n    </div>\n    <div class=\"table-container\">\n      <a-table :columns=\"columns\" :data-source=\"tableData\" :pagination=\"false\">\n        <span slot=\"changeMoney\" slot-scope=\"text, record\">\n          <a-icon v-if=\"record.type == '收入'\" style=\"color: red\" type=\"rise\" />\n          <a-icon v-else style=\"color: green\" type=\"fall\" />\n          {{ text }}\n        </span>\n      </a-table>\n    </div>\n  </div>\n</template>\n<script>\nimport * as XLSX from \"xlsx\";\nconst columns = [\n  {\n    title: \"日期\",\n    dataIndex: \"date\",\n    key: \"date\",\n  },\n  {\n    title: \"金额变动类型\",\n    dataIndex: \"type\",\n    key: \"type\",\n    filters: [\n      { text: \"支出\", value: \"支出\" },\n      { text: \"收入\", value: \"收入\" },\n    ],\n    onFilter: (value, record) => record.type.includes(value),\n  },\n  {\n    title: \"金额变动详细类型\",\n    dataIndex: \"detailType\",\n    key: \"detailType\",\n  },\n  {\n    title: \"变化金额\",\n    dataIndex: \"changeMoney\",\n    key: \"changeMoney\",\n    scopedSlots: { customRender: \"changeMoney\" },\n    sorter: (a, b) => a.changeMoney - b.changeMoney,\n  },\n  {\n    title: \"使用人\",\n    dataIndex: \"user\",\n    key: \"user\",\n    filters: [\n      { text: \"male\", value: \"male\" },\n      { text: \"female\", value: \"female\" },\n      { text: \"family\", value: \"family\" },\n      { text: \"children\", value: \"children\" }\n    ],\n    onFilter: (value, record) => record.user.includes(value),\n  },\n  {\n    title: \"备注\",\n    dataIndex: \"remarks\",\n    key: \"remarks\",\n  },\n];\nexport default {\n  name: \"Table\",\n  data() {\n    return {\n      tableData: [],\n      columns,\n      fileUrl:\n        \"https://afanticar-test.oss-cn-hangzhou.aliyuncs.com/aftpm/video-demo/YYYY-MM.xlsx\",\n    };\n  },\n  mounted() {\n    console.log(XLSX);\n    this.readWorkbookFromRemoteFile(this.fileUrl, this.setTable);\n  },\n  methods: {\n    readWorkbookFromRemoteFile(url, callback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"get\", url, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = function (e) {\n        if (xhr.status == 200) {\n          var data = new Uint8Array(xhr.response);\n          var workbook = XLSX.read(data, { type: \"array\" });\n          var json = workbook.Sheets[workbook.SheetNames[0]];\n          var newData = XLSX.utils.sheet_to_json(json, { header: 1 });\n          console.log(\"workbook\", workbook);\n          console.log(\"json\", json);\n          if (callback) callback(newData);\n        }\n      };\n      xhr.send();\n    },\n    setTable(data) {\n      console.log(data);\n      this.tableData = [];\n      if (data.length > 1) {\n        for (let i = 1; i < data.length; i++) {\n          this.tableData.push({\n            key: i,\n            date: data[i][0],\n            type: this.splitText(data[i][1]),\n            detailType: this.splitText(data[i][2]),\n            changeMoney: data[i][3],\n            user: this.splitText(data[i][4]),\n            remarks: data[i][5],\n          });\n        }\n      }\n      console.log(this.tableData);\n    },\n    // importFile: function (e) {\n    //   var self = this;\n    //   stream.fetch(\n    //     { method: \"GET\", type: \"text\", url: this.fileUrl },\n    //     function (res) {\n    //       const wb = XLSX.read(res.data, { type: \"base64\" });\n    //       const ws = wb.Sheets[wb.SheetNames[0]];\n    //       self.data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    //     }\n    //   );\n    // },\n    // exportFile: function (e) {\n    //   var self = this;\n    //   const ws = XLSX.utils.aoa_to_sheet(this.data);\n    //   const wb = XLSX.utils.book_new();\n    //   XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\n    //   const wbout = XLSX.write(wb, { type: \"base64\", bookType: \"xlsx\" });\n    //   const body = wbout;\n    //   stream.fetch(\n    //     { method: \"POST\", type: \"json\", url: this.binUrl, body: body },\n    //     function (res) {\n    //       self.version = res.data.key;\n    //     }\n    //   );\n    // },\n    get_label: function (r, c) {\n      return XLSX.utils.encode_cell({ r: r, c: c });\n    },\n    splitText(text) {\n      if (text && text.indexOf(\"-\") > 0) {\n        return text.split(\"-\")[1];\n      } else {\n        return text;\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.home-container {\n  &-top {\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/table/table.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home-container\"},[_c('div',{staticClass:\"home-container-top\"},[_c('div',{style:({ color: '#841584' }),on:{\"click\":function($event){return _vm.readWorkbookFromRemoteFile(_vm.fileUrl)}}},[_vm._v(\"\\n      readWorkbookFromRemoteFile\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"table-container\"},[_c('a-table',{attrs:{\"columns\":_vm.columns,\"data-source\":_vm.tableData,\"pagination\":false},scopedSlots:_vm._u([{key:\"changeMoney\",fn:function(text, record){return _c('span',{},[(record.type == '收入')?_c('a-icon',{staticStyle:{\"color\":\"red\"},attrs:{\"type\":\"rise\"}}):_c('a-icon',{staticStyle:{\"color\":\"green\"},attrs:{\"type\":\"fall\"}}),_vm._v(\"\\n        \"+_vm._s(text)+\"\\n      \")],1)}}])})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e48b3f4a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/table/table.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e48b3f4a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./table.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./table.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./table.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e48b3f4a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./table.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e48b3f4a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/table/table.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"home-container\">\n    <div class=\"home-container-top\">\n      <div\n        :style=\"{ color: '#841584' }\"\n        @click=\"readWorkbookFromRemoteFile(fileUrl)\"\n      >\n        readWorkbookFromRemoteFile\n      </div>\n    </div>\n    <div class=\"calendar-container\">\n      <a-calendar>\n        <ul slot=\"dateCellRender\" slot-scope=\"value\" class=\"events\">\n          <li v-for=\"item in getListData(value)\" :key=\"item.id\">\n            <a-tooltip>\n              <template slot=\"title\"\n                >{{ item.detailType }}-{{ item.remarks }}</template\n              >\n              {{ item.user }} {{ item.type }} {{ item.changeMoney }}\n            </a-tooltip>\n          </li>\n        </ul>\n        <template slot=\"monthCellRender\" slot-scope=\"value\">\n          <div v-if=\"getMonthData(value)\" class=\"notes-month\">\n            <section>{{ getMonthData(value) }}</section>\n            <span>Backlog number</span>\n          </div>\n        </template>\n      </a-calendar>\n    </div>\n  </div>\n</template>\n<script>\nimport * as XLSX from \"xlsx\";\nexport default {\n  name: \"Calendar\",\n  data() {\n    return {\n      calendarData: {},\n      version: XLSX.version,\n      fileUrl:\n        \"https://afanticar-test.oss-cn-hangzhou.aliyuncs.com/aftpm/video-demo/YYYY-MM.xlsx\",\n    };\n  },\n  mounted() {\n    console.log(XLSX);\n    this.readWorkbookFromRemoteFile(this.fileUrl, this.setCalendar);\n  },\n  methods: {\n    getListData(value) {\n      console.log(\"value\", this.dayjs(value).format(\"YYYY-MM-DD\"));\n      let listData = [];\n      if (this.calendarData[this.dayjs(value).format(\"YYYY-MM-DD\")]) {\n        listData = this.calendarData[this.dayjs(value).format(\"YYYY-MM-DD\")];\n      }\n      return listData || [];\n    },\n\n    getMonthData(value) {\n      if (value.month() === 8) {\n        return 1394;\n      }\n    },\n    readWorkbookFromRemoteFile(url, callback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"get\", url, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = function (e) {\n        if (xhr.status == 200) {\n          var data = new Uint8Array(xhr.response);\n          var workbook = XLSX.read(data, { type: \"array\" });\n          var json = workbook.Sheets[workbook.SheetNames[0]];\n          var newData = XLSX.utils.sheet_to_json(json, { header: 1 });\n          console.log(\"workbook\", workbook);\n          console.log(\"json\", json);\n          console.log(\"newData\", newData);\n          if (callback) callback(newData);\n        }\n      };\n      xhr.send();\n    },\n    setCalendar(data) {\n      // 初始化当月数据\n      this.calendarData = {};\n      if (data && data.length > 0) {\n        data.forEach((item, index) => {\n          if (!this.calendarData[item[0]]) {\n            this.calendarData[item[0]] = [];\n          }\n\n          this.calendarData[item[0]].push({\n            id: index,\n            date: item[0],\n            type: this.splitText(item[1]),\n            detailType: this.splitText(item[2]),\n            changeMoney: item[3],\n            user: this.splitText(item[4]),\n            remarks: item[5],\n          });\n        });\n      } else {\n        this.$message.warning(\"暂无当前时间段数据\");\n      }\n      console.log(123, this.calendarData);\n    },\n    splitText(text) {\n      if (text && text.indexOf(\"-\") > 0) {\n        return text.split(\"-\")[1];\n      } else {\n        return text;\n      }\n    },\n    get_label(r, c) {\n      return XLSX.utils.encode_cell({ r: r, c: c });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.home-container {\n  &-top {\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/calendar/calendar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home-container\"},[_c('div',{staticClass:\"home-container-top\"},[_c('div',{style:({ color: '#841584' }),on:{\"click\":function($event){return _vm.readWorkbookFromRemoteFile(_vm.fileUrl)}}},[_vm._v(\"\\n      readWorkbookFromRemoteFile\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"calendar-container\"},[_c('a-calendar',{scopedSlots:_vm._u([{key:\"dateCellRender\",fn:function(value){return _c('ul',{staticClass:\"events\"},_vm._l((_vm.getListData(value)),function(item){return _c('li',{key:item.id},[_c('a-tooltip',[_c('template',{slot:\"title\"},[_vm._v(_vm._s(item.detailType)+\"-\"+_vm._s(item.remarks))]),_vm._v(\"\\n            \"+_vm._s(item.user)+\" \"+_vm._s(item.type)+\" \"+_vm._s(item.changeMoney)+\"\\n          \")],2)],1)}),0)}},{key:\"monthCellRender\",fn:function(value){return [(_vm.getMonthData(value))?_c('div',{staticClass:\"notes-month\"},[_c('section',[_vm._v(_vm._s(_vm.getMonthData(value)))]),_vm._v(\" \"),_c('span',[_vm._v(\"Backlog number\")])]):_vm._e()]}}])})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-847ff2a0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/calendar/calendar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-847ff2a0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./calendar.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./calendar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./calendar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-847ff2a0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./calendar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-847ff2a0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/calendar/calendar.vue\n// module id = null\n// module chunks = ","import 地三鲜 from \"./地三鲜.json\"\nimport 锅包肉 from \"./锅包肉.json\"\nimport 红烧鸡爪 from \"./红烧鸡爪.json\"\nimport 溜肉段 from \"./溜肉段.json\"\nimport 东北炖大鹅 from \"./东北炖大鹅.json\"\n\nconst menu = [\n    地三鲜,\n    锅包肉,\n    红烧鸡爪,\n    溜肉段,\n    东北炖大鹅\n]\n\nexport default menu\n\n\n// WEBPACK FOOTER //\n// ./src/views/cooking/menu/index.js","<template>\n  <div class=\"cooking-image\">\n    <img :src=\"require(`../assets/cooking/${data.name}.jpg`)\" alt=\"\" />\n    <div class=\"name\">{{data.name}}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CookingImage\",\n  props: {\n    data: {\n      type: Object,\n      default: {}\n    },\n  },\n  data() {\n    return {};\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.cooking-image {\n  width: 300px;\n  height: 225px;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border-radius: 10px;\n  cursor: pointer;\n  > img {\n    width: 100%;\n    height: 100%;\n    transition: all 0.5s;\n  }\n  .name {\n    position: absolute;\n    width: 100%;\n    top: calc(50% - 13px);\n    text-align: center;\n    color: #fff;\n    font-weight: bold;\n    font-size: 26px;\n  }\n  &:hover {\n    > img {\n      transform: scale(1.5);\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/CookingImage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cooking-image\"},[_c('img',{attrs:{\"src\":require((\"../assets/cooking/\" + (_vm.data.name) + \".jpg\")),\"alt\":\"\"}}),_vm._v(\" \"),_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.data.name))])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5969d206\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/CookingImage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5969d206\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CookingImage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./CookingImage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./CookingImage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5969d206\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./CookingImage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5969d206\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CookingImage.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <!-- 菜单主体区域 -->\n    <div class=\"cooking-container\">\n      <div\n        class=\"item\"\n        v-for=\"(item, index) in menu\"\n        :key=\"index\"\n        @click=\"openDrawer(item)\"\n      >\n        <cooking-image :data=\"item\"></cooking-image>\n      </div>\n    </div>\n    <!-- 抽屉详情区域 -->\n    <a-drawer\n      width=\"640\"\n      placement=\"right\"\n      :closable=\"true\"\n      :visible=\"visible\"\n      @close=\"onClose\"\n    >\n      <h2>{{ currentItem.name }}</h2>\n      <img\n        v-if=\"currentItem.name\"\n        :src=\"require(`../../assets/cooking/${currentItem.name}.jpg`)\"\n        width=\"300\"\n      />\n      <h4>准备食材<a-icon @click=\"copyNeeds\" type=\"copy\" theme=\"twoTone\" /></h4>\n      <div class=\"need\">\n        <a-checkbox-group\n          v-model=\"needValue\"\n          :options=\"currentItem.need\"\n          style=\"width: 100%\"\n        >\n          <a-row>\n            <a-col :span=\"6\">\n              <a-checkbox\n                v-for=\"(item, index) in currentItem.need\"\n                :key=\"index\"\n                :value=\"item\"\n                >{{ item }}</a-checkbox\n              >\n            </a-col>\n          </a-row>\n        </a-checkbox-group>\n      </div>\n      <h4>todo</h4>\n      <div class=\"todo\">\n        <ul>\n          <li v-for=\"(item, index) in currentItem.todo\" :key=\"index\">\n            {{ item }}\n          </li>\n        </ul>\n      </div>\n      <h4>备注</h4>\n      <div>{{ currentItem.remarks }}</div>\n    </a-drawer>\n  </div>\n</template>\n<script>\nimport menu from \"./menu/index.js\";\nimport CookingImage from \"@/components/CookingImage\";\nexport default {\n  name: \"Cooking\",\n  components: {\n    CookingImage,\n  },\n  data() {\n    return {\n      currentItem: {},\n      menu: [],\n      visible: false,\n      needValue: [],\n    };\n  },\n  created() {\n    this.menu = menu;\n  },\n  mounted() {},\n  methods: {\n    openDrawer(item) {\n      this.currentItem = item;\n      this.needValue = [];\n      this.visible = true;\n    },\n    onClose() {\n      this.visible = false;\n    },\n    copyNeeds() {\n      if (this.needValue.length == 0) {\n        this.$message.warning(\"请勾选需要购买的食材及配料\");\n      } else {\n        const url = this.needValue.join(\",\");\n        let oInput = document.createElement(\"input\");\n        oInput.value = url;\n        document.body.appendChild(oInput);\n        oInput.select(); // 选择对象;\n        document.execCommand(\"Copy\"); // 执行浏览器复制命令\n        this.$message.success('复制成功')\n        oInput.remove();\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.cooking-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  .item {\n    margin-bottom: 20px;\n    margin-right: 30px;\n  }\n}\n\nh4 {\n  margin-top: 30px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/cooking/cooking.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"cooking-container\"},_vm._l((_vm.menu),function(item,index){return _c('div',{key:index,staticClass:\"item\",on:{\"click\":function($event){return _vm.openDrawer(item)}}},[_c('cooking-image',{attrs:{\"data\":item}})],1)}),0),_vm._v(\" \"),_c('a-drawer',{attrs:{\"width\":\"640\",\"placement\":\"right\",\"closable\":true,\"visible\":_vm.visible},on:{\"close\":_vm.onClose}},[_c('h2',[_vm._v(_vm._s(_vm.currentItem.name))]),_vm._v(\" \"),(_vm.currentItem.name)?_c('img',{attrs:{\"src\":require((\"../../assets/cooking/\" + (_vm.currentItem.name) + \".jpg\")),\"width\":\"300\"}}):_vm._e(),_vm._v(\" \"),_c('h4',[_vm._v(\"准备食材\"),_c('a-icon',{attrs:{\"type\":\"copy\",\"theme\":\"twoTone\"},on:{\"click\":_vm.copyNeeds}})],1),_vm._v(\" \"),_c('div',{staticClass:\"need\"},[_c('a-checkbox-group',{staticStyle:{\"width\":\"100%\"},attrs:{\"options\":_vm.currentItem.need},model:{value:(_vm.needValue),callback:function ($$v) {_vm.needValue=$$v},expression:\"needValue\"}},[_c('a-row',[_c('a-col',{attrs:{\"span\":6}},_vm._l((_vm.currentItem.need),function(item,index){return _c('a-checkbox',{key:index,attrs:{\"value\":item}},[_vm._v(_vm._s(item))])}),1)],1)],1)],1),_vm._v(\" \"),_c('h4',[_vm._v(\"todo\")]),_vm._v(\" \"),_c('div',{staticClass:\"todo\"},[_c('ul',_vm._l((_vm.currentItem.todo),function(item,index){return _c('li',{key:index},[_vm._v(\"\\n          \"+_vm._s(item)+\"\\n        \")])}),0)]),_vm._v(\" \"),_c('h4',[_vm._v(\"备注\")]),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(_vm.currentItem.remarks))])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-75316f9e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/cooking/cooking.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-75316f9e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cooking.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cooking.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cooking.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-75316f9e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cooking.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-75316f9e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/cooking/cooking.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport Table from '@/views/table/table'\nimport Calendar from '@/views/calendar/calendar'\nimport Cooking from '@/views/cooking/cooking'\n\nVue.use(Router)\n\nexport default new Router({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      redirect: '/cooking', // 将根路径重定向到 /cooking 页面\n      componentName: 'Cooking',\n      name: '厨房助手',\n      icon: 'fire',\n      component: Cooking\n    },\n    {\n      path: '/home',\n      componentName: 'HelloWorld',\n      name: '首页',\n      icon: 'home',\n      component: HelloWorld\n    },\n    {\n      path: '/table',\n      componentName: 'Table',\n      name: '表格概览',\n      icon: 'table',\n      component: Table\n    },\n    {\n      path: '/calendar',\n      componentName: 'Calendar',\n      name: '日历概览',\n      icon: 'calendar',\n      component: Calendar\n    },\n    {\n      path: '/cooking',\n      componentName: 'Cooking',\n      name: '厨房助手',\n      icon: 'fire',\n      component: Cooking\n    },\n  ]\n})\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport Antd from 'ant-design-vue';\nimport App from './App'\nimport router from './router'\nimport 'ant-design-vue/dist/antd.css';\n\nimport dayjs from 'dayjs' // ES 2015\nimport './registerServiceWorker'\nVue.config.productionTip = false\nVue.prototype.dayjs = dayjs;//可以全局使用dayjs\n\nVue.use(Antd);\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"name\":\"溜肉段\",\"need\":[\"猪里脊\",\"青椒块\",\"葱花\",\"姜末\",\"蒜末\",\"生抽\",\"土豆淀粉\",\"料酒\",\"盐\",\"味精\"],\"todo\":[\"猪里脊切骰子块，放盐、料酒腌制。\",\"土豆淀粉泡透沉淀倒出水备用\",\"肉加去水的淀粉，豆油，一丢丢水抓匀\",\"六成油温炸肉，微微变色捞出，加大油温复炸，青椒过一下油即可\",\"重新起锅留底油，葱花姜末炒香，加生抽，加水，加一丢丢盐、鸡精\",\"加水淀粉搅匀，倒入炸好的肉和青椒翻拌均匀，加包尾蒜末出锅\"],\"remarks\":\"油温要够热，泡水淀粉多准备，勾芡水要少一点\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/cooking/menu/溜肉段.json\n// module id = OQ2+\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/锅包肉.9c15b1d.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cooking/锅包肉.jpg\n// module id = QCJy\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/地三鲜.7cdee0a.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cooking/地三鲜.jpg\n// module id = Qhgl\n// module chunks = 1","module.exports = {\"_args\":[[\"ant-design-vue@1.7.8\",\"/Users/luofanxing/Documents/study/前端/demo/family_pay_cms\"]],\"_from\":\"ant-design-vue@1.7.8\",\"_id\":\"ant-design-vue@1.7.8\",\"_inBundle\":false,\"_integrity\":\"sha512-F1hmiS9vwbyfuFvlamdW5l9bHKqRlj9wHaGDIE41NZMWXyWy8qL0UFa/+I0Wl8gQWZCqODW5pN6Yfoyn85At3A==\",\"_location\":\"/ant-design-vue\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"ant-design-vue@1.7.8\",\"name\":\"ant-design-vue\",\"escapedName\":\"ant-design-vue\",\"rawSpec\":\"1.7.8\",\"saveSpec\":null,\"fetchSpec\":\"1.7.8\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmmirror.com/ant-design-vue/-/ant-design-vue-1.7.8.tgz\",\"_spec\":\"1.7.8\",\"_where\":\"/Users/luofanxing/Documents/study/前端/demo/family_pay_cms\",\"bugs\":{\"url\":\"https://github.com/vueComponent/ant-design-vue/issues\"},\"dependencies\":{\"@ant-design/icons\":\"^2.1.1\",\"@ant-design/icons-vue\":\"^2.0.0\",\"@simonwep/pickr\":\"~1.7.0\",\"add-dom-event-listener\":\"^1.0.2\",\"array-tree-filter\":\"^2.1.0\",\"async-validator\":\"^3.0.3\",\"babel-helper-vue-jsx-merge-props\":\"^2.0.3\",\"babel-runtime\":\"6.x\",\"classnames\":\"^2.2.5\",\"component-classes\":\"^1.2.6\",\"dom-align\":\"^1.10.4\",\"dom-closest\":\"^0.2.0\",\"dom-scroll-into-view\":\"^2.0.0\",\"enquire.js\":\"^2.1.6\",\"intersperse\":\"^1.0.0\",\"is-mobile\":\"^2.2.1\",\"is-negative-zero\":\"^2.0.0\",\"ismobilejs\":\"^1.0.0\",\"json2mq\":\"^0.2.0\",\"lodash\":\"^4.17.5\",\"moment\":\"^2.21.0\",\"mutationobserver-shim\":\"^0.3.2\",\"node-emoji\":\"^1.10.0\",\"omit.js\":\"^1.0.0\",\"raf\":\"^3.4.0\",\"resize-observer-polyfill\":\"^1.5.1\",\"shallow-equal\":\"^1.0.0\",\"shallowequal\":\"^1.0.2\",\"vue-ref\":\"^2.0.0\",\"warning\":\"^4.0.0\"},\"description\":\"An enterprise-class UI design language and Vue-based implementation\",\"devDependencies\":{\"@commitlint/cli\":\"^8.0.0\",\"@commitlint/config-conventional\":\"^8.0.0\",\"@octokit/rest\":\"^16.0.0\",\"@vue/cli-plugin-eslint\":\"^4.0.0\",\"@vue/server-test-utils\":\"1.0.0-beta.16\",\"@vue/test-utils\":\"1.0.0-beta.16\",\"acorn\":\"^7.0.0\",\"autoprefixer\":\"^9.6.0\",\"axios\":\"^0.19.0\",\"babel-cli\":\"^6.26.0\",\"babel-core\":\"^6.26.0\",\"babel-eslint\":\"^10.0.1\",\"babel-helper-vue-jsx-merge-props\":\"^2.0.3\",\"babel-jest\":\"^23.6.0\",\"babel-loader\":\"^7.1.2\",\"babel-plugin-import\":\"^1.1.1\",\"babel-plugin-inline-import-data-uri\":\"^1.0.1\",\"babel-plugin-istanbul\":\"^6.0.0\",\"babel-plugin-syntax-dynamic-import\":\"^6.18.0\",\"babel-plugin-syntax-jsx\":\"^6.18.0\",\"babel-plugin-transform-class-properties\":\"^6.24.1\",\"babel-plugin-transform-decorators\":\"^6.24.1\",\"babel-plugin-transform-decorators-legacy\":\"^1.3.4\",\"babel-plugin-transform-es3-member-expression-literals\":\"^6.22.0\",\"babel-plugin-transform-es3-property-literals\":\"^6.22.0\",\"babel-plugin-transform-object-assign\":\"^6.22.0\",\"babel-plugin-transform-object-rest-spread\":\"^6.26.0\",\"babel-plugin-transform-runtime\":\"~6.23.0\",\"babel-plugin-transform-vue-jsx\":\"^3.7.0\",\"babel-polyfill\":\"^6.26.0\",\"babel-preset-env\":\"^1.6.1\",\"case-sensitive-paths-webpack-plugin\":\"^2.1.2\",\"chalk\":\"^3.0.0\",\"cheerio\":\"^1.0.0-rc.2\",\"codecov\":\"^3.0.0\",\"colorful\":\"^2.1.0\",\"commander\":\"^4.0.0\",\"compare-versions\":\"^3.3.0\",\"cross-env\":\"^7.0.0\",\"css-loader\":\"^3.0.0\",\"deep-assign\":\"^2.0.0\",\"enquire-js\":\"^0.2.1\",\"eslint\":\"^6.8.0\",\"eslint-config-prettier\":\"^6.10.1\",\"eslint-plugin-html\":\"^6.0.0\",\"eslint-plugin-markdown\":\"^2.0.0-alpha.0\",\"eslint-plugin-vue\":\"^6.2.2\",\"fetch-jsonp\":\"^1.1.3\",\"fs-extra\":\"^8.0.0\",\"glob\":\"^7.1.2\",\"gulp\":\"^4.0.1\",\"gulp-babel\":\"^7.0.0\",\"gulp-strip-code\":\"^0.1.4\",\"html-webpack-plugin\":\"^3.2.0\",\"husky\":\"^4.0.0\",\"istanbul-instrumenter-loader\":\"^3.0.0\",\"jest\":\"^24.0.0\",\"jest-serializer-vue\":\"^2.0.0\",\"jest-transform-stub\":\"^2.0.0\",\"js-base64\":\"^3.0.0\",\"json-templater\":\"^1.2.0\",\"jsonp\":\"^0.2.1\",\"less\":\"^3.9.0\",\"less-loader\":\"^6.0.0\",\"less-plugin-npm-import\":\"^2.1.0\",\"lint-staged\":\"^10.0.0\",\"marked\":\"0.3.18\",\"merge2\":\"^1.2.1\",\"mini-css-extract-plugin\":\"^0.10.0\",\"minimist\":\"^1.2.0\",\"mkdirp\":\"^0.5.1\",\"mockdate\":\"^2.0.2\",\"nprogress\":\"^0.2.0\",\"optimize-css-assets-webpack-plugin\":\"^5.0.1\",\"postcss\":\"^7.0.6\",\"postcss-loader\":\"^3.0.0\",\"prettier\":\"^1.18.2\",\"pretty-quick\":\"^2.0.0\",\"querystring\":\"^0.2.0\",\"raw-loader\":\"^4.0.0\",\"reqwest\":\"^2.0.5\",\"rimraf\":\"^3.0.0\",\"rucksack-css\":\"^1.0.2\",\"selenium-server\":\"^3.0.1\",\"semver\":\"^7.0.0\",\"style-loader\":\"^1.0.0\",\"stylelint\":\"^13.0.0\",\"stylelint-config-prettier\":\"^8.0.0\",\"stylelint-config-standard\":\"^19.0.0\",\"terser-webpack-plugin\":\"^3.0.3\",\"through2\":\"^3.0.0\",\"url-loader\":\"^3.0.0\",\"vue\":\"^2.6.11\",\"vue-antd-md-loader\":\"^1.1.0\",\"vue-clipboard2\":\"0.3.1\",\"vue-draggable-resizable\":\"^2.1.0\",\"vue-eslint-parser\":\"^7.0.0\",\"vue-i18n\":\"^8.3.2\",\"vue-infinite-scroll\":\"^2.0.2\",\"vue-jest\":\"^2.5.0\",\"vue-loader\":\"^15.6.2\",\"vue-router\":\"^3.0.1\",\"vue-server-renderer\":\"^2.6.11\",\"vue-template-compiler\":\"^2.6.11\",\"vue-virtual-scroller\":\"^1.0.0\",\"vuex\":\"^3.1.0\",\"webpack\":\"^4.28.4\",\"webpack-cli\":\"^3.2.1\",\"webpack-dev-server\":\"^3.1.14\",\"webpack-merge\":\"^4.1.1\",\"webpackbar\":\"^4.0.0\",\"xhr-mock\":\"^2.5.1\"},\"files\":[\"dist\",\"lib\",\"es\",\"types\",\"scripts\"],\"homepage\":\"https://www.antdv.com/\",\"keywords\":[\"ant\",\"design\",\"antd\",\"vue\",\"vueComponent\",\"component\",\"components\",\"ui\",\"framework\",\"frontend\"],\"license\":\"MIT\",\"main\":\"lib/index.js\",\"module\":\"es/index.js\",\"name\":\"ant-design-vue\",\"peerDependencies\":{\"vue\":\"^2.6.0\",\"vue-template-compiler\":\"^2.6.0\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/vueComponent/ant-design-vue.git\"},\"scripts\":{\"codecov\":\"codecov\",\"compile\":\"node antd-tools/cli/run.js compile\",\"dev\":\"webpack-dev-server\",\"dist\":\"node antd-tools/cli/run.js dist\",\"lint\":\"eslint -c ./.eslintrc --fix --ext .jsx,.js,.vue ./components\",\"lint:docs\":\"eslint -c ./.eslintrc --fix --ext .jsx,.js,.vue,.md ./antdv-demo/docs/**/demo/**\",\"lint:site\":\"eslint -c ./.eslintrc --fix --ext .jsx,.js,.vue ./antdv-demo\",\"lint:style\":\"stylelint \\\"{site,components}/**/*.less\\\" --syntax less\",\"postinstall\":\"node scripts/postinstall || echo \\\"ignore\\\"\",\"pre-publish\":\"node ./scripts/prepub\",\"prepublish\":\"node antd-tools/cli/run.js guard\",\"prettier\":\"prettier -c --write '**/*'\",\"pretty-quick\":\"pretty-quick\",\"pub\":\"node antd-tools/cli/run.js pub\",\"pub-with-ci\":\"node antd-tools/cli/run.js pub-with-ci\",\"start\":\"cross-env NODE_ENV=development webpack-dev-server --config webpack.config.js\",\"test\":\"cross-env NODE_ENV=test jest --config .jest.js\"},\"sideEffects\":[\"site/*\",\"components/style.js\",\"components/**/style/*\",\"*.vue\",\"*.md\",\"dist/*\",\"es/**/style/*\",\"lib/**/style/*\",\"*.less\"],\"title\":\"Ant Design Vue\",\"typings\":\"types/index.d.ts\",\"version\":\"1.7.8\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ant-design-vue/package.json\n// module id = XN5v\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/溜肉段.089774e.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cooking/溜肉段.jpg\n// module id = YRkV\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/img/红烧鸡爪.1f609a4.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/cooking/红烧鸡爪.jpg\n// module id = bbFG\n// module chunks = 1","module.exports = {\"name\":\"锅包肉\",\"need\":[\"猪里脊\",\"葱白丝\",\"胡萝卜丝\",\"姜丝\",\"香菜段\",\"蒜片\",\"糖\",\"9度米醋\",\"生抽\",\"土豆淀粉\",\"料酒\",\"盐\",\"味精\"],\"todo\":[\"猪里脊切片拍散，泡水去血水十分钟\",\"土豆淀粉泡透沉淀倒出水备用\",\"肉放盐，料酒抓拌均匀\",\"准备糖醋汁：四勺白糖，四勺九度米醋，少盐和味精，一滴老抽\",\"肉加去水的淀粉，豆油抓匀\",\"五成油温炸肉，微微变色捞出，加大油温复炸\",\"重新起锅放点油，放肉翻炒，加糖醋汁，配料翻炒出锅\"],\"remarks\":\"油温要够热，泡水淀粉多准备\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/cooking/menu/锅包肉.json\n// module id = boMj\n// module chunks = 1","/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global global, exports, module, require:false, process:false, Buffer:false, ArrayBuffer:false */\nvar XLSX = {};\nXLSX.version = '0.18.3';\nvar current_codepage = 1200, current_ansi = 1252;\n\nvar VALID_ANSI = [ 874, 932, 936, 949, 950, 10000 ];\nfor(var i = 0; i <= 8; ++i) VALID_ANSI.push(1250 + i);\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = ({\n\t/*::[*/0/*::]*/:    1252, /* ANSI */\n\t/*::[*/1/*::]*/:   65001, /* DEFAULT */\n\t/*::[*/2/*::]*/:   65001, /* SYMBOL */\n\t/*::[*/77/*::]*/:  10000, /* MAC */\n\t/*::[*/128/*::]*/:   932, /* SHIFTJIS */\n\t/*::[*/129/*::]*/:   949, /* HANGUL */\n\t/*::[*/130/*::]*/:  1361, /* JOHAB */\n\t/*::[*/134/*::]*/:   936, /* GB2312 */\n\t/*::[*/136/*::]*/:   950, /* CHINESEBIG5 */\n\t/*::[*/161/*::]*/:  1253, /* GREEK */\n\t/*::[*/162/*::]*/:  1254, /* TURKISH */\n\t/*::[*/163/*::]*/:  1258, /* VIETNAMESE */\n\t/*::[*/177/*::]*/:  1255, /* HEBREW */\n\t/*::[*/178/*::]*/:  1256, /* ARABIC */\n\t/*::[*/186/*::]*/:  1257, /* BALTIC */\n\t/*::[*/204/*::]*/:  1251, /* RUSSIAN */\n\t/*::[*/222/*::]*/:   874, /* THAI */\n\t/*::[*/238/*::]*/:  1250, /* EASTEUROPE */\n\t/*::[*/255/*::]*/:  1252, /* OEM */\n\t/*::[*/69/*::]*/:   6969  /* MISC */\n}/*:any*/);\n\nvar set_ansi = function(cp/*:number*/) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\nfunction reset_ansi() { set_ansi(1252); }\n\nvar set_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\n\nfunction char_codes(data/*:string*/)/*:Array<number>*/ { var o/*:Array<number>*/ = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\nfunction utf16leread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n\treturn o.join(\"\");\n}\nfunction utf16beread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n\treturn o.join(\"\");\n}\n\nvar debom = function(data/*:string*/)/*:string*/ {\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n\tif(c1 == 0xFEFF) return data.slice(1);\n\treturn data;\n};\n\nvar _getchar = function _gc1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\nvar _getansi = function _ga1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\n\nvar cptable;\nfunction set_cptable(_cptable) {\n\tcptable = _cptable;\n\tset_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\n\tdebom = function(data/*:string*/) {\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return cptable.utils.decode(1200, char_codes(data.slice(2))); }\n\t\treturn data;\n\t};\n\t_getchar = function _gc2(x/*:number*/)/*:string*/ {\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\n\t\treturn cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n\t};\n\t_getansi = function _ga2(x/*:number*/)/*:string*/ {\n\t\treturn cptable.utils.decode(current_ansi, [x])[0];\n\t};\n\tcpdoit();\n}\nexport { set_cptable };\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64 = function() {\n  var map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  return {\n    encode: function(input) {\n      var o = \"\";\n      var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n      for (var i = 0; i < input.length; ) {\n        c1 = input.charCodeAt(i++);\n        e1 = c1 >> 2;\n        c2 = input.charCodeAt(i++);\n        e2 = (c1 & 3) << 4 | c2 >> 4;\n        c3 = input.charCodeAt(i++);\n        e3 = (c2 & 15) << 2 | c3 >> 6;\n        e4 = c3 & 63;\n        if (isNaN(c2)) {\n          e3 = e4 = 64;\n        } else if (isNaN(c3)) {\n          e4 = 64;\n        }\n        o += map.charAt(e1) + map.charAt(e2) + map.charAt(e3) + map.charAt(e4);\n      }\n      return o;\n    },\n    decode: function(input) {\n      var o = \"\";\n      var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n      input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n      for (var i = 0; i < input.length; ) {\n        e1 = map.indexOf(input.charAt(i++));\n        e2 = map.indexOf(input.charAt(i++));\n        c1 = e1 << 2 | e2 >> 4;\n        o += String.fromCharCode(c1);\n        e3 = map.indexOf(input.charAt(i++));\n        c2 = (e2 & 15) << 4 | e3 >> 2;\n        if (e3 !== 64) {\n          o += String.fromCharCode(c2);\n        }\n        e4 = map.indexOf(input.charAt(i++));\n        c3 = (e3 & 3) << 6 | e4;\n        if (e4 !== 64) {\n          o += String.fromCharCode(c3);\n        }\n      }\n      return o;\n    }\n  };\n}();\nvar has_buf = (typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node);\n\nvar Buffer_from = /*::(*/function(){}/*:: :any)*/;\n\nif(typeof Buffer !== 'undefined') {\n\tvar nbfs = !Buffer.from;\n\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\tBuffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t// $FlowIgnore\n\tif(!Buffer.alloc) Buffer.alloc = function(n) { return new Buffer(n); };\n\t// $FlowIgnore\n\tif(!Buffer.allocUnsafe) Buffer.allocUnsafe = function(n) { return new Buffer(n); };\n}\n\nfunction new_raw_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\treturn has_buf ? Buffer.alloc(len) : typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\treturn has_buf ? Buffer.allocUnsafe(len) : typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s/*:string*/)/*:any*/ {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x/*:string*/)/*:number*/{ return x.charCodeAt(0) & 0xff; });\n};\n\nfunction s2ab(s/*:string*/)/*:any*/ {\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nfunction a2s(data/*:any*/)/*:string*/ {\n\tif(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join(\"\");\n\tvar o/*:Array<string>*/ = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join(\"\");\n}\n\nfunction a2u(data/*:Array<number>*/)/*:Uint8Array*/ {\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n\treturn new Uint8Array(data);\n}\n\nfunction ab2a(data/*:ArrayBuffer|Uint8Array*/)/*:Array<number>*/ {\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n\t/*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n\tvar o = new Array(data.length);\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\n\treturn o;\n}\n\nfunction utf8decode(content/*:string*/) {\n\tvar out = [], widx = 0, L = content.length + 250;\n\tvar o = new_raw_buf(content.length + 255);\n\tfor(var ridx = 0; ridx < content.length; ++ridx) {\n\t\tvar c = content.charCodeAt(ridx);\n\t\tif(c < 0x80) o[widx++] = c;\n\t\telse if(c < 0x800) {\n\t\t\to[widx++] = (192|((c>>6)&31));\n\t\t\to[widx++] = (128|(c&63));\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64;\n\t\t\tvar d = content.charCodeAt(++ridx)&1023;\n\t\t\to[widx++] = (240|((c>>8)&7));\n\t\t\to[widx++] = (128|((c>>2)&63));\n\t\t\to[widx++] = (128|((d>>6)&15)|((c&3)<<4));\n\t\t\to[widx++] = (128|(d&63));\n\t\t} else {\n\t\t\to[widx++] = (224|((c>>12)&15));\n\t\t\to[widx++] = (128|((c>>6)&63));\n\t\t\to[widx++] = (128|(c&63));\n\t\t}\n\t\tif(widx > L) {\n\t\t\tout.push(o.slice(0, widx));\n\t\t\twidx = 0;\n\t\t\to = new_raw_buf(65535);\n\t\t\tL = 65530;\n\t\t}\n\t}\n\tout.push(o.slice(0, widx));\n\treturn bconcat(out);\n}\n\nvar bconcat = function(bufs) {\n\tif(typeof Uint8Array !== \"undefined\") {\n\t\tvar i = 0, maxlen = 0;\n\t\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\t\tvar o = new Uint8Array(maxlen);\n\t\tvar len = 0;\n\t\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n\t\t\tlen = bufs[i].length;\n\t\t\tif(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);\n\t\t\telse if(typeof bufs[i] == \"string\") { throw \"wtf\"; }\n\t\t\telse o.set(new Uint8Array(bufs[i]), maxlen);\n\t\t}\n\t\treturn o;\n\t}\n\treturn [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));\n};\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\ntype WriteObjStrFactory = {from_sheet(ws:Worksheet, o:any, wb:?Workbook):string};\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nvar SSF/*:SSFModule*/ = ({}/*:any*/);\nvar make_ssf = function make_ssf(SSF/*:SSFModule*/){\nSSF.version = '0.11.2';\nfunction _strrev(x/*:string*/)/*:string*/ { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v/*:any*/,d/*:number*/)/*:string*/{if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s/*:string*/, i/*:?number*/)/*:boolean*/ { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\n/*::\ntype SSF_write_num = {(type:string, fmt:string, val:number):string};\n*/\nvar days/*:Array<Array<string> >*/ = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months/*:Array<Array<string> >*/ = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t/*:any*/) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar default_map/*:Array<number>*/ = [];\nvar defi = 0;\n\n//  5 -> 37 ...  8 -> 40\nfor(defi = 5; defi <= 8; ++defi) default_map[defi] = 32 + defi;\n\n// 23 ->  0 ... 26 ->  0\nfor(defi = 23; defi <= 26; ++defi) default_map[defi] = 0;\n\n// 27 -> 14 ... 31 -> 14\nfor(defi = 27; defi <= 31; ++defi) default_map[defi] = 14;\n// 50 -> 14 ... 58 -> 14\nfor(defi = 50; defi <= 58; ++defi) default_map[defi] = 14;\n\n// 59 ->  1 ... 62 ->  4\nfor(defi = 59; defi <= 62; ++defi) default_map[defi] = defi - 58;\n// 67 ->  9 ... 68 -> 10\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 58;\n// 72 -> 14 ... 75 -> 17\nfor(defi = 72; defi <= 75; ++defi) default_map[defi] = defi - 58;\n\n// 69 -> 12 ... 71 -> 14\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 57;\n\n// 76 -> 20 ... 78 -> 22\nfor(defi = 76; defi <= 78; ++defi) default_map[defi] = defi - 56;\n\n// 79 -> 45 ... 81 -> 47\nfor(defi = 79; defi <= 81; ++defi) default_map[defi] = defi - 34;\n\n// 82 ->  0 ... 65536 -> 0 (omitted)\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar default_str/*:Array<string>*/ = [];\n\n//  5 -- Currency,   0 decimal, black negative\ndefault_str[5] = default_str[63] = '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)';\n//  6 -- Currency,   0 decimal, red   negative\ndefault_str[6] = default_str[64] = '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)';\n//  7 -- Currency,   2 decimal, black negative\ndefault_str[7] = default_str[65] = '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)';\n//  8 -- Currency,   2 decimal, red   negative\ndefault_str[8] = default_str[66] = '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)';\n\n// 41 -- Accounting, 0 decimal, No Symbol\ndefault_str[41] = '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)';\n// 42 -- Accounting, 0 decimal, $  Symbol\ndefault_str[42] = '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)';\n// 43 -- Accounting, 2 decimal, No Symbol\ndefault_str[43] = '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)';\n// 44 -- Accounting, 2 decimal, $  Symbol\ndefault_str[44] = '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)';\nfunction frac(x/*:number*/, D/*:number*/, mixed/*:?boolean*/)/*:Array<number>*/ {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v/*:number*/,opts/*:?any*/,b2/*:?boolean*/) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* The longest 32-bit integer text is \"-4294967296\", exactly 11 chars */\nfunction general_fmt_int(v/*:number*/)/*:string*/ { return v.toString(10); }\nSSF._general_int = general_fmt_int;\n\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\nvar general_fmt_num = (function make_general_fmt_num() {\n\tvar trailing_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)$/;\n\tfunction strip_decimal(o/*:string*/)/*:string*/ {\n\t\treturn (o.indexOf(\".\") == -1) ? o : o.replace(trailing_zeroes_and_decimal, \"$1\");\n\t}\n\n\t/* General Exponential always shows 2 digits exp and trims the mantissa */\n\tvar mantissa_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/;\n\tvar exp_with_single_digit = /(E[+-])(\\d)$/;\n\tfunction normalize_exp(o/*:string*/)/*:string*/ {\n\t\tif(o.indexOf(\"E\") == -1) return o;\n\t\treturn o.replace(mantissa_zeroes_and_decimal,\"$1E\").replace(exp_with_single_digit,\"$10$2\");\n\t}\n\n\t/* exponent >= -9 and <= 9 */\n\tfunction small_exp(v/*:number*/)/*:string*/ {\n\t\tvar w = (v<0?12:11);\n\t\tvar o = strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\t\to = v.toPrecision(10); if(o.length <= w) return o;\n\t\treturn v.toExponential(5);\n\t}\n\n\t/* exponent >= 11 or <= -10 likely exponential */\n\tfunction large_exp(v/*:number*/)/*:string*/ {\n\t\tvar o = strip_decimal(v.toFixed(11));\n\t\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n\t}\n\n\tfunction general_fmt_num_base(v/*:number*/)/*:string*/ {\n\t\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\t\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\t\telse if(Math.abs(V) <= 9) o = small_exp(v);\n\t\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\t\telse o = large_exp(v);\n\n\t\treturn strip_decimal(normalize_exp(o.toUpperCase()));\n\t}\n\n\treturn general_fmt_num_base;\n})();\nSSF._general_num = general_fmt_num;\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction general_fmt(v/*:any*/, opts/*:any*/) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri(date/*:Date*/, o/*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\n/*jshint -W086 */\nfunction write_date(type/*:number*/, fmt/*:string*/, val, ss0/*:?number*/)/*:string*/ {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n\t\t\t/*::if(!ss0) ss0 = 0; */\n\t\t\tif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n/*jshint +W086 */\nfunction commaify(s/*:string*/)/*:string*/ {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num/*:SSF_write_num*/ = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str/*:string*/)/*:string*/ {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val/*:number*/, d/*:number*/)/*:string*/ { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val/*:number*/, d/*:number*/)/*:number*/ {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val/*:number*/, d/*:number*/)/*:number*/ {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val/*:number*/)/*:string*/ {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(/*::(*/r/*::||[\"\"])*/[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\to = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\t\treturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt/*:string*/)/*:Array<string>*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt/*:string*/)/*:boolean*/ {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt/*:string*/, v/*:any*/, opts/*:any*/, flen/*:number*/) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\n\t\t\t\t/*::if(!dt) throw \"unreachable\"; */\n\t\t\t\tout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f/*:string*/, v/*:any*/) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt/*:string|number*/,v/*:any*/,o/*:?any*/) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table/*:any*/) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[default_map[fmt]]) || table_fmt[default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt/*:string*/, idx/*:?number*/)/*:number*/ {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tfor(var i = 0; i < 0x0188; ++i) {\n/*::if(typeof idx != 'number') return 0x188; */\n\t\t\tif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tif(idx < 0) idx = 0x187;\n\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\ttable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table()/*:SSFTable*/ { return table_fmt; };\nSSF.load_table = function load_table(tbl/*:SSFTable*/)/*:void*/ {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap/*{[string]:string}*/ = ({\n\t\"General Number\": \"General\",\n\t\"General Date\": SSF._table[22],\n\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\n\t\"Medium Date\": SSF._table[15],\n\t\"Short Date\": SSF._table[14],\n\t\"Long Time\": SSF._table[19],\n\t\"Medium Time\": SSF._table[18],\n\t\"Short Time\": SSF._table[20],\n\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"Fixed\": SSF._table[2],\n\t\"Standard\": SSF._table[4],\n\t\"Percent\": SSF._table[10],\n\t\"Scientific\": SSF._table[11],\n\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n\t\"True/False\": '\"True\";\"True\";\"False\";@',\n\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n}/*:any*/);\n\nvar SSFImplicit/*{[number]:string}*/ = ({\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n\t\"36\": 'm/d/yy',\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n\t\"59\": '0',\n\t\"60\": '0.00',\n\t\"61\": '#,##0',\n\t\"62\": '#,##0.00',\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"67\": '0%',\n\t\"68\": '0.00%',\n\t\"69\": '# ?/?',\n\t\"70\": '# ??/??',\n\t\"71\": 'm/d/yy',\n\t\"72\": 'm/d/yy',\n\t\"73\": 'd-mmm-yy',\n\t\"74\": 'd-mmm',\n\t\"75\": 'mmm-yy',\n\t\"76\": 'h:mm',\n\t\"77\": 'h:mm:ss',\n\t\"78\": 'm/d/yy h:mm',\n\t\"79\": 'mm:ss',\n\t\"80\": '[h]:mm:ss',\n\t\"81\": 'mmss.0'\n}/*:any*/);\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF/*:string|number*/)/*:RegExp*/ {\n\tvar fmt = typeof dateNF == \"number\" ? SSF._table[dateNF] : dateNF;\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n\treturn new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str/*:string*/, dateNF/*:string*/, match/*:Array<string>*/)/*:string*/ {\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n\t\tvar v = parseInt(match[i+1], 10);\n\t\tswitch(n.toLowerCase().charAt(0)) {\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\n\t\t}\n\t});\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n\tif(H == -1 && M == -1 && S == -1) return datestr;\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\n\treturn datestr + \"T\" + timestr;\n}\n\nvar DO_NOT_EXPORT_CFB = true;\n/*::\ndeclare var Base64:any;\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global module, require:false, process:false, Buffer:false, Uint8Array:false, Uint16Array:false */\n\n/*::\ndeclare var DO_NOT_EXPORT_CFB:?boolean;\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tfactory(CRC32 = {});\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table()/*:any*/ {\n\tvar c = 0, table/*:Array<number>*/ = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table/*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B/*:Uint8Array|Array<number>*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n/* [MS-CFB] v20171201 */\nvar CFB = (function _CFB(){\nvar exports/*:CFBModule*/ = /*::(*/{}/*:: :any)*/;\nexports.version = '1.2.1';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l/*:string*/, r/*:string*/)/*:number*/ {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf/*:CFBlob*/, date/*:Date|string*/) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms/*:number*/ = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd/*:number*/ = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf/*:CFBlob*/)/*:Date*/ {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob/*:CFBlob*/)/*:any*/ {\n\tprep_blob(blob, 0);\n\tvar o = /*::(*/{}/*:: :any)*/;\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs/*:: = require('fs'); */;\nfunction get_fs() { return fs || (fs = {}); }\nfunction parse(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs/*:Array<number>*/ = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob/*:CFBlob*/ = /*::(*/file.slice(0,512)/*:: :any)*/;\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = /*::(*/file.slice(0,ssz)/*:: :any)*/; prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header/*:RawBytes*/ = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt/*:number*/ = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors/*:Array<RawBytes>*/ = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list/*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nsector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files/*:CFBFiles*/ = {}, Paths/*:Array<string>*/ = [], FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob/*:CFBlob*/)/*:[number, number]*/ {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver/*:number*/ = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob/*:CFBlob*/, mver/*:number*/)/*:void*/ {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file/*:RawBytes*/, ssz/*:number*/)/*:Array<RawBytes>*/ {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors/*:Array<RawBytes>*/ = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI/*:CFBFileIndex*/, FP/*:Array<string>*/, Paths/*:Array<string>*/)/*:void*/ {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad/*:Array<number>*/ = [], q/*:Array<number>*/ = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry/*:CFBEntry*/, payload/*:RawBytes*/, mini/*:?RawBytes*/)/*:CFBlob*/ {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0)/*:any*/);\n\treturn (bconcat(o).slice(0, entry.size)/*:any*/);\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx/*:number*/, cnt/*:number*/, sectors/*:Array<RawBytes>*/, ssz/*:number*/, fat_addrs)/*:void*/ {\n\tvar q/*:number*/ = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tsleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors/*:Array<RawBytes>*/, start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/, chkd/*:?Array<boolean>*/)/*:SectorEntry*/ {\n\tvar buf/*:Array<number>*/ = [], buf_chain/*:Array<any>*/ = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors/*:Array<RawBytes>*/, dir_start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/)/*:SectorList*/ {\n\tvar sl = sectors.length, sector_list/*:SectorList*/ = ([]/*:any*/);\n\tvar chkd/*:Array<boolean>*/ = [], buf/*:Array<number>*/ = [], buf_chain/*:Array<RawBytes>*/ = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]/*:Array<number>*/);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr/*:number*/ = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])}/*:SectorEntry*/);\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start/*:number*/, sector_list/*:SectorList*/, sectors/*:Array<RawBytes>*/, Paths/*:Array<string>*/, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob/*:CFBlob*/ = /*::(*/sector.slice(i, i+128)/*:: :any)*/;\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o/*:CFBEntry*/ = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size)/*:any*/);\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob/*:RawBytes|CFBlob*/, offset/*:number*/)/*:Date*/ {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename/*:string*/, options/*:CFBReadOpts*/) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob/*:RawBytes|string*/, options/*:CFBReadOpts*/) {\n\tvar type = options && options.type;\n\tif(!type) {\n\t\tif(has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n\t}\n\tswitch(type || \"base64\") {\n\t\tcase \"file\": /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n\t\tcase \"base64\": /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64.decode(blob)), options);\n\t\tcase \"binary\": /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n\t}\n\treturn parse(/*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n}\n\nfunction init_cfb(cfb/*:CFBContainer*/, opts/*:?any*/)/*:void*/ {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 }/*:any*/);\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb/*:CFBContainer*/)/*:void*/ {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }/*:any*/));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb/*:CFBContainer*/, f/*:?boolean*/)/*:void*/ {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\t// Track which names exist\n\tvar fullPaths = Object.create ? Object.create(null) : {};\n\tvar data/*:Array<[string, CFBEntry]>*/ = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tfullPaths[cfb.FullPaths[i]] = true;\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = fullPaths[dad];\n\t\tif(!s) {\n\t\t\tdata.push([dad, ({\n\t\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\t\ttype: 1,\n\t\t\t\tclsid: HEADER_CLSID,\n\t\t\t\tct: now, mt: now,\n\t\t\t\tcontent: null\n\t\t\t}/*:any*/)]);\n\t\t\t// Add name to set\n\t\t\tfullPaths[dad] = true;\n\t\t}\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb/*:CFBContainer*/)/*:Array<number>*/{\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\n\t\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\t\tvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w/*:number*/)/*:void*/ {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j/*:number*/ = 0, flen/*:number*/ = 0;\n\tvar file/*:CFBEntry*/ = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm/*:string*/ = (i === 0 && _opts.root) || file.name;\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 511) & -512;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size > 0 && file.size < 0x1000) {\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 63) & -64;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tif (has_buf) {\n\t\to.l = o.length;\n\t} else {\n\t\t// When using Buffer, already 0-filled\n\t\twhile(o.l < o.length) o.write_shift(1, 0);\n\t}\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb/*:CFBContainer*/, path/*:string*/)/*:?CFBEntry*/ {\n\tvar UCFullPaths/*:Array<string>*/ = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths/*:Array<string>*/ = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k/*:boolean*/ = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath/*:string*/ = path.toUpperCase();\n\tvar w/*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb/*:CFBContainer*/, filename/*:string*/, options/*:CFBWriteOpts*/)/*:void*/ {\n\tget_fs();\n\tvar o = _write(cfb, options);\n\t/*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n\tfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o/*:RawBytes*/)/*:string*/ {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o/*:any*/)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64.encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* helpers for unaligned bit writes */\nfunction write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;\n\tif(w <= 5) buf[h] |= (v & 7) << w;\n\telse {\n\t\tbuf[h] |= (v << w) & 0xFF;\n\t\tbuf[h+1] = (v&7) >> (8-w);\n\t}\n\treturn bl + 3;\n}\n\nfunction write_bits_1(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv = (v&1) << w;\n\tbuf[h] |= v;\n\treturn bl + 1;\n}\nfunction write_bits_8(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v;\n\treturn bl + 8;\n}\nfunction write_bits_16(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v & 0xFF;\n\tbuf[h+2] = v >>> 8;\n\treturn bl + 16;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz/*:number*/) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < L; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX/*:number*/)/*:number*/ {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\n/* Fixed Huffman */\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens/*:Array<number>*/ = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens/*:Array<number>*/ = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();var _deflateRaw = (function _deflateRawIIFE() {\n\tvar DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n\tvar j = 0, k = 0;\n\tfor(; j < DST_LN.length - 1; ++j) {\n\t\tfor(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;\n\t}\n\tfor(;k < 32768; ++k) DST_LN_RE[k] = 29;\n\n\tvar LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\tfor(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n\t\tfor(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;\n\t}\n\n\tfunction write_stored(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t}\n\n\t/* Fixed Huffman */\n\tfunction write_huff_fixed(data, out) {\n\t\tvar bl = 0;\n\t\tvar boff = 0;\n\t\tvar addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\t\twhile(boff < data.length) {\n\t\t\tvar L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);\n\n\t\t\t/* write a stored block for short data */\n\t\t\tif(L < 10) {\n\t\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\t\t\t\tif(bl & 7) bl += 8 - (bl & 7);\n\t\t\t\tout.l = (bl / 8) | 0;\n\t\t\t\tout.write_shift(2, L);\n\t\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t\t\tbl = out.l * 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\t\t\tvar hash = 0;\n\t\t\twhile(L-- > 0) {\n\t\t\t\tvar d = data[boff];\n\t\t\t\thash = ((hash << 5) ^ d) & 0x7FFF;\n\n\t\t\t\tvar match = -1, mlen = 0;\n\n\t\t\t\tif((match = addrs[hash])) {\n\t\t\t\t\tmatch |= boff & ~0x7FFF;\n\t\t\t\t\tif(match > boff) match -= 0x8000;\n\t\t\t\t\tif(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n\t\t\t\t}\n\n\t\t\t\tif(mlen > 2) {\n\t\t\t\t\t/* Copy Token  */\n\t\t\t\t\td = LEN_LN_RE[mlen];\n\t\t\t\t\tif(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\twrite_bits_8(out, bl, 3);\n\t\t\t\t\t\tbl += 5;\n\t\t\t\t\t\twrite_bits_8(out, bl, bitswap8[d-23]>>5);\n\t\t\t\t\t\tbl += 3;\n\t\t\t\t\t}\n\t\t\t\t\tvar len_eb = (d < 8) ? 0 : ((d - 4)>>2);\n\t\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, mlen - LEN_LN[d]);\n\t\t\t\t\t\tbl += len_eb;\n\t\t\t\t\t}\n\n\t\t\t\t\td = DST_LN_RE[boff - match];\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]>>3);\n\t\t\t\t\tbl -= 3;\n\n\t\t\t\t\tvar dst_eb = d < 4 ? 0 : (d-2)>>1;\n\t\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, boff - match - DST_LN[d]);\n\t\t\t\t\t\tbl += dst_eb;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var q = 0; q < mlen; ++q) {\n\t\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t\thash = ((hash << 5) ^ data[boff]) & 0x7FFF;\n\t\t\t\t\t\t++boff;\n\t\t\t\t\t}\n\t\t\t\t\tL-= mlen - 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Literal Token */\n\t\t\t\t\tif(d <= 143) d = d + 48;\n\t\t\t\t\telse bl = write_bits_1(out, bl, 1);\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]);\n\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t++boff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbl = write_bits_8(out, bl, 0) - 1;\n\t\t}\n\t\tout.l = ((bl + 7)/8)|0;\n\t\treturn out.l;\n\t}\n\treturn function _deflateRaw(data, out) {\n\t\tif(data.length < 8) return write_stored(data, out);\n\t\treturn write_huff_fixed(data, out);\n\t};\n})();\n\nfunction _deflate(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n}\n/* modified inflate function also moves original read head */\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff/*:number*/) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes/*:Array<number>*/ = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz/*:number*/) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(sz > 0) {\n\t\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\t\twhile(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if((header >> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\tif(usz) return [outbuf, (boff+7)>>>3];\n\treturn [outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tvar blob/*:CFBlob*/ = /*::(*/file/*:: :any)*/;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(/*::(*/blob.slice(blob.l+namelen, blob.l+namelen+efsz)/*:: :any)*/);\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob/*:CFBlob*/, csz/*:number*/, usz/*:number*/, o/*:CFBContainer*/, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(/*::(*/blob.slice(blob.l, blob.l + efsz)/*:: :any)*/);\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break; // TODO: scan for magic number\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\t//var _crc32 = CRC32.buf(data, 0);\n\t//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes*/ {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o/*:CFBlob*/ = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = CRC32.buf(/*::((*/fi.content/*::||[]):any)*/, 0);\n\n\t\tvar outbuf = fi.content/*::||[]*/;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: extra fields? */\n\n\t\t/* TODO: encryption header ? */\n\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out/*:any*/)), bconcat(cdirs), o]/*:any*/));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n}/*:any*/);\n\nfunction get_content_type(fi/*:CFBEntry*/, fp/*:string*/)/*:string*/ {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr/*:string*/)/*:string*/ {\n\tvar data = Base64.encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text/*:string*/)/*:string*/ {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o/*:Array<string>*/ = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data/*:Array<string>*/)/*:RawBytes*/ {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb/*:CFBContainer*/, data/*:Array<string>*/, root/*:string*/)/*:void*/ {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64.decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:string*/ {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}\nfunction cfb_new(opts/*:?any*/)/*:CFBContainer*/ {\n\tvar o/*:CFBContainer*/ = ({}/*:any*/);\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb/*:CFBContainer*/, name/*:string*/, content/*:?RawBytes*/, opts/*:?any*/)/*:CFBEntry*/ {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath/*:string*/ = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2}/*:any*/);\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\n\t/*:: if(!file) throw new Error(\"unreachable\"); */\n\tfile.content = (content/*:any*/);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb/*:CFBContainer*/, name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb/*:CFBContainer*/, old_name/*:string*/, new_name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb/*:CFBContainer*/)/*:void*/ { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nif(typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') { module.exports = CFB; }\nlet _fs = void 0;\nfunction set_fs(fs) { _fs = fs; }\nexport { set_fs };\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n\tif(typeof data === \"string\") return s2ab(data);\n\tif(Array.isArray(data)) return a2u(data);\n\treturn data;\n}\n/* write or download file */\nfunction write_dl(fname/*:string*/, payload/*:any*/, enc/*:?string*/) {\n\t/*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n\tif(typeof Deno !== 'undefined') {\n\t\t/* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n\t\tif(enc && typeof payload == \"string\") switch(enc) {\n\t\t\tcase \"utf8\": payload = new TextEncoder(enc).encode(payload); break;\n\t\t\tcase \"binary\": payload = s2ab(payload); break;\n\t\t\t/* TODO: binary equivalent */\n\t\t\tdefault: throw new Error(\"Unsupported encoding \" + enc);\n\t\t}\n\t\treturn Deno.writeFileSync(fname, payload);\n\t}\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\n\t/*:: declare var IE_SaveFile: any; */\n\tif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n\tif(typeof Blob !== 'undefined') {\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\n\t\t/*:: declare var navigator: any; */\n\t\tif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n\t\t/*:: declare var saveAs: any; */\n\t\tif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n\t\t\tvar url = URL.createObjectURL(blob);\n\t\t\t/*:: declare var chrome: any; */\n\t\t\tif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true});\n\t\t\t}\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\tif(a.download != null) {\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */\n\t\t\t\ta.download = fname; a.href = url; document.body.appendChild(a); a.click();\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */ document.body.removeChild(a);\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\t}\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\n\t\tout.write(payload); out.close(); return payload;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path/*:string*/) {\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n\tif(typeof Deno !== 'undefined') return Deno.readFileSync(path);\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n\t\tvar data = infile.read(); infile.close();\n\t\treturn data;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"Cannot access file \" + path);\n}\nfunction keys(o/*:any*/)/*:Array<any>*/ {\n\tvar ks = Object.keys(o), o2 = [];\n\tfor(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n\treturn o2;\n}\n\nfunction evert_key(obj/*:any*/, key/*:string*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n\treturn o;\n}\n\nfunction evert(obj/*:any*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n\treturn o;\n}\n\nfunction evert_num(obj/*:any*/)/*:EvertNumType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n\treturn o;\n}\n\nfunction evert_arr(obj/*:any*/)/*:EvertArrType*/ {\n\tvar o/*:EvertArrType*/ = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) {\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n\t\to[obj[K[i]]].push(K[i]);\n\t}\n\treturn o;\n}\n\nvar basedate = new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\nfunction datenum(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1462*24*60*60*1000;\n\tvar dnthresh = basedate.getTime() + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;\n\treturn (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n}\nvar refdate = new Date();\nvar dnthresh = basedate.getTime() + (refdate.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;\nvar refoffset = refdate.getTimezoneOffset();\nfunction numdate(v/*:number*/)/*:Date*/ {\n\tvar out = new Date();\n\tout.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n\tif (out.getTimezoneOffset() !== refoffset) {\n\t\tout.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);\n\t}\n\treturn out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].slice(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n\nvar good_pd_date = new Date('2017-02-19T19:06:09.000Z');\nif(isNaN(good_pd_date.getFullYear())) good_pd_date = new Date('2/19/17');\nvar good_pd = good_pd_date.getFullYear() == 2017;\n/* parses a date as a local date */\nfunction parseDate(str/*:string|Date*/, fixdate/*:?number*/)/*:Date*/ {\n\tvar d = new Date(str);\n\tif(good_pd) {\n\t\t/*:: if(fixdate == null) fixdate = 0; */\n\t\tif(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n\t\telse if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n\t\treturn d;\n\t}\n\tif(str instanceof Date) return str;\n\tif(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n\t\tvar s = d.getFullYear();\n\t\tif(str.indexOf(\"\" + s) > -1) return d;\n\t\td.setFullYear(d.getFullYear() + 100); return d;\n\t}\n\tvar n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\n\tvar out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\n\tif(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n\treturn out;\n}\n\nfunction cc2str(arr/*:Array<number>*/, debomit)/*:string*/ {\n\tif(has_buf && Buffer.isBuffer(arr)) {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return arr.slice(2).toString(\"utf16le\");\n\t\t\tif(arr[1] == 0xFE && arr[2] == 0xFF) return utf16beread(arr.slice(2).toString(\"binary\"));\n\t\t}\n\t\treturn arr.toString(\"binary\");\n\t}\n\t/* TODO: investigate performance degradation of TextEncoder in Edge 13 */\n\tvar o = [];\n\tfor(var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n\treturn o.join(\"\");\n}\n\nfunction dup(o/*:any*/)/*:any*/ {\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n\tif(typeof o != 'object' || o == null) return o;\n\tif(o instanceof Date) return new Date(o.getTime());\n\tvar out = {};\n\tfor(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n\treturn out;\n}\n\nfunction fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n/* TODO: stress test */\nfunction fuzzynum(s/*:string*/)/*:number*/ {\n\tvar v/*:number*/ = Number(s);\n\tif(isFinite(v)) return v;\n\tif(!isNaN(v)) return NaN;\n\tif(!/\\d/.test(s)) return v;\n\tvar wt = 1;\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\tss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\treturn v;\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s/*:string*/)/*:Date*/ {\n\tvar o = new Date(s), n = new Date(NaN);\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\n\tif(isNaN(d)) return n;\n\tvar lower = s.toLowerCase();\n\tif(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n\t\tlower = lower.replace(/[^a-z]/g,\"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,\"\");\n\t\tif(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n\t} else if(lower.match(/[a-z]/)) return n;\n\tif(y < 0 || y > 8099) return n;\n\tif((m > 0 || d > 1) && y != 101) return o;\n\tif(s.match(/[^-0-9:,\\/\\\\]/)) return n;\n\treturn o;\n}\n\nvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\nfunction split_regex(str/*:string*/, re, def/*:string*/)/*:Array<string>*/ {\n\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\n\tvar p = str.split(re), o = [p[0]];\n\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n\treturn o;\n}\nfunction getdatastr(data)/*:?string*/ {\n\tif(!data) return null;\n\tif(data.content && data.type) return cc2str(data.content, true);\n\tif(data.data) return debom(data.data);\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n\tif(data.asBinary) return debom(data.asBinary());\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n\treturn null;\n}\n\nfunction getdatabin(data) {\n\tif(!data) return null;\n\tif(data.data) return char_codes(data.data);\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n\tif(data._data && data._data.getContent) {\n\t\tvar o = data._data.getContent();\n\t\tif(typeof o == \"string\") return char_codes(o);\n\t\treturn Array.prototype.slice.call(o);\n\t}\n\tif(data.content && data.type) return data.content;\n\treturn null;\n}\n\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file/*:string*/) {\n\tvar k = zip.FullPaths || keys(zip.files);\n\tvar f = file.toLowerCase().replace(/[\\/]/g, '\\\\'), g = f.replace(/\\\\/g,'\\/');\n\tfor(var i=0; i<k.length; ++i) {\n\t\tvar n = k[i].replace(/^Root Entry[\\/]/,\"\").toLowerCase();\n\t\tif(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n\t}\n\treturn null;\n}\n\nfunction getzipfile(zip, file/*:string*/) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipstr(zip, file/*:string*/, safe/*:?boolean*/)/*:?string*/ {\n\tif(!safe) return getdatastr(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipbin(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdatabin(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipbin(zip, file); } catch(e) { return null; }\n}\n\nfunction zipentries(zip) {\n\tvar k = zip.FullPaths || keys(zip.files), o = [];\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n\treturn o.sort();\n}\n\nfunction zip_add_file(zip, path, content) {\n\tif(zip.FullPaths) {\n\t\tif(typeof content == \"string\") {\n\t\t\tvar res;\n\t\t\tif(has_buf) res = Buffer_from(content);\n\t\t\t/* TODO: investigate performance in Edge 13 */\n\t\t\t//else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n\t\t\telse res = utf8decode(content);\n\t\t\treturn CFB.utils.cfb_add(zip, path, res);\n\t\t}\n\t\tCFB.utils.cfb_add(zip, path, content);\n\t}\n\telse zip.file(path, content);\n}\n\nfunction zip_new() { return CFB.utils.cfb_new(); }\n\nfunction zip_read(d, o) {\n\tswitch(o.type) {\n\t\tcase \"base64\": return CFB.read(d, { type: \"base64\" });\n\t\tcase \"binary\": return CFB.read(d, { type: \"binary\" });\n\t\tcase \"buffer\": case \"array\": return CFB.read(d, { type: \"buffer\" });\n\t}\n\tthrow new Error(\"Unrecognized type \" + o.type);\n}\n\nfunction resolve_path(path/*:string*/, base/*:string*/)/*:string*/ {\n\tif(path.charAt(0) == \"/\") return path.slice(1);\n\tvar result = base.split('/');\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\n\tvar target = path.split('/');\n\twhile (target.length !== 0) {\n\t\tvar step = target.shift();\n\t\tif (step === '..') result.pop();\n\t\telse if (step !== '.') result.push(step);\n\t}\n\treturn result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex=/<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s*[\\/\\?]?>/mg;\n\nif(!(XML_HEADER.match(tagregex))) tagregex = /<[^>]*>/g;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag/*:string*/, skip_root/*:?boolean*/, skip_LC/*:?boolean*/)/*:any*/ {\n\tvar z = ({}/*:any*/);\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.slice(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i];\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.slice(0,c).trim();\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) {\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n\t\t\tz[q] = v;\n\t\t\tif(!skip_LC) z[q.toLowerCase()] = v;\n\t\t}\n\t\telse {\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n\t\t\tz[k] = v;\n\t\t\tif(!skip_LC) z[k.toLowerCase()] = v;\n\t\t}\n\t}\n\treturn z;\n}\nfunction strip_ns(x/*:string*/)/*:string*/ { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml/*:StringConv*/ = (function() {\n\t/* 22.4.2.4 bstr (Basic String) */\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig, coderegex = /_x([\\da-fA-F]{4})_/ig;\n\treturn function unescapexml(text/*:string*/)/*:string*/ {\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n\t\tvar j = s.indexOf(\"]]>\");\n\t\treturn unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));\n\t};\n})();\n\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\nfunction escapexml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n}\nfunction escapexmltag(text/*:string*/)/*:string*/{ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n}\n\nfunction escapexlml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr/*:StringConv*/ = (function() {\n\tvar entregex = /&#(\\d+);/g;\n\tfunction entrepl($$/*:string*/,$1/*:string*/)/*:string*/ { return String.fromCharCode(parseInt($1,10)); }\n\treturn function xlml_fixstr(str/*:string*/)/*:string*/ { return str.replace(entregex,entrepl); };\n})();\nvar xlml_unfixstr/*:StringConv*/ = (function() {\n\treturn function xlml_unfixstr(str/*:string*/)/*:string*/ { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); };\n})();\n\nfunction parsexmlbool(value/*:any*/)/*:boolean*/ {\n\tswitch(value) {\n\t\tcase 1: case true: case '1': case 'true': case 'TRUE': return true;\n\t\t/* case '0': case 'false': case 'FALSE':*/\n\t\tdefault: return false;\n\t}\n}\n\nvar utf8read/*:StringConv*/ = function utf8reada(orig/*:string*/)/*:string*/ {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n};\n\nvar utf8write/*:StringConv*/ = function(orig/*:string*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [], i = 0, c = 0, d = 0;\n\twhile(i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tswitch(true) {\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\n\t\t\tcase c < 2048:\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t\t\tbreak;\n\t\t\tcase c >= 55296 && c < 57344:\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t}\n\t}\n\treturn out.join(\"\");\n};\n\nif(has_buf) {\n\tvar utf8readb = function utf8readb(data) {\n\t\tvar out = Buffer.alloc(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n\t\tfor(i = 0; i < data.length; i+=j) {\n\t\t\tj = 1;\n\t\t\tif((c=data.charCodeAt(i)) < 128) w = c;\n\t\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n\t\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n\t\t\telse { j = 4;\n\t\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n\t\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n\t\t\t}\n\t\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n\t\t\tout[k++] = w%256; out[k++] = w>>>8;\n\t\t}\n\t\treturn out.slice(0,k).toString('ucs2');\n\t};\n\tvar corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\n\tif(utf8read(corpus) == utf8readb(corpus)) utf8read = utf8readb;\n\tvar utf8readc = function utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); };\n\tif(utf8read(corpus) == utf8readc(corpus)) utf8read = utf8readc;\n\n\tutf8write = function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); };\n}\n\n// matches <foo>...</foo> extracts content\nvar matchtag = (function() {\n\tvar mtcache/*:{[k:string]:RegExp}*/ = ({}/*:any*/);\n\treturn function matchtag(f/*:string*/,g/*:?string*/)/*:RegExp*/ {\n\t\tvar t = f+\"|\"+(g||\"\");\n\t\tif(mtcache[t]) return mtcache[t];\n\t\treturn (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\")/*:any*/)));\n\t};\n})();\n\nvar htmldecode/*:{(s:string):string}*/ = (function() {\n\tvar entities/*:Array<[RegExp, string]>*/ = [\n\t\t['nbsp', ' '], ['middot', '·'],\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n\t].map(function(x/*:[string, string]*/) { return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]]; });\n\treturn function htmldecode(str/*:string*/)/*:string*/ {\n\t\tvar o = str\n\t\t\t\t// Remove new lines and spaces from start of content\n\t\t\t\t.replace(/^[\\t\\n\\r ]+/, \"\")\n\t\t\t\t// Remove new lines and spaces from end of content\n\t\t\t\t.replace(/[\\t\\n\\r ]+$/,\"\")\n\t\t\t\t// Added line which removes any white space characters after and before html tags\n\t\t\t\t.replace(/>\\s+/g,\">\").replace(/\\s+</g,\"<\")\n\t\t\t\t// Replace remaining new lines and spaces with space\n\t\t\t\t.replace(/[\\t\\n\\r ]+/g, \" \")\n\t\t\t\t// Replace <br> tags with new lines\n\t\t\t\t.replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\")\n\t\t\t\t// Strip HTML elements\n\t\t\t\t.replace(/<[^>]*>/g,\"\");\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n\t\treturn o;\n\t};\n})();\n\nvar vtregex = (function(){ var vt_cache = {};\n\treturn function vt_regex(bt) {\n\t\tif(vt_cache[bt] !== undefined) return vt_cache[bt];\n\t\treturn (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\n};})();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data/*:string*/, opts)/*:Array<{v:string,t:string}>*/ {\n\tvar h = parsexmltag(data);\n\n\tvar matches/*:Array<string>*/ = data.match(vtregex(h.baseType))||[];\n\tvar res/*:Array<any>*/ = [];\n\tif(matches.length != h.size) {\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n\t\treturn res;\n\t}\n\tmatches.forEach(function(x/*:string*/) {\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\n\t});\n\treturn res;\n}\n\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f/*:string*/,g/*:string*/)/*:string*/ { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\nfunction wxt_helper(h)/*:string*/ { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\nfunction writextag(f/*:string*/,g/*:?string*/,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\nfunction write_w3cdtf(d/*:Date*/, t/*:?boolean*/)/*:string*/ { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\nfunction write_vt(s, xlsx/*:?boolean*/)/*:string*/ {\n\tswitch(typeof s) {\n\t\tcase 'string':\n\t\t\tvar o = writextag('vt:lpwstr', escapexml(s));\n\t\t\tif(xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n\t\t\treturn o;\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', escapexml(String(s)));\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\n\t}\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n\tthrow new Error(\"Unable to serialize \" + s);\n}\n\nvar XMLNS = ({\n\t'dc': 'http://purl.org/dc/elements/1.1/',\n\t'dcterms': 'http://purl.org/dc/terms/',\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\n}/*:any*/);\n\nXMLNS.main = [\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\n\t'http://schemas.microsoft.com/office/excel/2006/main',\n\t'http://schemas.microsoft.com/office/excel/2006/2'\n];\n\nvar XLMLNS = ({\n\t'o':    'urn:schemas-microsoft-com:office:office',\n\t'x':    'urn:schemas-microsoft-com:office:excel',\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n\t'mv':   'http://macVmlSchemaUri',\n\t'v':    'urn:schemas-microsoft-com:vml',\n\t'html': 'http://www.w3.org/TR/REC-html40'\n}/*:any*/);\nfunction read_double_le(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ {\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n\tvar m = (b[idx+6]&0x0f);\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n\tif(e == 0) e = -1022;\n\telse { e -= 1023; m += Math.pow(2,52); }\n\treturn s * Math.pow(2, e - 52) * m;\n}\n\nfunction write_double_le(b/*:RawBytes|CFBlob*/, v/*:number*/, idx/*:number*/) {\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n\tvar av = bs ? (-v) : v;\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n\telse if(av == 0) e = m = 0;\n\telse {\n\t\te = Math.floor(Math.log(av) / Math.LN2);\n\t\tm = av * Math.pow(2, 52 - e);\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n\t\telse { m -= Math.pow(2,52); e+=1023; }\n\t}\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n\tb[idx + 7] = (e >> 4) | bs;\n}\n\nvar __toBuffer = function(bufs/*:Array<Array<RawBytes> >*/)/*:RawBytes*/ { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\nvar ___toBuffer = __toBuffer;\nvar __utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar ___utf16le = __utf16le;\nvar __hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar ___hexlify = __hexlify;\nvar __utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\nvar ___utf8 = __utf8;\nvar __lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar ___lpstr = __lpstr;\nvar __cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar ___cpstr = __cpstr;\nvar __lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar ___lpwstr = __lpwstr;\nvar __lpp4, ___lpp4;\n__lpp4 = ___lpp4 = function lpp4_(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\nvar __8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\nvar ___8lpp4 = __8lpp4;\nvar __double, ___double;\n__double = ___double = function(b/*:RawBytes|CFBlob*/, idx/*:number*/) { return read_double_le(b, idx);};\nvar is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n\nif(has_buf/*:: && typeof Buffer !== 'undefined'*/) {\n\t__utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; };\n\t__hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { return Buffer.isBuffer(b)/*:: && b instanceof Buffer*/ ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); };\n\t__lpstr = function lpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__cpstr = function cpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__lpwstr = function lpwstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n\t__lpp4 = function lpp4_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n\t__8lpp4 = function lpp4_8b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n\t__utf8 = function utf8_b(b/*:RawBytes|CFBlob*/, s/*:number*/, e/*:number*/) { return (Buffer.isBuffer(b)/*:: && (b instanceof Buffer)*/) ? b.toString('utf8',s,e) : ___utf8(b,s,e); };\n\t__toBuffer = function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);};\n\tbconcat = function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); };\n\t__double = function double_(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(Buffer.isBuffer(b)/*::&& b instanceof Buffer*/) return b.readDoubleLE(i); return ___double(b,i); };\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n\t__utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n\t__utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return cptable.utils.decode(65001, b.slice(s,e)); };\n\t__lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n\t__lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n\t__8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n}\nif(typeof cptable !== 'undefined') cpdoit();\n\nvar __readUInt8 = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx]; };\nvar __readUInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+1]*(1<<8))+b[idx]; };\nvar __readInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\nvar __readUInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\nvar __readInt32BE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\nfunction ReadShift(size/*:number*/, t/*:?string*/)/*:number|string*/ {\n\tvar o=\"\", oI/*:: :number = 0*/, oR, oo=[], w, vv, i, loc;\n\tswitch(t) {\n\t\tcase 'dbcs':\n\t\t\tloc = this.l;\n\t\t\tif(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n\t\t\tsize *= 2;\n\t\t\tbreak;\n\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n\t\tcase 'wstr':\n\t\t\tif(typeof cptable !== 'undefined') o = cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\n\t\t\tsize = 2 * size; break;\n\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n\t\tcase 'cstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n\t\t\tsize+=2; o = oo.join(\"\"); break;\n\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i < size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\n\t\t\t\tloc+=2;\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\n\n\t\tcase 'cpstr':\n\t\t\tif(typeof cptable !== 'undefined') {\n\t\t\t\to = cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t/* falls through */\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i != size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\n\t\t\t\tloc+=1;\n\t\t\t} o = oo.join(\"\"); break;\n\n\t\tdefault:\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n\t\tcase 4: case -4:\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n\t\tcase 8: case -8:\n\t\t\tif(t === 'f') {\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n\t\t\t\tthis.l += 8; return oR;\n\t\t\t} else size = 8;\n\t\t/* falls through */\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\n\t}}\n\tthis.l+=size; return o;\n}\n\nvar __writeUInt32LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\nvar __writeUInt16LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\nfunction WriteShift(t/*:number*/, val/*:string|number*/, f/*:?string*/)/*:any*/ {\n\tvar size = 0, i = 0;\n\tif(f === 'dbcs') {\n\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\tfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n\t\tsize = 2 * val.length;\n\t} else if(f === 'sbcs') {\n\t\tif(typeof cptable !== 'undefined' && current_ansi == 874) {\n\t\t\t/* TODO: use tables directly, don't encode */\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) {\n\t\t\t\tvar cppayload = cptable.utils.encode(current_ansi, val.charAt(i));\n\t\t\t\tthis[this.l + i] = cppayload[0];\n\t\t\t}\n\t\t} else {\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n\t\t}\n\t\tsize = val.length;\n\t} else if(f === 'hex') {\n\t\tfor(; i < t; ++i) {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n\t\t} return this;\n\t} else if(f === 'utf16le') {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tvar end/*:number*/ = Math.min(this.l + t, this.length);\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = (cc & 0xff);\n\t\t\t\tthis[this.l++] = (cc >> 8);\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t} else /*:: if(typeof val === 'number') */ switch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n\t\t/* falls through */\n\t\tcase 16: break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr/*:string*/, fld/*:string*/)/*:void*/ {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos/*:number*/)/*:void*/ {\n\tblob.l = pos;\n\tblob.read_shift = /*::(*/ReadShift/*:: :any)*/;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction parsenoop(blob, length/*:: :number, opts?:any */) { blob.l += length; }\n\nfunction new_buf(sz/*:number*/)/*:Block*/ {\n\tvar o = new_raw_buf(sz);\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb/*:RecordHopperCB*/, opts/*:?any*/) {\n\tif(!data) return;\n\tvar tmpbyte, cntbyte, length;\n\tprep_blob(data, data.l || 0);\n\tvar L = data.length, RT = 0, tgt = 0;\n\twhile(data.l < L) {\n\t\tRT = data.read_shift(1);\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n\t\ttmpbyte = data.read_shift(1);\n\t\tlength = tmpbyte & 0x7F;\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n\t\ttgt = data.l + length;\n\t\tvar d = R.f && R.f(data, length, opts);\n\t\tdata.l = tgt;\n\t\tif(cb(d, R.n, RT)) return;\n\t}\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array()/*:BufArray*/ {\n\tvar bufs/*:Array<Block>*/ = [], blksz = has_buf ? 256 : 2048;\n\tvar newblk = function ba_newblk(sz/*:number*/)/*:Block*/ {\n\t\tvar o/*:Block*/ = (new_buf(sz)/*:any*/);\n\t\tprep_blob(o, 0);\n\t\treturn o;\n\t};\n\n\tvar curbuf/*:Block*/ = newblk(blksz);\n\n\tvar endbuf = function ba_endbuf() {\n\t\tif(!curbuf) return;\n\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n\t\tif(curbuf.length > 0) bufs.push(curbuf);\n\t\tcurbuf = null;\n\t};\n\n\tvar next = function ba_next(sz/*:number*/)/*:Block*/ {\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n\t\tendbuf();\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\n\t};\n\n\tvar end = function ba_end() {\n\t\tendbuf();\n\t\treturn bconcat(bufs);\n\t};\n\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n\treturn ({ next:next, push:push, end:end, _bufs:bufs }/*:any*/);\n}\n\nfunction write_record(ba/*:BufArray*/, type/*:string*/, payload, length/*:?number*/) {\n\tif(!XLSBRE) make_XLSBRE();\n\tvar t/*:number*/ = +XLSBRE[type], l;\n\tif(isNaN(t)) return; // TODO: throw something here?\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n\tvar o = ba.next(l);\n\tif(t <= 0x7F) o.write_shift(1, t);\n\telse {\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\n\t\to.write_shift(1, (t >> 7));\n\t}\n\tfor(var i = 0; i != 4; ++i) {\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n\t\telse { o.write_shift(1, length); break; }\n\t}\n\tif(/*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell/*:CellAddress*/, tgt/*:any*/, opts/*:?any*/)/*:CellAddress*/ {\n\tvar out = dup(cell);\n\tif(tgt.s) {\n\t\tif(out.cRel) out.c += tgt.s.c;\n\t\tif(out.rRel) out.r += tgt.s.r;\n\t} else {\n\t\tif(out.cRel) out.c += tgt.c;\n\t\tif(out.rRel) out.r += tgt.r;\n\t}\n\tif(!opts || opts.biff < 12) {\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\n\t}\n\treturn out;\n}\n\nfunction shift_range_xls(cell, range, opts) {\n\tvar out = dup(cell);\n\tout.s = shift_cell_xls(out.s, range.s, opts);\n\tout.e = shift_cell_xls(out.e, range.s, opts);\n\treturn out;\n}\n\nfunction encode_cell_xls(c/*:CellAddress*/, biff/*:number*/)/*:string*/ {\n\tif(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }\n\tif(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n\tvar s = encode_cell(c);\n\tif(!c.cRel && c.cRel != null) s = fix_col(s);\n\tif(!c.rRel && c.rRel != null) s = fix_row(s);\n\treturn s;\n}\n\nfunction encode_range_xls(r, opts)/*:string*/ {\n\tif(r.s.r == 0 && !r.s.rRel) {\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n\t\t}\n\t}\n\tif(r.s.c == 0 && !r.s.cRel) {\n\t\tif(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n\t\t}\n\t}\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr/*:string*/)/*:number*/ { return parseInt(unfix_row(rowstr),10) - 1; }\nfunction encode_row(row/*:number*/)/*:string*/ { return \"\" + (row + 1); }\nfunction fix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\nfunction unfix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\nfunction decode_col(colstr/*:string*/)/*:number*/ { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\nfunction encode_col(col/*:number*/)/*:string*/ { if(col < 0) throw new Error(\"invalid column \" + col); var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\nfunction fix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\nfunction unfix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\nfunction split_cell(cstr/*:string*/)/*:Array<string>*/ { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\n//function decode_cell(cstr/*:string*/)/*:CellAddress*/ { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\nfunction decode_cell(cstr/*:string*/)/*:CellAddress*/ {\n\tvar R = 0, C = 0;\n\tfor(var i = 0; i < cstr.length; ++i) {\n\t\tvar cc = cstr.charCodeAt(i);\n\t\tif(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);\n\t\telse if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n\t}\n\treturn { c: C - 1, r:R - 1 };\n}\n//function encode_cell(cell/*:CellAddress*/)/*:string*/ { return encode_col(cell.c) + encode_row(cell.r); }\nfunction encode_cell(cell/*:CellAddress*/)/*:string*/ {\n\tvar col = cell.c + 1;\n\tvar s=\"\";\n\tfor(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;\n\treturn s + (cell.r + 1);\n}\nfunction decode_range(range/*:string*/)/*:Range*/ {\n\tvar idx = range.indexOf(\":\");\n\tif(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };\n\treturn { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs/*:CellAddrSpec|Range*/,ce/*:?CellAddrSpec*/)/*:string*/ {\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\n/*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n\t\treturn encode_range(cs.s, cs.e);\n\t}\n/*:: if((cs instanceof Range)) throw \"unreachable\"; */\n\tif(typeof cs !== 'string') cs = encode_cell((cs/*:any*/));\n\tif(typeof ce !== 'string') ce = encode_cell((ce/*:any*/));\n/*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n/*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n\treturn cs == ce ? cs : cs + \":\" + ce;\n}\n\nfunction safe_decode_range(range/*:string*/)/*:Range*/ {\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\tvar idx = 0, i = 0, cc = 0;\n\tvar len = range.length;\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.s.c = --idx;\n\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.s.r = --idx;\n\n\tif(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\t++i;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.e.c = --idx;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.e.r = --idx;\n\treturn o;\n}\n\nfunction safe_format_cell(cell/*:Cell*/, v/*:any*/) {\n\tvar q = (cell.t == 'd' && v instanceof Date);\n\tif(cell.z != null) try { return (cell.w = SSF.format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n\ttry { return (cell.w = SSF.format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n}\n\nfunction format_cell(cell/*:Cell*/, v/*:any*/, o/*:any*/) {\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\n\tif(cell.w !== undefined) return cell.w;\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n\tif(cell.t == \"e\") return BErr[cell.v] || cell.v;\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\n\treturn safe_format_cell(cell, v);\n}\n\nfunction sheet_to_workbook(sheet/*:Worksheet*/, opts)/*:Workbook*/ {\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n\tvar sheets = {}; sheets[n] = sheet;\n\treturn { SheetNames: [n], Sheets: sheets };\n}\n\nfunction sheet_add_aoa(_ws/*:?Worksheet*/, data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? Array.isArray(_ws) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar ws/*:Worksheet*/ = _ws || (dense ? ([]/*:any*/) : ({}/*:any*/));\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t\tif(!ws[\"!ref\"]) ws[\"!ref\"] = \"A1:A1\";\n\t}\n\tvar range/*:Range*/ = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.s.c = _range.s.c;\n\t\trange.s.r = _range.s.r;\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) range.e.r = _R = _range.e.r + 1;\n\t}\n\tfor(var R = 0; R != data.length; ++R) {\n\t\tif(!data[R]) continue;\n\t\tif(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n\t\tfor(var C = 0; C != data[R].length; ++C) {\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\n\t\t\tvar cell/*:Cell*/ = ({v: data[R][C] }/*:any*/);\n\t\t\tvar __R = _R + R, __C = _C + C;\n\t\t\tif(range.s.r > __R) range.s.r = __R;\n\t\t\tif(range.s.c > __C) range.s.c = __C;\n\t\t\tif(range.e.r < __R) range.e.r = __R;\n\t\t\tif(range.e.c < __C) range.e.c = __C;\n\t\t\tif(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n\t\t\telse {\n\t\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n\t\t\t\tif(cell.v === null) {\n\t\t\t\t\tif(cell.f) cell.t = 'n';\n\t\t\t\t\telse if(o.nullError) { cell.t = 'e'; cell.v = 0; }\n\t\t\t\t\telse if(!o.sheetStubs) continue;\n\t\t\t\t\telse cell.t = 'z';\n\t\t\t\t}\n\t\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\n\t\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\n\t\t\t\telse if(cell.v instanceof Date) {\n\t\t\t\t\tcell.z = o.dateNF || SSF._table[14];\n\t\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF.format(cell.z, datenum(cell.v)); }\n\t\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF.format(cell.z, cell.v); }\n\t\t\t\t}\n\t\t\t\telse cell.t = 's';\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tif(!ws[__R]) ws[__R] = [];\n\t\t\t\tif(ws[__R][__C] && ws[__R][__C].z) cell.z = ws[__R][__C].z;\n\t\t\t\tws[__R][__C] = cell;\n\t\t\t} else {\n\t\t\t\tvar cell_ref = encode_cell(({c:__C,r:__R}/*:any*/));\n\t\t\t\tif(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n\t\t\t\tws[cell_ref] = cell;\n\t\t\t}\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction aoa_to_sheet(data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ { return sheet_add_aoa(null, data, opts); }\n\nfunction parse_Int32LE(data) {\n\treturn data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x/*:number*/, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(4, x);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(4 + 2 * data.length); }\n\to.write_shift(4, data.length);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n}\nfunction write_StrRun(run, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(2, run.ich || 0);\n\to.write_shift(2, run.ifnt || 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length/*:number*/)/*:XLString*/ {\n\tvar start = data.l;\n\tvar flags = data.read_shift(1);\n\tvar str = parse_XLWideString(data);\n\tvar rgsStrRun = [];\n\tvar z = ({ t: str, h: str }/*:any*/);\n\tif ((flags & 1) !== 0) { /* fRichStr */\n\t\t/* TODO: formatted string */\n\t\tvar dwSizeStrRun = data.read_shift(4);\n\t\tfor (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n\t\tz.r = rgsStrRun;\n\t}\n\telse z.r = [{ ich: 0, ifnt: 0 }];\n\t//if((flags & 2) !== 0) { /* fExtStr */\n\t//\t/* TODO: phonetic string */\n\t//}\n\tdata.l = start + length;\n\treturn z;\n}\nfunction write_RichStr(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(15 + 4 * str.t.length); }\n\to.write_shift(1, 0);\n\twrite_XLWideString(str.t, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(23 + 4 * str.t.length); }\n\to.write_shift(1, 1);\n\twrite_XLWideString(str.t, o);\n\to.write_shift(4, 1);\n\twrite_StrRun({ ich: 0, ifnt: 0 }, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data)/*:any*/ {\n\tvar col = data.read_shift(4);\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) << 16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c: col, iStyleRef: iStyleRef };\n}\nfunction write_XLSBCell(cell/*:any*/, o/*:?Block*/) {\n\tif (o == null) o = new_buf(8);\n\to.write_shift(-4, cell.c);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data)/*:any*/ {\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) <<16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c:-1, iStyleRef: iStyleRef };\n}\nfunction write_XLSBShortCell(cell/*:any*/, o/*:?Block*/) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(127); }\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data)/*:number*/ {\n\tvar b = data.slice(data.l, data.l + 4);\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\n\tdata.l += 4;\n\tvar RK = fInt === 0 ? __double([0, 0, 0, 0, (b[0] & 0xFC), b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n\treturn fX100 ? (RK / 100) : RK;\n}\nfunction write_RkNumber(data/*:number*/, o) {\n\tif (o == null) o = new_buf(4);\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\n\tif ((data == (data | 0)) && (data >= -(1 << 29)) && (data < (1 << 29))) { fInt = 1; }\n\telse if ((d100 == (d100 | 0)) && (d100 >= -(1 << 29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n\tif (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/)/*:Range*/ {\n\tvar cell/*:Range*/ = ({ s: {}, e: {} }/*:any*/);\n\tcell.s.r = data.read_shift(4);\n\tcell.e.r = data.read_shift(4);\n\tcell.s.c = data.read_shift(4);\n\tcell.e.c = data.read_shift(4);\n\treturn cell;\n}\nfunction write_RfX(r/*:Range*/, o) {\n\tif (!o) o = new_buf(16);\n\to.write_shift(4, r.s.r);\n\to.write_shift(4, r.e.r);\n\to.write_shift(4, r.s.c);\n\to.write_shift(4, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data/*::, length*/) {\n\tif(data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n\treturn data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data/*::, length*/) {\n\tvar out = {};\n\tvar d = data.read_shift(1);\n\n\t//var fValidRGB = d & 1;\n\tvar xColorType = d >>> 1;\n\n\tvar index = data.read_shift(1);\n\tvar nTS = data.read_shift(2, 'i');\n\tvar bR = data.read_shift(1);\n\tvar bG = data.read_shift(1);\n\tvar bB = data.read_shift(1);\n\tdata.l++; //var bAlpha = data.read_shift(1);\n\n\tswitch (xColorType) {\n\t\tcase 0: out.auto = 1; break;\n\t\tcase 1:\n\t\t\tout.index = index;\n\t\t\tvar icv = XLSIcv[index];\n\t\t\t/* automatic pseudo index 81 */\n\t\t\tif (icv) out.rgb = rgb2Hex(icv);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\n\t\t\tbreak;\n\t\tcase 3: out.theme = index; break;\n\t}\n\tif (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n\treturn out;\n}\nfunction write_BrtColor(color, o) {\n\tif (!o) o = new_buf(8);\n\tif (!color || color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n\tif (color.index != null) {\n\t\to.write_shift(1, 0x02);\n\t\to.write_shift(1, color.index);\n\t} else if (color.theme != null) {\n\t\to.write_shift(1, 0x06);\n\t\to.write_shift(1, color.theme);\n\t} else {\n\t\to.write_shift(1, 0x05);\n\t\to.write_shift(1, 0);\n\t}\n\tvar nTS = color.tint || 0;\n\tif (nTS > 0) nTS *= 32767;\n\telse if (nTS < 0) nTS *= 32768;\n\to.write_shift(2, nTS);\n\tif (!color.rgb || color.theme != null) {\n\t\to.write_shift(2, 0);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(1, 0);\n\t} else {\n\t\tvar rgb = (color.rgb || 'FFFFFF');\n\t\tif (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n\t\to.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n\t\to.write_shift(1, 0xFF);\n\t}\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data/*::, length, opts*/) {\n\tvar d = data.read_shift(1);\n\tdata.l++;\n\tvar out = {\n\t\tfBold: d & 0x01,\n\t\tfItalic: d & 0x02,\n\t\tfUnderline: d & 0x04,\n\t\tfStrikeout: d & 0x08,\n\t\tfOutline: d & 0x10,\n\t\tfShadow: d & 0x20,\n\t\tfCondense: d & 0x40,\n\t\tfExtend: d & 0x80\n\t};\n\treturn out;\n}\nfunction write_FontFlags(font, o) {\n\tif (!o) o = new_buf(2);\n\tvar grbit =\n\t\t(font.italic ? 0x02 : 0) |\n\t\t(font.strike ? 0x08 : 0) |\n\t\t(font.outline ? 0x10 : 0) |\n\t\t(font.shadow ? 0x20 : 0) |\n\t\t(font.condense ? 0x40 : 0) |\n\t\t(font.extend ? 0x80 : 0);\n\to.write_shift(1, grbit);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w/*:number*/)/*:string*/ {\n\t// $FlowIgnore\n\tvar ClipFmt = { 2: \"BITMAP\", 3: \"METAFILEPICT\", 8: \"DIB\", 14: \"ENHMETAFILE\" };\n\tvar m/*:number*/ = o.read_shift(4);\n\tswitch (m) {\n\t\tcase 0x00000000: return \"\";\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)] || \"\";\n\t}\n\tif (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n\to.l -= 4;\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n/* [MS-OLEPS] 2.2 PropertyType */\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2       = 0x0002;\nvar VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL     = 0x000B;\nvar VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\nvar VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\nvar VT_VECTOR   = 0x1000;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Category', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'PresentationFormat', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'ByteCount', t: VT_I4 },\n\t/*::[*/0x05/*::]*/: { n: 'LineCount', t: VT_I4 },\n\t/*::[*/0x06/*::]*/: { n: 'ParagraphCount', t: VT_I4 },\n\t/*::[*/0x07/*::]*/: { n: 'SlideCount', t: VT_I4 },\n\t/*::[*/0x08/*::]*/: { n: 'NoteCount', t: VT_I4 },\n\t/*::[*/0x09/*::]*/: { n: 'HiddenCount', t: VT_I4 },\n\t/*::[*/0x0a/*::]*/: { n: 'MultimediaClipCount', t: VT_I4 },\n\t/*::[*/0x0b/*::]*/: { n: 'ScaleCrop', t: VT_BOOL },\n\t/*::[*/0x0c/*::]*/: { n: 'HeadingPairs', t: VT_VECTOR | VT_VARIANT },\n\t/*::[*/0x0d/*::]*/: { n: 'TitlesOfParts', t: VT_VECTOR | VT_LPSTR },\n\t/*::[*/0x0e/*::]*/: { n: 'Manager', t: VT_STRING },\n\t/*::[*/0x0f/*::]*/: { n: 'Company', t: VT_STRING },\n\t/*::[*/0x10/*::]*/: { n: 'LinksUpToDate', t: VT_BOOL },\n\t/*::[*/0x11/*::]*/: { n: 'CharacterCount', t: VT_I4 },\n\t/*::[*/0x13/*::]*/: { n: 'SharedDoc', t: VT_BOOL },\n\t/*::[*/0x16/*::]*/: { n: 'HyperlinksChanged', t: VT_BOOL },\n\t/*::[*/0x17/*::]*/: { n: 'AppVersion', t: VT_I4, p: 'version' },\n\t/*::[*/0x18/*::]*/: { n: 'DigSig', t: VT_BLOB },\n\t/*::[*/0x1A/*::]*/: { n: 'ContentType', t: VT_STRING },\n\t/*::[*/0x1B/*::]*/: { n: 'ContentStatus', t: VT_STRING },\n\t/*::[*/0x1C/*::]*/: { n: 'Language', t: VT_STRING },\n\t/*::[*/0x1D/*::]*/: { n: 'Version', t: VT_STRING },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Title', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'Subject', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'Author', t: VT_STRING },\n\t/*::[*/0x05/*::]*/: { n: 'Keywords', t: VT_STRING },\n\t/*::[*/0x06/*::]*/: { n: 'Comments', t: VT_STRING },\n\t/*::[*/0x07/*::]*/: { n: 'Template', t: VT_STRING },\n\t/*::[*/0x08/*::]*/: { n: 'LastAuthor', t: VT_STRING },\n\t/*::[*/0x09/*::]*/: { n: 'RevNumber', t: VT_STRING },\n\t/*::[*/0x0A/*::]*/: { n: 'EditTime', t: VT_FILETIME },\n\t/*::[*/0x0B/*::]*/: { n: 'LastPrinted', t: VT_FILETIME },\n\t/*::[*/0x0C/*::]*/: { n: 'CreatedDate', t: VT_FILETIME },\n\t/*::[*/0x0D/*::]*/: { n: 'ModifiedDate', t: VT_FILETIME },\n\t/*::[*/0x0E/*::]*/: { n: 'PageCount', t: VT_I4 },\n\t/*::[*/0x0F/*::]*/: { n: 'WordCount', t: VT_I4 },\n\t/*::[*/0x10/*::]*/: { n: 'CharCount', t: VT_I4 },\n\t/*::[*/0x11/*::]*/: { n: 'Thumbnail', t: VT_CF },\n\t/*::[*/0x12/*::]*/: { n: 'Application', t: VT_STRING },\n\t/*::[*/0x13/*::]*/: { n: 'DocSecurity', t: VT_I4 },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\nvar DocSummaryRE/*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\nvar SummaryRE/*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n\t/*::[*/0x0001/*::]*/: \"US\", // United States\n\t/*::[*/0x0002/*::]*/: \"CA\", // Canada\n\t/*::[*/0x0003/*::]*/: \"\", // Latin America (except Brazil)\n\t/*::[*/0x0007/*::]*/: \"RU\", // Russia\n\t/*::[*/0x0014/*::]*/: \"EG\", // Egypt\n\t/*::[*/0x001E/*::]*/: \"GR\", // Greece\n\t/*::[*/0x001F/*::]*/: \"NL\", // Netherlands\n\t/*::[*/0x0020/*::]*/: \"BE\", // Belgium\n\t/*::[*/0x0021/*::]*/: \"FR\", // France\n\t/*::[*/0x0022/*::]*/: \"ES\", // Spain\n\t/*::[*/0x0024/*::]*/: \"HU\", // Hungary\n\t/*::[*/0x0027/*::]*/: \"IT\", // Italy\n\t/*::[*/0x0029/*::]*/: \"CH\", // Switzerland\n\t/*::[*/0x002B/*::]*/: \"AT\", // Austria\n\t/*::[*/0x002C/*::]*/: \"GB\", // United Kingdom\n\t/*::[*/0x002D/*::]*/: \"DK\", // Denmark\n\t/*::[*/0x002E/*::]*/: \"SE\", // Sweden\n\t/*::[*/0x002F/*::]*/: \"NO\", // Norway\n\t/*::[*/0x0030/*::]*/: \"PL\", // Poland\n\t/*::[*/0x0031/*::]*/: \"DE\", // Germany\n\t/*::[*/0x0034/*::]*/: \"MX\", // Mexico\n\t/*::[*/0x0037/*::]*/: \"BR\", // Brazil\n\t/*::[*/0x003d/*::]*/: \"AU\", // Australia\n\t/*::[*/0x0040/*::]*/: \"NZ\", // New Zealand\n\t/*::[*/0x0042/*::]*/: \"TH\", // Thailand\n\t/*::[*/0x0051/*::]*/: \"JP\", // Japan\n\t/*::[*/0x0052/*::]*/: \"KR\", // Korea\n\t/*::[*/0x0054/*::]*/: \"VN\", // Viet Nam\n\t/*::[*/0x0056/*::]*/: \"CN\", // China\n\t/*::[*/0x005A/*::]*/: \"TR\", // Turkey\n\t/*::[*/0x0069/*::]*/: \"JS\", // Ramastan\n\t/*::[*/0x00D5/*::]*/: \"DZ\", // Algeria\n\t/*::[*/0x00D8/*::]*/: \"MA\", // Morocco\n\t/*::[*/0x00DA/*::]*/: \"LY\", // Libya\n\t/*::[*/0x015F/*::]*/: \"PT\", // Portugal\n\t/*::[*/0x0162/*::]*/: \"IS\", // Iceland\n\t/*::[*/0x0166/*::]*/: \"FI\", // Finland\n\t/*::[*/0x01A4/*::]*/: \"CZ\", // Czech Republic\n\t/*::[*/0x0376/*::]*/: \"TW\", // Taiwan\n\t/*::[*/0x03C1/*::]*/: \"LB\", // Lebanon\n\t/*::[*/0x03C2/*::]*/: \"JO\", // Jordan\n\t/*::[*/0x03C3/*::]*/: \"SY\", // Syria\n\t/*::[*/0x03C4/*::]*/: \"IQ\", // Iraq\n\t/*::[*/0x03C5/*::]*/: \"KW\", // Kuwait\n\t/*::[*/0x03C6/*::]*/: \"SA\", // Saudi Arabia\n\t/*::[*/0x03CB/*::]*/: \"AE\", // United Arab Emirates\n\t/*::[*/0x03CC/*::]*/: \"IL\", // Israel\n\t/*::[*/0x03CE/*::]*/: \"QA\", // Qatar\n\t/*::[*/0x03D5/*::]*/: \"IR\", // Iran\n\t/*::[*/0xFFFF/*::]*/: \"US\"  // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [\n\tnull,\n\t'solid',\n\t'mediumGray',\n\t'darkGray',\n\t'lightGray',\n\t'darkHorizontal',\n\t'darkVertical',\n\t'darkDown',\n\t'darkUp',\n\t'darkGrid',\n\t'darkTrellis',\n\t'lightHorizontal',\n\t'lightVertical',\n\t'lightDown',\n\t'lightUp',\n\t'lightGrid',\n\t'lightTrellis',\n\t'gray125',\n\t'gray0625'\n];\n\nfunction rgbify(arr/*:Array<number>*/)/*:Array<[number, number, number]>*/ { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = rgbify([\n\t/* Color Constants */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t/* Overridable Defaults */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t0x800000,\n\t0x008000,\n\t0x000080,\n\t0x808000,\n\t0x800080,\n\t0x008080,\n\t0xC0C0C0,\n\t0x808080,\n\t0x9999FF,\n\t0x993366,\n\t0xFFFFCC,\n\t0xCCFFFF,\n\t0x660066,\n\t0xFF8080,\n\t0x0066CC,\n\t0xCCCCFF,\n\n\t0x000080,\n\t0xFF00FF,\n\t0xFFFF00,\n\t0x00FFFF,\n\t0x800080,\n\t0x800000,\n\t0x008080,\n\t0x0000FF,\n\t0x00CCFF,\n\t0xCCFFFF,\n\t0xCCFFCC,\n\t0xFFFF99,\n\t0x99CCFF,\n\t0xFF99CC,\n\t0xCC99FF,\n\t0xFFCC99,\n\n\t0x3366FF,\n\t0x33CCCC,\n\t0x99CC00,\n\t0xFFCC00,\n\t0xFF9900,\n\t0xFF6600,\n\t0x666699,\n\t0x969696,\n\t0x003366,\n\t0x339966,\n\t0x003300,\n\t0x333300,\n\t0x993300,\n\t0x993366,\n\t0x333399,\n\t0x333333,\n\n\t/* Other entries to appease BIFF8/12 */\n\t0xFFFFFF, /* 0x40 icvForeground ?? */\n\t0x000000, /* 0x41 icvBackground ?? */\n\t0x000000, /* 0x42 icvFrame ?? */\n\t0x000000, /* 0x43 icv3D ?? */\n\t0x000000, /* 0x44 icv3DText ?? */\n\t0x000000, /* 0x45 icv3DHilite ?? */\n\t0x000000, /* 0x46 icv3DShadow ?? */\n\t0x000000, /* 0x47 icvHilite ?? */\n\t0x000000, /* 0x48 icvCtlText ?? */\n\t0x000000, /* 0x49 icvCtlScrl ?? */\n\t0x000000, /* 0x4A icvCtlInv ?? */\n\t0x000000, /* 0x4B icvCtlBody ?? */\n\t0x000000, /* 0x4C icvCtlFrame ?? */\n\t0x000000, /* 0x4D icvCtlFore ?? */\n\t0x000000, /* 0x4E icvCtlBack ?? */\n\t0x000000, /* 0x4F icvCtlNeutral */\n\t0x000000, /* 0x50 icvInfoBk ?? */\n\t0x000000 /* 0x51 icvInfoText ?? */\n]);\nvar XLSIcv = dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n\t/*::[*/0x00/*::]*/: \"#NULL!\",\n\t/*::[*/0x07/*::]*/: \"#DIV/0!\",\n\t/*::[*/0x0F/*::]*/: \"#VALUE!\",\n\t/*::[*/0x17/*::]*/: \"#REF!\",\n\t/*::[*/0x1D/*::]*/: \"#NAME?\",\n\t/*::[*/0x24/*::]*/: \"#NUM!\",\n\t/*::[*/0x2A/*::]*/: \"#N/A\",\n\t/*::[*/0x2B/*::]*/: \"#GETTING_DATA\",\n\t/*::[*/0xFF/*::]*/: \"#WTF?\"\n};\nvar RBErr = evert_num(BErr);\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type/*{[string]:string}*/ = ({\n\t/* Workbook */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\n\t/* Worksheet */\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n\t/* Macrosheet */\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n\t/* File Properties */\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n\t/* Custom Data Properties */\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n\t/* PivotTable */\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n\t/* Chart Objects */\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n\n\t/* Chart Colors */\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n\t/* Chart Style */\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n\t/* Chart Advanced */\n\t\"application/vnd.ms-office.chartex+xml\": \"TODO\",\n\n\t/* Calculation Chain */\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n\t/* Printer Settings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n\t/* ActiveX */\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n\t/* Custom Toolbars */\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n\t/* External Data Connections */\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n\t/* External Links */\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n\t/* Metadata */\n\t\"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n\n\t/* PivotCache */\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n\t/* Query Table */\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n\t/* Shared Workbook */\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n\t/* Single Cell Table */\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n\t/* Slicer */\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n\t/* Sort Map */\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n\t/* Table */\n\t\"application/vnd.ms-excel.table\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n\t/* Themes */\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n\t/* Theme Override */\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n\t/* Timeline */\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n\t/* VBA */\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n\n\t/* Volatile Dependencies */\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n\t/* Control Properties */\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n\t/* Data Model */\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n\t/* Survey */\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n\t/* Drawing */\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n\t/* VML */\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n\t/* Image */\n\t\"image/png\": \"TODO\",\n\n\t\"sheet\": \"js\"\n}/*:any*/);\n\nvar CT_LIST = (function(){\n\tvar o = {\n\t\tworkbooks: {\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n\t\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n\t\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n\t\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n\t\t},\n\t\tstrs: { /* Shared Strings */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\n\t\t},\n\t\tcomments: { /* Comments */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.comments\"\n\t\t},\n\t\tsheets: { /* Worksheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.worksheet\"\n\t\t},\n\t\tcharts: { /* Chartsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\n\t\t},\n\t\tdialogs: { /* Dialogsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\n\t\t},\n\t\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\n\t\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\n\t\t},\n\t\tmetadata: { /* Metadata (Stock/Geography and Dynamic Array) */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheetMetadata\"\n\t\t},\n\t\tstyles: { /* Styles */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.styles\"\n\t\t}\n\t};\n\tkeys(o).forEach(function(k) { [\"xlsm\", \"xlam\"].forEach(function(v) { if(!o[k][v]) o[k][v] = o[k].xlsx; }); });\n\tkeys(o).forEach(function(k){ keys(o[k]).forEach(function(v) { ct2type[o[k][v]] = k; }); });\n\treturn o;\n})();\n\nvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\nXMLNS.CT = 'http://schemas.openxmlformats.org/package/2006/content-types';\n\nfunction new_ct()/*:any*/ {\n\treturn ({\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n\t\trels:[], strs:[], comments:[], links:[],\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n\t\tcalcchains:[], vba: [], drawings: [], metadata: [],\n\t\tTODO:[], xmlns: \"\" }/*:any*/);\n}\n\nfunction parse_ct(data/*:?string*/) {\n\tvar ct = new_ct();\n\tif(!data || !data.match) return ct;\n\tvar ctext = {};\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n\t\t\tcase '<Default': ctext[y.Extension] = y.ContentType; break;\n\t\t\tcase '<Override':\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n\tct.defaults = ctext;\n\tdelete ct.calcchains;\n\treturn ct;\n}\n\nvar CTYPE_XML_ROOT = writextag('Types', null, {\n\t'xmlns': XMLNS.CT,\n\t'xmlns:xsd': XMLNS.xsd,\n\t'xmlns:xsi': XMLNS.xsi\n});\n\nvar CTYPE_DEFAULTS = [\n\t['xml', 'application/xml'],\n\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n\t['data', 'application/vnd.openxmlformats-officedocument.model+data'],\n\t/* from test files */\n\t['bmp', 'image/bmp'],\n\t['png', 'image/png'],\n\t['gif', 'image/gif'],\n\t['emf', 'image/x-emf'],\n\t['wmf', 'image/x-wmf'],\n\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n\t['pdf', 'application/pdf'],\n\t['rels', type2ct.rels[0]]\n].map(function(x) {\n\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n});\n\nfunction write_ct(ct, opts)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], v;\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (CTYPE_XML_ROOT);\n\to = o.concat(CTYPE_DEFAULTS);\n\n\t/* only write first instance */\n\tvar f1 = function(w) {\n\t\tif(ct[w] && ct[w].length > 0) {\n\t\t\tv = ct[w][0];\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\n\t\t\t}));\n\t\t}\n\t};\n\n\t/* book type-specific */\n\tvar f2 = function(w) {\n\t\t(ct[w]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\n\t\t\t}));\n\t\t});\n\t};\n\n\t/* standard type */\n\tvar f3 = function(t) {\n\t\t(ct[t]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': type2ct[t][0]\n\t\t\t}));\n\t\t});\n\t};\n\n\tf1('workbooks');\n\tf2('sheets');\n\tf2('charts');\n\tf3('themes');\n\t['strs', 'styles'].forEach(f1);\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\n\tf3('vba');\n\tf3('comments');\n\tf3('drawings');\n\tf2('metadata');\n\tif(o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = ({\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n\tXPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n\tXMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n\tXLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n\tCXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n\tCXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n}/*:any*/);\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file/*:string*/)/*:string*/ {\n\tvar n = file.lastIndexOf(\"/\");\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n}\n\nfunction parse_rels(data/*:?string*/, currentFilePath/*:string*/) {\n\tvar rels = {\"!id\":{}};\n\tif (!data) return rels;\n\tif (currentFilePath.charAt(0) !== '/') {\n\t\tcurrentFilePath = '/'+currentFilePath;\n\t}\n\tvar hash = {};\n\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\t/* 9.3.2.2 OPC_Relationships */\n\t\tif (y[0] === '<Relationship') {\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n\t\t\trels[canonictarget] = rel;\n\t\t\thash[y.Id] = rel;\n\t\t}\n\t});\n\trels[\"!id\"] = hash;\n\treturn rels;\n}\n\nXMLNS.RELS = 'http://schemas.openxmlformats.org/package/2006/relationships';\n\nvar RELS_ROOT = writextag('Relationships', null, {\n\t//'xmlns:ns0': XMLNS.RELS,\n\t'xmlns': XMLNS.RELS\n});\n\n/* TODO */\nfunction write_rels(rels)/*:string*/ {\n\tvar o = [XML_HEADER, RELS_ROOT];\n\tkeys(rels['!id']).forEach(function(rid) {\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n\t});\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\nvar RELS_EXTERN = [RELS.HLINK, RELS.XPATH, RELS.XMISS];\nfunction add_rels(rels, rId/*:number*/, f, type, relobj, targetmode/*:?string*/)/*:number*/ {\n\tif(!relobj) relobj = {};\n\tif(!rels['!id']) rels['!id'] = {};\n\tif(!rels['!idx']) rels['!idx'] = 1;\n\tif(rId < 0) for(rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId){/* empty */}\n\trels['!idx'] = rId + 1;\n\trelobj.Id = 'rId' + rId;\n\trelobj.Type = type;\n\trelobj.Target = f;\n\tif(targetmode) relobj.TargetMode = targetmode;\n\telse if(RELS_EXTERN.indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n\trels['!id'][relobj.Id] = relobj;\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n\treturn rId;\n}\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n/* Part 3 Section 4 Manifest File */\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n\tvar str = xlml_normalize(d);\n\tvar Rn;\n\tvar FEtag;\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\t\tcase 'manifest': break; // 4.2 <manifest:manifest>\n\t\tcase 'file-entry': // 4.3 <manifest:file-entry>\n\t\t\tFEtag = parsexmltag(Rn[0], false);\n\t\t\tif(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n\t\t\tbreak;\n\t\tcase 'encryption-data': // 4.4 <manifest:encryption-data>\n\t\tcase 'algorithm': // 4.5 <manifest:algorithm>\n\t\tcase 'start-key-generation': // 4.6 <manifest:start-key-generation>\n\t\tcase 'key-derivation': // 4.7 <manifest:key-derivation>\n\t\t\tthrow new Error(\"Unsupported ODS Encryption\");\n\t\tdefault: if(opts && opts.WTF) throw Rn;\n\t}\n}\n\nfunction write_manifest(manifest/*:Array<Array<string> >*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n\to.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n\tfor(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n\to.push('</manifest:manifest>');\n\treturn o.join(\"\");\n}\n\n/* Part 3 Section 6 Metadata Manifest File */\nfunction write_rdf_type(file/*:string*/, res/*:string*/, tag/*:?string*/) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + file + '\">\\n',\n\t\t'    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf_has(base/*:string*/, file/*:string*/) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + base + '\">\\n',\n\t\t'    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf(rdf) {\n\tvar o = [XML_HEADER];\n\to.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n\tfor(var i = 0; i != rdf.length; ++i) {\n\t\to.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n\t\to.push(write_rdf_has(\"\",rdf[i][0]));\n\t}\n\to.push(write_rdf_type(\"\",\"Document\", \"pkg\"));\n\to.push('</rdf:RDF>');\n\treturn o.join(\"\");\n}\n/* TODO: pull properties */\nvar write_meta_ods/*:{(wb:Workbook, opts:any):string}*/ = (function() {\n\tvar payload = '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\n\treturn function wmo(/*:: wb: Workbook, opts: any*/)/*:string*/ {\n\t\treturn payload;\n\t};\n})();\n\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS/*:Array<Array<string> >*/ = [\n\t[\"cp:category\", \"Category\"],\n\t[\"cp:contentStatus\", \"ContentStatus\"],\n\t[\"cp:keywords\", \"Keywords\"],\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\n\t[\"cp:revision\", \"RevNumber\"],\n\t[\"cp:version\", \"Version\"],\n\t[\"dc:creator\", \"Author\"],\n\t[\"dc:description\", \"Comments\"],\n\t[\"dc:identifier\", \"Identifier\"],\n\t[\"dc:language\", \"Language\"],\n\t[\"dc:subject\", \"Subject\"],\n\t[\"dc:title\", \"Title\"],\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\n];\n\nXMLNS.CORE_PROPS = \"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\";\nRELS.CORE_PROPS  = 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties';\n\nvar CORE_PROPS_REGEX/*:Array<RegExp>*/ = (function() {\n\tvar r = new Array(CORE_PROPS.length);\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\n\t\tr[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n\t}\n\treturn r;\n})();\n\nfunction parse_core_props(data) {\n\tvar p = {};\n\tdata = utf8read(data);\n\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\n\t\tif(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n\t}\n\n\treturn p;\n}\n\nvar CORE_PROPS_XML_ROOT = writextag('cp:coreProperties', null, {\n\t//'xmlns': XMLNS.CORE_PROPS,\n\t'xmlns:cp': XMLNS.CORE_PROPS,\n\t'xmlns:dc': XMLNS.dc,\n\t'xmlns:dcterms': XMLNS.dcterms,\n\t'xmlns:dcmitype': XMLNS.dcmitype,\n\t'xmlns:xsi': XMLNS.xsi\n});\n\nfunction cp_doit(f, g, h, o, p) {\n\tif(p[f] != null || g == null || g === \"\") return;\n\tp[f] = g;\n\tg = escapexml(g);\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n}\n\nfunction write_core_props(cp, _opts) {\n\tvar opts = _opts || {};\n\tvar o = [XML_HEADER, CORE_PROPS_XML_ROOT], p = {};\n\tif(!cp && !opts.Props) return o.join(\"\");\n\n\tif(cp) {\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t}\n\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n\t\tif(v === true) v = \"1\";\n\t\telse if(v === false) v = \"0\";\n\t\telse if(typeof v == \"number\") v = String(v);\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\n\t}\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS/*:Array<Array<string> >*/ = [\n\t[\"Application\", \"Application\", \"string\"],\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\n\t[\"Company\", \"Company\", \"string\"],\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\n\t[\"Manager\", \"Manager\", \"string\"],\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n];\n\nXMLNS.EXT_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\";\nRELS.EXT_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties';\n\nvar PseudoPropsPairs = [\n\t\"Worksheets\",  \"SheetNames\",\n\t\"NamedRanges\", \"DefinedNames\",\n\t\"Chartsheets\", \"ChartNames\"\n];\nfunction load_props_pairs(HP/*:string|Array<Array<any>>*/, TOP, props, opts) {\n\tvar v = [];\n\tif(typeof HP == \"string\") v = parseVector(HP, opts);\n\telse for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n\tvar parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n\tvar idx = 0, len = 0;\n\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n\t\tlen = +(v[i+1].v);\n\t\tswitch(v[i].v) {\n\t\t\tcase \"Worksheets\":\n\t\t\tcase \"工作表\":\n\t\t\tcase \"Листы\":\n\t\t\tcase \"أوراق العمل\":\n\t\t\tcase \"ワークシート\":\n\t\t\tcase \"גליונות עבודה\":\n\t\t\tcase \"Arbeitsblätter\":\n\t\t\tcase \"Çalışma Sayfaları\":\n\t\t\tcase \"Feuilles de calcul\":\n\t\t\tcase \"Fogli di lavoro\":\n\t\t\tcase \"Folhas de cálculo\":\n\t\t\tcase \"Planilhas\":\n\t\t\tcase \"Regneark\":\n\t\t\tcase \"Hojas de cálculo\":\n\t\t\tcase \"Werkbladen\":\n\t\t\t\tprops.Worksheets = len;\n\t\t\t\tprops.SheetNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Named Ranges\":\n\t\t\tcase \"Rangos con nombre\":\n\t\t\tcase \"名前付き一覧\":\n\t\t\tcase \"Benannte Bereiche\":\n\t\t\tcase \"Navngivne områder\":\n\t\t\t\tprops.NamedRanges = len;\n\t\t\t\tprops.DefinedNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Charts\":\n\t\t\tcase \"Diagramme\":\n\t\t\t\tprops.Chartsheets = len;\n\t\t\t\tprops.ChartNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\t\t}\n\t\tidx += len;\n\t}\n}\n\nfunction parse_ext_props(data, p, opts) {\n\tvar q = {}; if(!p) p = {};\n\tdata = utf8read(data);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tvar xml = (data.match(matchtag(f[0]))||[])[1];\n\t\tswitch(f[2]) {\n\t\t\tcase \"string\": if(xml) p[f[1]] = unescapexml(xml); break;\n\t\t\tcase \"bool\": p[f[1]] = xml === \"true\"; break;\n\t\t\tcase \"raw\":\n\t\t\t\tvar cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tif(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n\treturn p;\n}\n\nvar EXT_PROPS_XML_ROOT = writextag('Properties', null, {\n\t'xmlns': XMLNS.EXT_PROPS,\n\t'xmlns:vt': XMLNS.vt\n});\n\nfunction write_ext_props(cp/*::, opts*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], W = writextag;\n\tif(!cp) cp = {};\n\tcp.Application = \"SheetJS\";\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (EXT_PROPS_XML_ROOT);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tif(cp[f[1]] === undefined) return;\n\t\tvar v;\n\t\tswitch(f[2]) {\n\t\t\tcase 'string': v = escapexml(String(cp[f[1]])); break;\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n\t\t}\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\n\t});\n\n\t/* TODO: HeadingPairs, TitlesOfParts */\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nXMLNS.CUST_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\";\nRELS.CUST_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties';\n\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data/*:string*/, opts) {\n\tvar p = {}, name = \"\";\n\tvar m = data.match(custregex);\n\tif(m) for(var i = 0; i != m.length; ++i) {\n\t\tvar x = m[i], y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Properties': break;\n\t\t\tcase '<property': name = unescapexml(y.name); break;\n\t\t\tcase '</property>': name = null; break;\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\n\t\t\t\tvar toks = x.split('>');\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bool':\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\n\t\t\t\t\t\tp[name] = parseFloat(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'filetime': case 'date':\n\t\t\t\t\t\tp[name] = parseDate(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cy': case 'error':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n\t\t\t\t}\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\n\t\t\t} else if(opts.WTF) throw new Error(x);\n\t\t}\n\t}\n\treturn p;\n}\n\nvar CUST_PROPS_XML_ROOT = writextag('Properties', null, {\n\t'xmlns': XMLNS.CUST_PROPS,\n\t'xmlns:vt': XMLNS.vt\n});\n\nfunction write_cust_props(cp/*::, opts*/)/*:string*/ {\n\tvar o = [XML_HEADER, CUST_PROPS_XML_ROOT];\n\tif(!cp) return o.join(\"\");\n\tvar pid = 1;\n\tkeys(cp).forEach(function custprop(k) { ++pid;\n\t\to[o.length] = (writextag('property', write_vt(cp[k], true), {\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n\t\t\t'pid': pid,\n\t\t\t'name': escapexml(k)\n\t\t}));\n\t});\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n\tTitle: 'Title',\n\tSubject: 'Subject',\n\tAuthor: 'Author',\n\tKeywords: 'Keywords',\n\tComments: 'Description',\n\tLastAuthor: 'LastAuthor',\n\tRevNumber: 'Revision',\n\tApplication: 'AppName',\n\t/* TotalTime: 'TotalTime', */\n\tLastPrinted: 'LastPrinted',\n\tCreatedDate: 'Created',\n\tModifiedDate: 'LastSaved',\n\t/* Pages */\n\t/* Words */\n\t/* Characters */\n\tCategory: 'Category',\n\t/* PresentationFormat */\n\tManager: 'Manager',\n\tCompany: 'Company',\n\t/* Guid */\n\t/* HyperlinkBase */\n\t/* Bytes */\n\t/* Lines */\n\t/* Paragraphs */\n\t/* CharactersWithSpaces */\n\tAppVersion: 'Version',\n\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\n\tLanguage: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM = evert(XLMLDocPropsMap);\n\nfunction xlml_set_prop(Props, tag/*:string*/, val) {\n\ttag = evert_XLMLDPM[tag] || tag;\n\tProps[tag] = val;\n}\n\nfunction xlml_write_docprops(Props, opts) {\n\tvar o/*:Array<string>*/ = [];\n\tkeys(XLMLDocPropsMap).map(function(m) {\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n\t\tthrow m;\n\t}).forEach(function(p) {\n\t\tif(Props[p[1]] == null) return;\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n\t\tswitch(p[2]) {\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n\t\t}\n\t\tif(typeof m == 'number') m = String(m);\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n\t});\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n}\nfunction xlml_write_custprops(Props, Custprops/*::, opts*/) {\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n\tvar T = 'CustomDocumentProperties';\n\tvar o/*:Array<string>*/ = [];\n\tif(Props) keys(Props).forEach(function(k) {\n\t\t/*:: if(!Props) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n\t\tvar m = Props[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\tif(Custprops) keys(Custprops).forEach(function(k) {\n\t\t/*:: if(!Custprops) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n\t\tif(Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tvar m = Custprops[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n}\nfunction write_FILETIME(time/*:string|Date*/) {\n\tvar date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n\tvar t = date.getTime() / 1000 + 11644473600;\n\tvar l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n\tl *= 1e7; h *= 1e7;\n\tvar w = (l / Math.pow(2,32)) | 0;\n\tif(w > 0) { l = l % Math.pow(2,32); h += w; }\n\tvar o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad/*:?number*/) {\n\tvar start = blob.l;\n\tvar str = blob.read_shift(0, 'lpstr-cp');\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\n\treturn str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n\tvar str = blob.read_shift(0, 'lpwstr');\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n\treturn str;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n\treturn parse_lpstr(blob, stringType, pad);\n}\n\nfunction parse_VtString(blob, t/*:number*/, pad/*:?boolean*/) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\nfunction parse_VtUnalignedString(blob, t/*:number*/) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) {\n\t\tvar start = blob.l;\n\t\tret[i] = blob.read_shift(0, 'lpwstr').replace(chr0,'');\n\t\tif((blob.l - start) & 0x02) blob.l += 2;\n\t}\n\treturn ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n\treturn ret;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n\tvar start = blob.l;\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\n\tif(blob[blob.l] == 0x00 && blob[blob.l+1] == 0x00 && ((blob.l - start) & 0x02)) blob.l += 2;\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\n\treturn [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n\tvar cElements = blob.read_shift(4);\n\tvar out = [];\n\tfor(var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n\treturn out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob,CodePage) {\n\tvar cnt = blob.read_shift(4);\n\tvar dict/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(var j = 0; j != cnt; ++j) {\n\t\tvar pid = blob.read_shift(4);\n\t\tvar len = blob.read_shift(4);\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n\t\tif(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n\t}\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n\treturn dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n\tvar size = blob.read_shift(4);\n\tvar bytes = blob.slice(blob.l,blob.l+size);\n\tblob.l += size;\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n\treturn bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n\t// TODO\n\tvar o = {};\n\to.Size = blob.read_shift(4);\n\t//o.Format = blob.read_shift(4);\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\n\treturn o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type/*:number*/, _opts)/*:any*/ {\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\n\tblob.l += 2;\n\tif(type !== VT_VARIANT)\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n\tswitch(type === VT_VARIANT ? t : type) {\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPairValue(blob);\n\t\tcase 0x101E /*VT_VECTOR|VT_LPSTR*/:\n\t\tcase 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n\t\t\treturn t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n\t}\n}\nfunction write_TypedPropertyValue(type/*:number*/, value) {\n\tvar o = new_buf(4), p = new_buf(4);\n\to.write_shift(4, type == 0x50 ? 0x1F : type);\n\tswitch(type) {\n\t\tcase 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n\t\tcase 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n\t\tcase 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n\t\tcase 0x40 /*VT_FILETIME*/: /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */ p = write_FILETIME(value); break;\n\t\tcase 0x1F /*VT_LPWSTR*/:\n\t\tcase 0x50 /*VT_STRING*/:\n\t\t\t/*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n\t\t\tp = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tp.write_shift(4, value.length + 1);\n\t\t\tp.write_shift(0, value, \"dbcs\");\n\t\t\twhile(p.l != p.length) p.write_shift(1, 0);\n\t\t\tbreak;\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n\t}\n\treturn bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n\tvar start_addr = blob.l;\n\tvar size = blob.read_shift(4);\n\tvar NumProps = blob.read_shift(4);\n\tvar Props = [], i = 0;\n\tvar CodePage = 0;\n\tvar Dictionary = -1, DictObj/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tvar PropID = blob.read_shift(4);\n\t\tvar Offset = blob.read_shift(4);\n\t\tProps[i] = [PropID, Offset + start_addr];\n\t}\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\n\tvar PropH = {};\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tif(blob.l !== Props[i][1]) {\n\t\t\tvar fail = true;\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t}\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n\t\t}\n\t\tif(PIDSI) {\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 874:\n\t\t\t\tcase 932:\n\t\t\t\tcase 936:\n\t\t\t\tcase 949:\n\t\t\t\tcase 950:\n\t\t\t\tcase 1250:\n\t\t\t\tcase 1251:\n\t\t\t\tcase 1253:\n\t\t\t\tcase 1254:\n\t\t\t\tcase 1255:\n\t\t\t\tcase 1256:\n\t\t\t\tcase 1257:\n\t\t\t\tcase 1258:\n\t\t\t\tcase 10000:\n\t\t\t\tcase 1200:\n\t\t\t\tcase 1201:\n\t\t\t\tcase 1252:\n\t\t\t\tcase 65000: case -536:\n\t\t\t\tcase 65001: case -535:\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n\t\t\t}\n\t\t} else {\n\t\t\tif(Props[i][0] === 0x1) {\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2)/*:number*/);\n\t\t\t\tset_cp(CodePage);\n\t\t\t\tif(Dictionary !== -1) {\n\t\t\t\t\tvar oldpos = blob.l;\n\t\t\t\t\tblob.l = Props[Dictionary][1];\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t\t\tblob.l = oldpos;\n\t\t\t\t}\n\t\t\t} else if(Props[i][0] === 0) {\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t} else {\n\t\t\t\tvar name = DictObj[Props[i][0]];\n\t\t\t\tvar val;\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n\t\t\t\tswitch(blob[blob.l]) {\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\n\t\t\t\t}\n\t\t\t\tPropH[name] = val;\n\t\t\t}\n\t\t}\n\t}\n\tblob.l = start_addr + size; /* step ahead to skip padding */\n\treturn PropH;\n}\nvar XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ].concat(PseudoPropsPairs);\nfunction guess_property_type(val/*:any*/)/*:number*/ {\n\tswitch(typeof val) {\n\t\tcase \"boolean\": return 0x0B;\n\t\tcase \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n\t\tcase \"string\": return 0x1F;\n\t\tcase \"object\": if(val instanceof Date) return 0x40; break;\n\t}\n\treturn -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n\tvar hdr = new_buf(8), piao = [], prop = [];\n\tvar sz = 8, i = 0;\n\n\tvar pr = new_buf(8), pio = new_buf(8);\n\tpr.write_shift(4, 0x0002);\n\tpr.write_shift(4, 0x04B0);\n\tpio.write_shift(4, 0x0001);\n\tprop.push(pr); piao.push(pio);\n\tsz += 8 + pr.length;\n\n\tif(!RE) {\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, 0);\n\t\tpiao.unshift(pio);\n\n\t\tvar bufs = [new_buf(4)];\n\t\tbufs[0].write_shift(4, entries.length);\n\t\tfor(i = 0; i < entries.length; ++i) {\n\t\t\tvar value = entries[i][0];\n\t\t\tpr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tpr.write_shift(4, i+2);\n\t\t\tpr.write_shift(4, value.length + 1);\n\t\t\tpr.write_shift(0, value, \"dbcs\");\n\t\t\twhile(pr.l != pr.length) pr.write_shift(1, 0);\n\t\t\tbufs.push(pr);\n\t\t}\n\t\tpr = bconcat(bufs);\n\t\tprop.unshift(pr);\n\t\tsz += 8 + pr.length;\n\t}\n\n\tfor(i = 0; i < entries.length; ++i) {\n\t\tif(RE && !RE[entries[i][0]]) continue;\n\t\tif(XLSPSSkip.indexOf(entries[i][0]) > -1) continue;\n\t\tif(entries[i][1] == null) continue;\n\n\t\tvar val = entries[i][1], idx = 0;\n\t\tif(RE) {\n\t\t\tidx = +RE[entries[i][0]];\n\t\t\tvar pinfo = (PIDSI/*:: || {}*/)[idx]/*:: || {} */;\n\t\t\tif(pinfo.p == \"version\" && typeof val == \"string\") {\n\t\t\t\t/*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n\t\t\t\tvar arr = val.split(\".\");\n\t\t\t\tval = ((+arr[0])<<16) + ((+arr[1])||0);\n\t\t\t}\n\t\t\tpr = write_TypedPropertyValue(pinfo.t, val);\n\t\t} else {\n\t\t\tvar T = guess_property_type(val);\n\t\t\tif(T == -1) { T = 0x1F; val = String(val); }\n\t\t\tpr = write_TypedPropertyValue(T, val);\n\t\t}\n\t\tprop.push(pr);\n\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, !RE ? 2+i : idx);\n\t\tpiao.push(pio);\n\n\t\tsz += 8 + pr.length;\n\t}\n\n\tvar w = 8 * (prop.length + 1);\n\tfor(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n\thdr.write_shift(4, sz);\n\thdr.write_shift(4, prop.length);\n\treturn bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n\tvar blob = file.content;\n\tif(!blob) return ({}/*:any*/);\n\tprep_blob(blob, 0);\n\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n\tblob.chk('feff', 'Byte Order: ');\n\n\t/*var vers = */blob.read_shift(2); // TODO: check version\n\tvar SystemIdentifier = blob.read_shift(4);\n\tvar CLSID = blob.read_shift(16);\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n\tNumSets = blob.read_shift(4);\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\n\n\tvar rval = ({ SystemIdentifier: SystemIdentifier }/*:any*/);\n\tfor(var y in PSet0) rval[y] = PSet0[y];\n\t//rval.blob = blob;\n\trval.FMTID = FMTID0;\n\t//rval.PSet0 = PSet0;\n\tif(NumSets === 1) return rval;\n\tif(Offset1 - blob.l == 2) blob.l += 2;\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n\tvar PSet1;\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n\tfor(y in PSet1) rval[y] = PSet1[y];\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n\treturn rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI/*:{[key:string|number]:any}*/, entries2/*:?any*/, clsid2/*:?any*/) {\n\tvar hdr = new_buf(entries2 ? 68 : 48);\n\tvar bufs = [hdr];\n\thdr.write_shift(2, 0xFFFE);\n\thdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n\thdr.write_shift(4, 0x32363237);\n\thdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n\thdr.write_shift(4, (entries2 ? 2 : 1));\n\thdr.write_shift(16, clsid, \"hex\");\n\thdr.write_shift(4, (entries2 ? 68 : 48));\n\tvar ps0 = write_PropertySet(entries, RE, PIDSI);\n\tbufs.push(ps0);\n\n\tif(entries2) {\n\t\tvar ps1 = write_PropertySet(entries2, null, null);\n\t\thdr.write_shift(16, clsid2, \"hex\");\n\t\thdr.write_shift(4, 68 + ps0.length);\n\t\tbufs.push(ps1);\n\t}\n\treturn bconcat(bufs);\n}\n\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\nfunction parslurp(blob, length, cb) {\n\tvar arr = [], target = blob.l + length;\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\n\treturn arr;\n}\n\nfunction parsebool(blob, length/*:number*/) { return blob.read_shift(length) === 0x1; }\nfunction writebool(v/*:any*/, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\nfunction parseuint16(blob/*::, length:?number, opts:?any*/) { return blob.read_shift(2, 'u'); }\nfunction writeuint16(v/*:number*/, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\nfunction parseuint16a(blob, length/*:: :?number, opts:?any*/) { return parslurp(blob,length,parseuint16);}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob/*::, length*/) {\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\n\treturn t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t/*:string*/, o) {\n\tif(!o) o = new_buf(2);\n\to.write_shift(1, ((t == 'e') ? +v : +!!v));\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n\tvar encoding = 'sbcs-cont';\n\tvar cp = current_codepage;\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\n\tif(!opts || opts.biff == 8 ) {\n\t\tvar fHighByte = blob.read_shift(1);\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\n\t} else if(opts.biff == 12) {\n\t\tencoding = 'wstr';\n\t}\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\n\tcurrent_codepage = cp;\n\treturn o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n\tvar cp = current_codepage;\n\tcurrent_codepage = 1200;\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n\tvar cRun = 0, cbExtRst;\n\tvar z = {};\n\tif(fRichSt) cRun = blob.read_shift(2);\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\n\tz.t = msg;\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n\tcurrent_codepage = cp;\n\treturn z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr/*:: :XLString, opts*/) {\n\tvar str = (xlstr.t||\"\"), nfmts = 1;\n\n\tvar hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n\thdr.write_shift(2, str.length);\n\thdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n\tif(nfmts > 1) hdr.write_shift(2, nfmts);\n\n\tvar otext = new_buf(2 * str.length);\n\totext.write_shift(2 * str.length, str, 'utf16le');\n\n\tvar out = [hdr, otext];\n\n\treturn bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n\tvar retval;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n\t}\n\tvar fHighByte = blob.read_shift(1);\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\n\treturn retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n\tif(!o) o = new_buf(3 + 2 * str.length);\n\to.write_shift(2, str.length);\n\to.write_shift(1, 1);\n\to.write_shift(31, str, 'utf16le');\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob/*::, length, opts*/) {\n\tvar flags = blob.read_shift(1);\n\tblob.l++;\n\tvar accel = blob.read_shift(2);\n\tblob.l += 2;\n\treturn [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob/*::, length, opts*/) {\n\tvar len = blob.read_shift(4), start = blob.l;\n\tvar extra = false;\n\tif(len > 24) {\n\t\t/* look ahead */\n\t\tblob.l += len - 24;\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n\t\tblob.l = start;\n\t}\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n\tif(extra) blob.l += 24;\n\treturn url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob/*::, length*/) {\n\tvar cAnti = blob.read_shift(2);\n\tvar preamble = \"\"; while(cAnti-- > 0) preamble += \"../\";\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\n\tblob.l += 2; //var endServer = blob.read_shift(2);\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n\tvar sz = blob.read_shift(4);\n\tif(sz === 0) return preamble + ansiPath.replace(/\\\\/g,\"/\");\n\tvar bytes = blob.read_shift(4);\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n\treturn preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n\tvar clsid = blob.read_shift(16); length -= 16;\n\tswitch(clsid) {\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\n\t}\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob/*::, length*/) {\n\tvar len = blob.read_shift(4);\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n\treturn o;\n}\nfunction write_HyperlinkString(str/*:string*/, o) {\n\tif(!o) o = new_buf(6 + str.length * 2);\n\to.write_shift(4, 1 + str.length);\n\tfor(var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length)/*:Hyperlink*/ {\n\tvar end = blob.l + length;\n\tvar sVer = blob.read_shift(4);\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n\tvar flags = blob.read_shift(2);\n\tblob.l += 2;\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0020) guid = blob.read_shift(16);\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n\tblob.l = end;\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\n\tif(target && Loc) target+=\"#\"+Loc;\n\tif(!target) target = \"#\" + Loc;\n\tif((flags & 0x0002) && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n\tvar out = ({Target:target}/*:any*/);\n\tif(guid) out.guid = guid;\n\tif(fileTime) out.time = fileTime;\n\tif(displayName) out.Tooltip = displayName;\n\treturn out;\n}\nfunction write_Hyperlink(hl) {\n\tvar out = new_buf(512), i = 0;\n\tvar Target = hl.Target;\n\tif(Target.slice(0,7) == \"file://\") Target = Target.slice(7);\n\tvar hashidx = Target.indexOf(\"#\");\n\tvar F = hashidx > -1 ? 0x1f : 0x17;\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n\tout.write_shift(4,2); out.write_shift(4, F);\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n\tif(F == 0x1C) {\n\t\tTarget = Target.slice(1);\n\t\twrite_HyperlinkString(Target, out);\n\t} else if(F & 0x02) {\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n\t\tout.write_shift(4, 2*(Pretarget.length + 1));\n\t\tfor(i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t\tif(F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx+1): \"\", out);\n\t} else {\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar P = 0;\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n\t\tout.write_shift(2, P);\n\t\tout.write_shift(4, Target.length - 3 * P + 1);\n\t\tfor(i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n\t\tout.write_shift(1, 0);\n\t\tout.write_shift(2, 0xFFFF);\n\t\tout.write_shift(2, 0xDEAD);\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\n\t}\n\treturn out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob/*::, length*/) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob/*::, length*/)/*:Cell*/ {\n\tvar rw = blob.read_shift(2); // 0-indexed\n\tvar col = blob.read_shift(2);\n\tvar ixfe = blob.read_shift(2);\n\treturn ({r:rw, c:col, ixfe:ixfe}/*:any*/);\n}\nfunction write_XLSCell(R/*:number*/, C/*:number*/, ixfe/*:?number*/, o) {\n\tif(!o) o = new_buf(6);\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, ixfe||0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n\tvar rt = blob.read_shift(2);\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\n\tblob.l += 8;\n\treturn {type: rt, flags: flags};\n}\n\n\n\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n\tvar w = opts.biff > 8 ? 4 : 2;\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n\treturn [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n\tvar ixfe = blob.read_shift(2);\n\tvar RK = parse_RkNumber(blob);\n\treturn [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n\tblob.l += 4; length -= 4;\n\tvar l = blob.l + length;\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\n\tvar cb = blob.read_shift(2);\n\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;\n\treturn udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(2);\n\tvar colLast = blob.read_shift(2);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\nfunction write_Ref8U(r/*:Range*/, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(2, r.s.r);\n\to.write_shift(2, r.e.r);\n\to.write_shift(2, r.s.c);\n\to.write_shift(2, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(1);\n\tvar colLast = blob.read_shift(1);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob/*::, length*/) {\n\tblob.l += 4;\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tblob.l+=12;\n\treturn [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.l += 16; // GUID TODO\n\tout.fSharedNote = blob.read_shift(2);\n\tblob.l += 4;\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.cf = blob.read_shift(2);\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\nvar FtTab = {\n\t/*::[*/0x00/*::]*/: parse_FtSkip,      /* FtEnd */\n\t/*::[*/0x04/*::]*/: parse_FtSkip,      /* FtMacro */\n\t/*::[*/0x05/*::]*/: parse_FtSkip,      /* FtButton */\n\t/*::[*/0x06/*::]*/: parse_FtSkip,      /* FtGmo */\n\t/*::[*/0x07/*::]*/: parse_FtCf,        /* FtCf */\n\t/*::[*/0x08/*::]*/: parse_FtSkip,      /* FtPioGrbit */\n\t/*::[*/0x09/*::]*/: parse_FtSkip,      /* FtPictFmla */\n\t/*::[*/0x0A/*::]*/: parse_FtSkip,      /* FtCbls */\n\t/*::[*/0x0B/*::]*/: parse_FtSkip,      /* FtRbo */\n\t/*::[*/0x0C/*::]*/: parse_FtSkip,      /* FtSbs */\n\t/*::[*/0x0D/*::]*/: parse_FtNts,       /* FtNts */\n\t/*::[*/0x0E/*::]*/: parse_FtSkip,      /* FtSbsFmla */\n\t/*::[*/0x0F/*::]*/: parse_FtSkip,      /* FtGboData */\n\t/*::[*/0x10/*::]*/: parse_FtSkip,      /* FtEdoData */\n\t/*::[*/0x11/*::]*/: parse_FtSkip,      /* FtRboData */\n\t/*::[*/0x12/*::]*/: parse_FtSkip,      /* FtCblsData */\n\t/*::[*/0x13/*::]*/: parse_FtSkip,      /* FtLbsData */\n\t/*::[*/0x14/*::]*/: parse_FtSkip,      /* FtCblsFmla */\n\t/*::[*/0x15/*::]*/: parse_FtCmo\n};\nfunction parse_FtArray(blob, length/*::, ot*/) {\n\tvar tgt = blob.l + length;\n\tvar fts = [];\n\twhile(blob.l < tgt) {\n\t\tvar ft = blob.read_shift(2);\n\t\tblob.l-=2;\n\t\ttry {\n\t\t\tfts.push(FtTab[ft](blob, tgt - blob.l));\n\t\t} catch(e) { blob.l = tgt; return fts; }\n\t}\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n\treturn fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n\tvar o = {BIFFVer:0, dt:0};\n\to.BIFFVer = blob.read_shift(2); length -= 2;\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n\tswitch(o.BIFFVer) {\n\t\tcase 0x0600: /* BIFF8 */\n\t\tcase 0x0500: /* BIFF5 */\n\t\tcase 0x0400: /* BIFF4 */\n\t\tcase 0x0300: /* BIFF3 */\n\t\tcase 0x0200: /* BIFF2 */\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\n\t\t\tbreak;\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n\t}\n\n\tblob.read_shift(length);\n\treturn o;\n}\nfunction write_BOF(wb/*:Workbook*/, t/*:number*/, o) {\n\tvar h = 0x0600, w = 16;\n\tswitch(o.bookType) {\n\t\tcase 'biff8': break;\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\n\t\tcase 'xla': break;\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\n\t}\n\tvar out = new_buf(w);\n\tout.write_shift(2, h);\n\tout.write_shift(2, t);\n\tif(w > 4) out.write_shift(2, 0x7262);\n\tif(w > 6) out.write_shift(2, 0x07CD);\n\tif(w > 8) {\n\t\tout.write_shift(2, 0xC009);\n\t\tout.write_shift(2, 0x0001);\n\t\tout.write_shift(2, 0x0706);\n\t\tout.write_shift(2, 0x0000);\n\t}\n\treturn out;\n}\n\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n\tif(length === 0) return 0x04b0;\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\n\treturn 0x04b0;\n}\n\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n\tif(opts.enc) { blob.l += length; return \"\"; }\n\tvar l = blob.l;\n\t// TODO: make sure XLUnicodeString doesnt overrun\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\n\tblob.read_shift(length + l - blob.l);\n\treturn UserName;\n}\nfunction write_WriteAccess(s/*:string*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(b8 ? 112 : 54);\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\n\tif(b8) o.write_shift(1, 0);\n\to.write_shift(4, 0x33336853);\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n\treturn { fDialog: flags & 0x10, fBelow: flags & 0x40, fRight: flags & 0x80 };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n\tvar pos = blob.read_shift(4);\n\tvar hidden = blob.read_shift(1) & 0x03;\n\tvar dt = blob.read_shift(1);\n\tswitch(dt) {\n\t\tcase 0: dt = 'Worksheet'; break;\n\t\tcase 1: dt = 'Macrosheet'; break;\n\t\tcase 2: dt = 'Chartsheet'; break;\n\t\tcase 6: dt = 'VBAModule'; break;\n\t}\n\tvar name = parse_ShortXLUnicodeString(blob, 0, opts);\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\n}\nfunction write_BoundSheet8(data, opts) {\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\n\tvar o = new_buf(8 + w * data.name.length);\n\to.write_shift(4, data.pos);\n\to.write_shift(1, data.hs || 0);\n\to.write_shift(1, data.dt);\n\to.write_shift(1, data.name.length);\n\tif(opts.biff >= 8) o.write_shift(1, 1);\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n\tvar out = o.slice(0, o.l);\n\tout.l = o.l; return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length)/*:SST*/ {\n\tvar end = blob.l + length;\n\tvar cnt = blob.read_shift(4);\n\tvar ucnt = blob.read_shift(4);\n\tvar strs/*:SST*/ = ([]/*:any*/);\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\n\t}\n\tstrs.Count = cnt; strs.Unique = ucnt;\n\treturn strs;\n}\nfunction write_SST(sst, opts) {\n\tvar header = new_buf(8);\n\theader.write_shift(4, sst.Count);\n\theader.write_shift(4, sst.Unique);\n\tvar strs = [];\n\tfor(var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n\tvar o = bconcat([header].concat(strs));\n\t/*::(*/o/*:: :any)*/.parts = [header.length].concat(strs.map(function(str) { return str.length; }));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n\tvar extsst = {};\n\textsst.dsst = blob.read_shift(2);\n\tblob.l += length-2;\n\treturn extsst;\n}\n\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n\tvar z = ({}/*:any*/);\n\tz.r = blob.read_shift(2);\n\tz.c = blob.read_shift(2);\n\tz.cnt = blob.read_shift(2) - z.c;\n\tvar miyRw = blob.read_shift(2);\n\tblob.l += 4; // reserved(2), unused(2)\n\tvar flags = blob.read_shift(1); // various flags\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\n\tif(flags & 0x07) z.level = flags & 0x07;\n\t// collapsed: flags & 0x10\n\tif(flags & 0x20) z.hidden = true;\n\tif(flags & 0x40) z.hpt = miyRw / 20;\n\treturn z;\n}\n\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n\tvar header = parse_frtHeader(blob);\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n\tvar fullcalc = blob.read_shift(4);\n\treturn fullcalc !== 0x0;\n}\n\n\n\n\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n\tblob.read_shift(2);\n\treturn blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n\tvar f = 0;\n\tif(!(opts && opts.biff == 2)) {\n\t\tf = blob.read_shift(2);\n\t}\n\tvar miyRw = blob.read_shift(2);\n\tif((opts && opts.biff == 2)) {\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n\t}\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n\treturn [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n}\nfunction write_Window1(/*::opts*/) {\n\tvar o = new_buf(18);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0x7260);\n\to.write_shift(2, 0x44c0);\n\to.write_shift(2, 0x38);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 1);\n\to.write_shift(2, 0x01f4);\n\treturn o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff < 5) return {};\n\tvar f = blob.read_shift(2);\n\treturn { RTL: f & 0x40 };\n}\nfunction write_Window2(view) {\n\tvar o = new_buf(18), f = 0x6b6;\n\tif(view && view.RTL) f |= 0x40;\n\to.write_shift(2, f);\n\to.write_shift(4, 0);\n\to.write_shift(4, 64);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane(/*blob, length, opts*/) {\n}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n\tvar o/*:any*/ = {\n\t\tdyHeight: blob.read_shift(2),\n\t\tfl: blob.read_shift(2)\n\t};\n\tswitch((opts && opts.biff) || 8) {\n\t\tcase 2: break;\n\t\tcase 3: case 4: blob.l += 2; break;\n\t\tdefault: blob.l += 10; break;\n\t}\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\n\treturn o;\n}\nfunction write_Font(data, opts) {\n\tvar name = data.name || \"Arial\";\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n\tvar o = new_buf(w);\n\to.write_shift(2, (data.sz || 12) * 20);\n\to.write_shift(4, 0);\n\to.write_shift(2, 400);\n\to.write_shift(4, 0);\n\to.write_shift(2, 0);\n\to.write_shift(1, name.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob) {\n\tvar cell = parse_XLSCell(blob);\n\tcell.isst = blob.read_shift(4);\n\treturn cell;\n}\nfunction write_LabelSst(R/*:number*/, C/*:number*/, v/*:number*/, os/*:number*/ /*::, opts*/) {\n\tvar o = new_buf(10);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(4, v);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar target = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) blob.l++;\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\n\tcell.val = str;\n\treturn cell;\n}\nfunction write_Label(R/*:number*/, C/*:number*/, v/*:string*/, os/*:number*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(2, v.length);\n\tif(b8) o.write_shift(1, 1);\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n\treturn o;\n}\n\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n\tvar numFmtId = blob.read_shift(2);\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [numFmtId, fmtstr];\n}\nfunction write_Format(i/*:number*/, f/*:string*/, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n\to.write_shift(2, i);\n\to.write_shift((b5 ? 1 : 2), f.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(out.l == null) out.l = out.length;\n\treturn out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\n\tblob.l = end;\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\n}\nfunction write_Dimensions(range, opts) {\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar o = new_buf(2*w + 6);\n\to.write_shift(w, range.s.r);\n\to.write_shift(w, range.e.r + 1);\n\to.write_shift(2, range.s.c);\n\to.write_shift(2, range.e.c + 1);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrec = parse_RkRec(blob);\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrecs = [];\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar ixfes = [];\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n\tvar o = {};\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\n\to.patternType = XLSFillPattern[c >> 26];\n\n\tif(!opts.cellStyles) return o;\n\to.alc = a & 0x07;\n\to.fWrap = (a >> 3) & 0x01;\n\to.alcV = (a >> 4) & 0x07;\n\to.fJustLast = (a >> 7) & 0x01;\n\to.trot = (a >> 8) & 0xFF;\n\to.cIndent = (a >> 16) & 0x0F;\n\to.fShrinkToFit = (a >> 20) & 0x01;\n\to.iReadOrder = (a >> 22) & 0x02;\n\to.fAtrNum = (a >> 26) & 0x01;\n\to.fAtrFnt = (a >> 27) & 0x01;\n\to.fAtrAlc = (a >> 28) & 0x01;\n\to.fAtrBdr = (a >> 29) & 0x01;\n\to.fAtrPat = (a >> 30) & 0x01;\n\to.fAtrProt = (a >> 31) & 0x01;\n\n\to.dgLeft = b & 0x0F;\n\to.dgRight = (b >> 4) & 0x0F;\n\to.dgTop = (b >> 8) & 0x0F;\n\to.dgBottom = (b >> 12) & 0x0F;\n\to.icvLeft = (b >> 16) & 0x7F;\n\to.icvRight = (b >> 23) & 0x7F;\n\to.grbitDiag = (b >> 30) & 0x03;\n\n\to.icvTop = c & 0x7F;\n\to.icvBottom = (c >> 7) & 0x7F;\n\to.icvDiag = (c >> 14) & 0x7F;\n\to.dgDiag = (c >> 21) & 0x0F;\n\n\to.icvFore = d & 0x7F;\n\to.icvBack = (d >> 7) & 0x7F;\n\to.fsxButton = (d >> 14) & 0x01;\n\treturn o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\tlength -= 6;\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n\treturn o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? 16 : 20);\n\to.write_shift(2, 0);\n\tif(data.style) {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, 0xFFF4);\n\t} else {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, (ixfeP<<4));\n\t}\n\tvar f = 0;\n\tif(data.numFmtId > 0 && b5) f |= 0x0400;\n\to.write_shift(4, f);\n\to.write_shift(4, 0);\n\tif(!b5) o.write_shift(4, 0);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n\tblob.l += 4;\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\n\tif(out[0] !== 0) out[0]--;\n\tif(out[1] !== 0) out[1]--;\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n\treturn out;\n}\nfunction write_Guts(guts/*:Array<number>*/) {\n\tvar o = new_buf(8);\n\to.write_shift(4, 0);\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2 || length == 9) ++blob.l;\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\nfunction write_BoolErr(R/*:number*/, C/*:number*/, v, os/*:number*/, opts, t/*:string*/) {\n\tvar o = new_buf(8);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Bes(v, t, o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar xnum = parse_Xnum(blob, 8);\n\tcell.val = xnum;\n\treturn cell;\n}\nfunction write_Number(R/*:number*/, C/*:number*/, v, os/*:: :number, opts*/) {\n\tvar o = new_buf(14);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Xnum(v, o);\n\treturn o;\n}\n\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar ctab = blob.read_shift(2);\n\tvar cch = blob.read_shift(2);\n\topts.sbcch = cch;\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n\t/* TODO: 2.5.277 Virtual Path */\n\tvar rgst = [];\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n\treturn [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n\tvar flags = blob.read_shift(2);\n\tvar body;\n\tvar o = ({\n\t\tfBuiltIn: flags & 0x01,\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\n\t\tfWantPict: (flags >>> 2) & 0x01,\n\t\tfOle: (flags >>> 3) & 0x01,\n\t\tfOleLink: (flags >>> 4) & 0x01,\n\t\tcf: (flags >>> 5) & 0x3FF,\n\t\tfIcon: flags >>> 15 & 0x01\n\t}/*:any*/);\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n\to.body = body || blob.read_shift(length-2);\n\tif(typeof body === \"string\") o.Name = body;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nvar XLSLblBuiltIn = [\n\t\"_xlnm.Consolidate_Area\",\n\t\"_xlnm.Auto_Open\",\n\t\"_xlnm.Auto_Close\",\n\t\"_xlnm.Extract\",\n\t\"_xlnm.Database\",\n\t\"_xlnm.Criteria\",\n\t\"_xlnm.Print_Area\",\n\t\"_xlnm.Print_Titles\",\n\t\"_xlnm.Recorder\",\n\t\"_xlnm.Data_Form\",\n\t\"_xlnm.Auto_Activate\",\n\t\"_xlnm.Auto_Deactivate\",\n\t\"_xlnm.Sheet_Title\",\n\t\"_xlnm._FilterDatabase\"\n];\nfunction parse_Lbl(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar flags = blob.read_shift(2);\n\tvar chKey = blob.read_shift(1);\n\tvar cch = blob.read_shift(1);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar itab = 0;\n\tif(!opts || opts.biff >= 5) {\n\t\tif(opts.biff != 5) blob.l += 2;\n\t\titab = blob.read_shift(2);\n\t\tif(opts.biff == 5) blob.l += 2;\n\t\tblob.l += 4;\n\t}\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n\t/*jshint -W018 */\n\tvar rgce = (target == blob.l || cce === 0 || !(npflen > 0)) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n\t/*jshint +W018 */\n\treturn {\n\t\tchKey: chKey,\n\t\tName: name,\n\t\titab: itab,\n\t\trgce: rgce\n\t};\n}\n\n/* [MS-XLS] 2.4.106 TODO: verify filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n\t\t// [iSupBook, itabFirst, itabLast];\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n\treturn o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n\tif(opts.biff < 8) { blob.l += length; return; }\n\tvar cchName = blob.read_shift(2);\n\tvar cchComment = blob.read_shift(2);\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n\treturn [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n\tvar ref = parse_RefU(blob, 6);\n\tblob.l++;\n\tvar cUse = blob.read_shift(1);\n\tlength -= 8;\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n\tvar ref = parse_Ref(blob, 6);\n\t/* TODO: fAlwaysCalc */\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l ++; length -= 7; break;\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\n\t\tdefault: blob.l += 6; length -= 12;\n\t}\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n\tvar cUserThreadCount = blob.read_shift(4);\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\nfunction parse_NoteSh(blob, length, opts) {\n\tif(opts.biff < 8) return;\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n\tif(opts.biff < 8) blob.read_shift(1);\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n\t/* TODO: Support revisions */\n\treturn parse_NoteSh(blob, length, opts);\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length)/*:Array<Range>*/ {\n\tvar merges/*:Array<Range>*/ = [];\n\tvar cmcs = blob.read_shift(2);\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\n\treturn merges;\n}\nfunction write_MergeCells(merges/*:Array<Range>*/) {\n\tvar o = new_buf(2 + merges.length * 8);\n\to.write_shift(2, merges.length);\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\n\treturn { cmo: cmo, ft:fts };\n}\n/* from older spec */\nvar parse_BIFF5OT = [];\nparse_BIFF5OT[0x08] = function(blob, length) {\n\tvar tgt = blob.l + length;\n\tblob.l += 10; // todo\n\tvar cf = blob.read_shift(2);\n\tblob.l += 4;\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\n\tblob.l += 2;\n\tblob.l += 2; //var grbit = blob.read_shift(2);\n\tblob.l += 4;\n\tvar cchName = blob.read_shift(1);\n\tblob.l += cchName; // TODO: stName\n\tblob.l = tgt; // TODO: fmla\n\treturn { fmt:cf };\n};\n\nfunction parse_BIFF5Obj(blob, length, opts) {\n\tblob.l += 4; //var cnt = blob.read_shift(4);\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar grbit = blob.read_shift(2);\n\tblob.l += 2; //var colL = blob.read_shift(2);\n\tblob.l += 2; //var dxL = blob.read_shift(2);\n\tblob.l += 2; //var rwT = blob.read_shift(2);\n\tblob.l += 2; //var dyT = blob.read_shift(2);\n\tblob.l += 2; //var colR = blob.read_shift(2);\n\tblob.l += 2; //var dxR = blob.read_shift(2);\n\tblob.l += 2; //var rwB = blob.read_shift(2);\n\tblob.l += 2; //var dyB = blob.read_shift(2);\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\n\tblob.l += 6;\n\tlength -= 36;\n\tvar fts = [];\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n\treturn { cmo: [id, ot, grbit], ft:fts };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n\tvar s = blob.l;\n\tvar texts = \"\";\ntry {\n\tblob.l += 4;\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n\tvar controlInfo; // eslint-disable-line no-unused-vars\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n\telse controlInfo = parse_ControlInfo(blob, 6, opts);\n\tvar cchText = blob.read_shift(2);\n\t/*var cbRuns = */blob.read_shift(2);\n\t/*var ifntEmpty = */parseuint16(blob, 2);\n\tvar len = blob.read_shift(2);\n\tblob.l += len;\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n\t\tvar hdr = blob[blob.l];\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n\t\ttexts += t;\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\n\t}\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n\t}\n\n\tblob.l = s + length;\n\t/* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n\treturn { t: texts };\n} catch(e) { blob.l = s + length; return { t: texts }; }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n\tvar ref = parse_Ref8U(blob, 8);\n\tblob.l += 16; /* CLSID */\n\tvar hlink = parse_Hyperlink(blob, length-24);\n\treturn [ref, hlink];\n}\nfunction write_HLink(hl) {\n\tvar O = new_buf(24);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n\tblob.read_shift(2);\n\tvar ref = parse_Ref8U(blob, 8);\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n\twzTooltip = wzTooltip.replace(chr0,\"\");\n\treturn [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n\tvar TT = hl[1].Tooltip;\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\n\tO.write_shift(2, 0x0800);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n\tO.write_shift(2, 0);\n\treturn O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob)/*:[string|number, string|number]*/ {\n\tvar o = [0,0], d;\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n\treturn o;\n}\nfunction write_Country(o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, 0x01);\n\to.write_shift(2, 0x01);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n\tblob.l += 2;\n\tvar o = {cxfs:0, crc:0};\n\to.cxfs = blob.read_shift(2);\n\to.crc = blob.read_shift(4);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n\tif(!opts.cellStyles) return parsenoop(blob, length);\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\n\tvar colFirst = blob.read_shift(w);\n\tvar colLast = blob.read_shift(w);\n\tvar coldx = blob.read_shift(w);\n\tvar ixfe = blob.read_shift(w);\n\tvar flags = blob.read_shift(2);\n\tif(w == 2) blob.l += 2;\n\tvar o = ({s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags}/*:any*/);\n\tif(opts.biff >= 5 || !opts.biff) o.level = (flags >> 8) & 0x7;\n\treturn o;\n}\nfunction write_ColInfo(col, idx) {\n\tvar o = new_buf(12);\n\to.write_shift(2, idx);\n\to.write_shift(2, idx);\n\to.write_shift(2, col.width * 256);\n\to.write_shift(2, 0);\n\tvar f = 0;\n\tif(col.hidden) f |= 1;\n\to.write_shift(1, f);\n\tf = col.level || 0;\n\to.write_shift(1, f);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n\tvar o = {};\n\tif(length < 32) return o;\n\tblob.l += 16;\n\to.header = parse_Xnum(blob, 8);\n\to.footer = parse_Xnum(blob, 8);\n\tblob.l += 2;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n\tvar def = {area:false};\n\tif(opts.biff != 5) { blob.l += length; return def; }\n\tvar d = blob.read_shift(1); blob.l += 3;\n\tif((d & 0x10)) def.area = true;\n\treturn def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n/*:number*/) {\n\tvar out = new_buf(2 * n);\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n\treturn out;\n}\n\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n\tvar cf = blob.read_shift(2);\n\tvar env = blob.read_shift(2);\n\tvar lcb = blob.read_shift(4);\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n\tblob.l += lcb;\n\treturn o;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 5) opts.biff = 2;\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF2NUM(blob/*::, length*/) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = parse_Xnum(blob, 8);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2NUM(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(15);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(8, val, 'f');\n\treturn out;\n}\n\nfunction parse_BIFF2INT(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = blob.read_shift(2);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2INT(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(2, val);\n\treturn out;\n}\n\nfunction parse_BIFF2STRING(blob) {\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, 'sbcs-cont');\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n\tblob.l += 6; // unknown\n\tblob.l += 2; // font weight \"bls\"\n\tblob.l += 1; // charset\n\tblob.l += 3; // unknown\n\tblob.l += 1; // font family\n\tblob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar cch = blob.read_shift(2);\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tblob.l = end;\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n/* from js-harb (C) 2014-present  SheetJS */\nvar DBF = (function() {\nvar dbf_codepage_map = {\n\t/* Code Pages Supported by Visual FoxPro */\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\n\t/* shapefile DBF extension */\n\t/*::[*/0x00/*::]*/: 20127,           /*::[*/0x08/*::]*/:   865,\n\t/*::[*/0x09/*::]*/:   437,           /*::[*/0x0A/*::]*/:   850,\n\t/*::[*/0x0B/*::]*/:   437,           /*::[*/0x0D/*::]*/:   437,\n\t/*::[*/0x0E/*::]*/:   850,           /*::[*/0x0F/*::]*/:   437,\n\t/*::[*/0x10/*::]*/:   850,           /*::[*/0x11/*::]*/:   437,\n\t/*::[*/0x12/*::]*/:   850,           /*::[*/0x13/*::]*/:   932,\n\t/*::[*/0x14/*::]*/:   850,           /*::[*/0x15/*::]*/:   437,\n\t/*::[*/0x16/*::]*/:   850,           /*::[*/0x17/*::]*/:   865,\n\t/*::[*/0x18/*::]*/:   437,           /*::[*/0x19/*::]*/:   437,\n\t/*::[*/0x1A/*::]*/:   850,           /*::[*/0x1B/*::]*/:   437,\n\t/*::[*/0x1C/*::]*/:   863,           /*::[*/0x1D/*::]*/:   850,\n\t/*::[*/0x1F/*::]*/:   852,           /*::[*/0x22/*::]*/:   852,\n\t/*::[*/0x23/*::]*/:   852,           /*::[*/0x24/*::]*/:   860,\n\t/*::[*/0x25/*::]*/:   850,           /*::[*/0x26/*::]*/:   866,\n\t/*::[*/0x37/*::]*/:   850,           /*::[*/0x40/*::]*/:   852,\n\t/*::[*/0x4D/*::]*/:   936,           /*::[*/0x4E/*::]*/:   949,\n\t/*::[*/0x4F/*::]*/:   950,           /*::[*/0x50/*::]*/:   874,\n\t/*::[*/0x57/*::]*/:  1252,           /*::[*/0x58/*::]*/:  1252,\n\t/*::[*/0x59/*::]*/:  1252,           /*::[*/0x6C/*::]*/:   863,\n\t/*::[*/0x86/*::]*/:   737,           /*::[*/0x87/*::]*/:   852,\n\t/*::[*/0x88/*::]*/:   857,           /*::[*/0xCC/*::]*/:  1257,\n\n\t/*::[*/0xFF/*::]*/: 16969\n};\nvar dbf_reverse_map = evert({\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\t/*::[*/0x00/*::]*/: 20127\n});\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\n/* TODO: find an actual specification */\nfunction dbf_to_aoa(buf, opts)/*:AOA*/ {\n\tvar out/*:AOA*/ = [];\n\tvar d/*:Block*/ = (new_raw_buf(1)/*:any*/);\n\tswitch(opts.type) {\n\t\tcase 'base64': d = s2a(Base64.decode(buf)); break;\n\t\tcase 'binary': d = s2a(buf); break;\n\t\tcase 'buffer':\n\t\tcase 'array': d = buf; break;\n\t}\n\tprep_blob(d, 0);\n\n\t/* header */\n\tvar ft = d.read_shift(1);\n\tvar memo = !!(ft & 0x88);\n\tvar vfp = false, l7 = false;\n\tswitch(ft) {\n\t\tcase 0x02: break; // dBASE II\n\t\tcase 0x03: break; // dBASE III\n\t\tcase 0x30: vfp = true; memo = true; break; // VFP\n\t\tcase 0x31: vfp = true; memo = true; break; // VFP with autoincrement\n\t\t// 0x43 dBASE IV SQL table files\n\t\t// 0x63 dBASE IV SQL system files\n\t\tcase 0x83: break; // dBASE III with memo\n\t\tcase 0x8B: break; // dBASE IV with memo\n\t\tcase 0x8C: l7 = true; break; // dBASE Level 7 with memo\n\t\t// case 0xCB dBASE IV SQL table files with memo\n\t\tcase 0xF5: break; // FoxPro 2.x with memo\n\t\t// case 0xFB FoxBASE\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n\t}\n\n\tvar nrow = 0, fpos = 0x0209;\n\tif(ft == 0x02) nrow = d.read_shift(2);\n\td.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n\tif(ft != 0x02) nrow = d.read_shift(4);\n\tif(nrow > 1048576) nrow = 1e6;\n\n\tif(ft != 0x02) fpos = d.read_shift(2); // header length\n\tvar rlen = d.read_shift(2); // record length\n\n\tvar /*flags = 0,*/ current_cp = opts.codepage || 1252;\n\tif(ft != 0x02) { // 20 reserved bytes\n\t\td.l+=16;\n\t\t/*flags = */d.read_shift(1);\n\t\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n\t\t/* codepage present in FoxPro and dBASE Level 7 */\n\t\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n\t\td.l+=1;\n\n\t\td.l+=2;\n\t}\n\tif(l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n/*:: type DBFField = { name:string; len:number; type:string; } */\n\tvar fields/*:Array<DBFField>*/ = [], field/*:DBFField*/ = ({}/*:any*/);\n\tvar hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));\n\tvar ww = l7 ? 32 : 11;\n\twhile(d.l < hend && d[d.l] != 0x0d) {\n\t\tfield = ({}/*:any*/);\n\t\tfield.name = cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\\u0000\\r\\n].*$/g,\"\");\n\t\td.l += ww;\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n\t\tfield.len = d.read_shift(1);\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\n\t\tfield.dec = d.read_shift(1);\n\t\tif(field.name.length) fields.push(field);\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\n\t\tswitch(field.type) {\n\t\t\tcase 'B': // Double (VFP) / Binary (dBASE L7)\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'G': // General (FoxPro and dBASE L7)\n\t\t\tcase 'P': // Picture (FoxPro and dBASE L7)\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase '+': // Autoincrement (dBASE L7 only)\n\t\t\tcase '0': // _NullFlags (VFP only)\n\t\t\tcase '@': // Timestamp (dBASE L7 only)\n\t\t\tcase 'C': // Character (dBASE II)\n\t\t\tcase 'D': // Date (dBASE III)\n\t\t\tcase 'F': // Float (dBASE IV)\n\t\t\tcase 'I': // Long (VFP and dBASE L7)\n\t\t\tcase 'L': // Logical (dBASE II)\n\t\t\tcase 'M': // Memo (dBASE III)\n\t\t\tcase 'N': // Number (dBASE II)\n\t\t\tcase 'O': // Double (dBASE L7 only)\n\t\t\tcase 'T': // Datetime (VFP only)\n\t\t\tcase 'Y': // Currency (VFP only)\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\n\t\t}\n\t}\n\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\n\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n\td.l = fpos;\n\n\t/* data */\n\tvar R = 0, C = 0;\n\tout[0] = [];\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n\twhile(nrow-- > 0) {\n\t\tif(d[d.l] === 0x2A) {\n\t\t\t// TODO: record marked as deleted -- create a hidden row?\n\t\t\td.l+=rlen;\n\t\t\tcontinue;\n\t\t}\n\t\t++d.l;\n\t\tout[++R] = []; C = 0;\n\t\tfor(C = 0; C != fields.length; ++C) {\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n\t\t\tprep_blob(dd, 0);\n\t\t\tvar s = cptable.utils.decode(current_cp, dd);\n\t\t\tswitch(fields[C].type) {\n\t\t\t\tcase 'C':\n\t\t\t\t\t// NOTE: it is conventional to write '  /  /  ' for empty dates\n\t\t\t\t\tif(s.trim().length) out[R][C] = s.replace(/\\s+$/,\"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\n\t\t\t\t\telse out[R][C] = s;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n\t\t\t\tcase 'L': switch(s.trim().toUpperCase()) {\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\n\t\t\t\t\tcase '': case '?': break;\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'M': /* TODO: handle memo files */\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N':\n\t\t\t\t\ts = s.replace(/\\u0000/g,\"\").trim();\n\t\t\t\t\t// NOTE: dBASE II interprets \"  .  \" as 0\n\t\t\t\t\tif(s && s != \".\") out[R][C] = +s || 0; break;\n\t\t\t\tcase '@':\n\t\t\t\t\t// NOTE: dBASE specs appear to be incorrect\n\t\t\t\t\tout[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4; break;\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\n\t\t\t\tcase '0':\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n\t\t\t}\n\t\t}\n\t}\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n\treturn out;\n}\n\nfunction dbf_to_sheet(buf, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\n\treturn aoa_to_sheet(dbf_to_aoa(buf, o), o);\n}\n\nfunction dbf_to_workbook(buf, opts)/*:Workbook*/ {\n\ttry { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }\n\tcatch(e) { if(opts && opts.WTF) throw e; }\n\treturn ({SheetNames:[],Sheets:{}});\n}\n\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\nfunction sheet_to_dbf(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n\tvar ba = buf_array();\n\tvar aoa/*:AOA*/ = sheet_to_json(ws, {header:1, raw:true, cellDates:true});\n\tvar headers = aoa[0], data = aoa.slice(1);\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\n\tfor(i = 0; i < headers.length; ++i) {\n\t\tif(i == null) continue;\n\t\t++hcnt;\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n\t}\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar coltypes/*:Array<string>*/ = [];\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\n\t\tvar col/*:Array<any>*/ = [];\n\t\tfor(j=0; j < data.length; ++j) {\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\n\t\t}\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n\t\tvar guess = '', _guess = '';\n\t\tfor(j = 0; j < col.length; ++j) {\n\t\t\tswitch(typeof col[j]) {\n\t\t\t\t/* TODO: check if L2 compat is desired */\n\t\t\t\tcase 'number': _guess = 'B'; break;\n\t\t\t\tcase 'string': _guess = 'C'; break;\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n\t\t\t\tdefault: _guess = 'C';\n\t\t\t}\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\n\t\t\tif(guess == 'C') break;\n\t\t}\n\t\trlen += _RLEN[guess] || 0;\n\t\tcoltypes[i] = guess;\n\t}\n\n\tvar h = ba.next(32);\n\th.write_shift(4, 0x13021130);\n\th.write_shift(4, data.length);\n\th.write_shift(2, 296 + 32 * hcnt);\n\th.write_shift(2, rlen);\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\n\th.write_shift(4, 0x00000000 | ((+dbf_reverse_map[/*::String(*/current_ansi/*::)*/] || 0x03)<<8));\n\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\n\t\tif(headers[i] == null) continue;\n\t\tvar hf = ba.next(32);\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n\t\thf.write_shift(1, _f, \"sbcs\");\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n\t\thf.write_shift(4, j);\n\t\thf.write_shift(1, _RLEN[coltypes[i]] || 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(1, 0x02);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(4, 0);\n\t\tj += _RLEN[coltypes[i]] || 0;\n\t}\n\n\tvar hb = ba.next(264);\n\thb.write_shift(4, 0x0000000D);\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n\tfor(i=0; i < data.length; ++i) {\n\t\tvar rout = ba.next(rlen);\n\t\trout.write_shift(1, 0);\n\t\tfor(j=0; j<headers.length; ++j) {\n\t\t\tif(headers[j] == null) continue;\n\t\t\tswitch(coltypes[j]) {\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n\t\t\t\t\telse {\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C':\n\t\t\t\t\tvar _s = String(data[i][j]||\"\");\n\t\t\t\t\trout.write_shift(1, _s, \"sbcs\");\n\t\t\t\t\tfor(hcnt=0; hcnt < 250-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;\n\t\t\t}\n\t\t}\n\t\t// data\n\t}\n\tba.next(1).write_shift(1, 0x1A);\n\treturn ba.end();\n}\n\treturn {\n\t\tversions: DBF_SUPPORTED_VERSIONS,\n\t\tto_workbook: dbf_to_workbook,\n\t\tto_sheet: dbf_to_sheet,\n\t\tfrom_sheet: sheet_to_dbf\n\t};\n})();\n\nvar SYLK = (function() {\n\t/* TODO: stress test sequences */\n\tvar sylk_escapes = ({\n\t\tAA:'À', BA:'Á', CA:'Â', DA:195, HA:'Ä', JA:197,\n\t\tAE:'È', BE:'É', CE:'Ê',         HE:'Ë',\n\t\tAI:'Ì', BI:'Í', CI:'Î',         HI:'Ï',\n\t\tAO:'Ò', BO:'Ó', CO:'Ô', DO:213, HO:'Ö',\n\t\tAU:'Ù', BU:'Ú', CU:'Û',         HU:'Ü',\n\t\tAa:'à', Ba:'á', Ca:'â', Da:227, Ha:'ä', Ja:229,\n\t\tAe:'è', Be:'é', Ce:'ê',         He:'ë',\n\t\tAi:'ì', Bi:'í', Ci:'î',         Hi:'ï',\n\t\tAo:'ò', Bo:'ó', Co:'ô', Do:245, Ho:'ö',\n\t\tAu:'ù', Bu:'ú', Cu:'û',         Hu:'ü',\n\t\tKC:'Ç', Kc:'ç', q:'æ',  z:'œ',  a:'Æ',  j:'Œ',\n\t\tDN:209, Dn:241, Hy:255,\n\t\tS:169,  c:170,  R:174,  \"B \":180,\n\t\t/*::[*/0/*::]*/:176,    /*::[*/1/*::]*/:177,  /*::[*/2/*::]*/:178,\n\t\t/*::[*/3/*::]*/:179,    /*::[*/5/*::]*/:181,  /*::[*/6/*::]*/:182,\n\t\t/*::[*/7/*::]*/:183,    Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,\n\t\t\"!\":161, '\"':162, \"#\":163, \"(\":164, \"%\":165, \"'\":167, \"H \":168,\n\t\t\"+\":171, \";\":187, \"<\":188, \"=\":189, \">\":190, \"?\":191, \"{\":223\n\t}/*:any*/);\n\tvar sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g,\"\\\\$1\") + \"|\\\\|)\", \"gm\");\n\tvar sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == \"number\" ? _getansi(o) : o; };\n\tvar decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };\n\tsylk_escapes[\"|\"] = 254;\n\t/* TODO: find an actual specification */\n\tfunction sylk_to_aoa(d/*:RawData*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64.decode(d), opts);\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction sylk_to_aoa_str(str/*:string*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr/*:AOA*/ = [];\n\t\tvar formats/*:Array<string>*/ = [];\n\t\tvar next_cell_format/*:string|null*/ = null;\n\t\tvar sht = {}, rowinfo/*:Array<RowInfo>*/ = [], colinfo/*:Array<ColInfo>*/ = [], cw/*:Array<string>*/ = [];\n\t\tvar Mval = 0, j;\n\t\tif(+opts.codepage >= 0) set_cp(+opts.codepage);\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tMval = 0;\n\t\t\tvar rstr=records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function(x) { return x.replace(/\\u0000/g, \";\"); });\n\t\t\tvar RT=record[0], val;\n\t\t\tif(rstr.length > 0) switch(RT) {\n\t\t\tcase 'ID': break; /* header */\n\t\t\tcase 'E': break; /* EOF */\n\t\t\tcase 'B': break; /* dimensions */\n\t\t\tcase 'O': break; /* options? */\n\t\t\tcase 'W': break; /* window? */\n\t\t\tcase 'P':\n\t\t\t\tif(record[1].charAt(0) == 'P')\n\t\t\t\t\tformats.push(rstr.slice(3).replace(/;;/g, \";\"));\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\tvar C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'A': break; // TODO: comment\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; C_seen_X = true; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; if(!C_seen_X) C = 0;\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\tval = record[rj].slice(1);\n\t\t\t\t\tif(val.charAt(0) === '\"') val = val.slice(1,val.length - 1);\n\t\t\t\t\telse if(val === 'TRUE') val = true;\n\t\t\t\t\telse if(val === 'FALSE') val = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\n\t\t\t\t\t\tval = fuzzynum(val);\n\t\t\t\t\t\tif(next_cell_format !== null && SSF.is_date(next_cell_format)) val = numdate(val);\n\t\t\t\t\t} else if(!isNaN(fuzzydate(val).getDate())) {\n\t\t\t\t\t\tval = parseDate(val);\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = cptable.utils.decode(opts.codepage, val);\n\t\t\t\t\tC_seen_K = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tC_seen_E = true;\n\t\t\t\t\tvar formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n\t\t\t\t\tarr[R][C] = [arr[R][C], formula];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tC_seen_S = true;\n\t\t\t\t\tarr[R][C] = [arr[R][C], \"S5S\"];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G': break; // unknown\n\t\t\t\tcase 'R': _R = parseInt(record[rj].slice(1))-1; break;\n\t\t\t\tcase 'C': _C = parseInt(record[rj].slice(1))-1; break;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(C_seen_K) {\n\t\t\t\tif(arr[R][C] && arr[R][C].length == 2) arr[R][C][0] = val;\n\t\t\t\telse arr[R][C] = val;\n\t\t\t\tnext_cell_format = null;\n\t\t\t}\n\t\t\tif(C_seen_S) {\n\t\t\t\tif(C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n\t\t\t\tvar shrbase = _R > -1 && arr[_R][_C];\n\t\t\t\tif(!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n\t\t\t\tarr[R][C][1] = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'F':\n\t\t\tvar F_seen = 0;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; /*C = 0;*/\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;\n\t\t\t\tcase 'F': break; /* ??? */\n\t\t\t\tcase 'G': break; /* hide grid */\n\t\t\t\tcase 'P':\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1))];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S': break; /* cell style */\n\t\t\t\tcase 'D': break; /* column */\n\t\t\t\tcase 'N': break; /* font */\n\t\t\t\tcase 'W':\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C': /* default column format */\n\t\t\t\t\tC = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R': /* row properties */\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t}\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn [arr, sht];\n\t}\n\n\tfunction sylk_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar aoasht = sylk_to_aoa(d, opts);\n\t\tvar aoa = aoasht[0], ws = aoasht[1];\n\t\tvar o = aoa_to_sheet(aoa, opts);\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\n\t\treturn o;\n\t}\n\n\tfunction sylk_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }\n\n\tfunction write_ws_cell_sylk(cell/*:Cell*/, ws/*:Worksheet*/, R/*:number*/, C/*:number*//*::, opts*/)/*:string*/ {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n\t\tswitch(cell.t) {\n\t\t\tcase 'n':\n\t\t\t\to += (cell.v||0);\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n\t\t\tcase 'e': o += cell.w || cell.v; break;\n\t\t\tcase 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\n\t\t\tcase 's': o += '\"' + cell.v.replace(/\"/g,\"\").replace(/;/g, \";;\") + '\"'; break;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cols_sylk(out, cols) {\n\t\tcols.forEach(function(col, i) {\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n\t\t\tif(col.hidden) rec += \"0\";\n\t\t\telse {\n\t\t\t\tif(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n\t\t\t\tif(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\n\t\t\t}\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n\t\t});\n\t}\n\n\tfunction write_ws_rows_sylk(out/*:Array<string>*/, rows/*:Array<RowInfo>*/) {\n\t\trows.forEach(function(row, i) {\n\t\t\tvar rec = \"F;\";\n\t\t\tif(row.hidden) rec += \"M0;\";\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\n\t\t});\n\t}\n\n\tfunction sheet_to_sylk(ws/*:Worksheet*/, opts/*:?any*/)/*:string*/ {\n\t\tvar preamble/*:Array<string>*/ = [\"ID;PWXL;N;E\"], o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tvar RS = \"\\r\\n\";\n\n\t\tpreamble.push(\"P;PGeneral\");\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n\t\tpreamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n\t\t\t\to.push(write_ws_cell_sylk(cell, ws, R, C, opts));\n\t\t\t}\n\t\t}\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n\t}\n\n\treturn {\n\t\tto_workbook: sylk_to_workbook,\n\t\tto_sheet: sylk_to_sheet,\n\t\tfrom_sheet: sheet_to_sylk\n\t};\n})();\n\nvar DIF = (function() {\n\tfunction dif_to_aoa(d/*:RawData*/, opts)/*:AOA*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64.decode(d), opts);\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction dif_to_aoa_str(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\tif (R < 0) continue;\n\t\t\tvar metadata = records[ri].trim().split(\",\");\n\t\t\tvar type = metadata[0], value = metadata[1];\n\t\t\t++ri;\n\t\t\tvar data = records[ri] || \"\";\n\t\t\twhile(((data.match(/[\"]/g)||[]).length & 1) && ri < records.length - 1) data += \"\\n\" + records[++ri];\n\t\t\tdata = data.trim();\n\t\t\tswitch (+type) {\n\t\t\t\tcase -1:\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\n\t\t\t\t\telse arr[R][C] = value;\n\t\t\t\t\t++C; break;\n\t\t\t\tcase 1:\n\t\t\t\t\tdata = data.slice(1,data.length-1);\n\t\t\t\t\tdata = data.replace(/\"\"/g, '\"');\n\t\t\t\t\tif(DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (data === 'EOD') break;\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction dif_to_sheet(str/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n\tfunction dif_to_workbook(str/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }\n\n\tvar sheet_to_dif = (function() {\n\t\tvar push_field = function pf(o/*:Array<string>*/, topic/*:string*/, v/*:number*/, n/*:number*/, s/*:string*/) {\n\t\t\to.push(topic);\n\t\t\to.push(v + \",\" + n);\n\t\t\to.push('\"' + s.replace(/\"/g,'\"\"') + '\"');\n\t\t};\n\t\tvar push_value = function po(o/*:Array<string>*/, type/*:number*/, v/*:any*/, s/*:string*/) {\n\t\t\to.push(type + \",\" + v);\n\t\t\to.push(type == 1 ? '\"' + s.replace(/\"/g,'\"\"') + '\"' : s);\n\t\t};\n\t\treturn function sheet_to_dif(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\t\tvar o/*:Array<string>*/ = [];\n\t\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tpush_field(o, \"TABLE\", 0, 1, \"sheetjs\");\n\t\t\tpush_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1,\"\");\n\t\t\tpush_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1,\"\");\n\t\t\tpush_field(o, \"DATA\", 0, 0,\"\");\n\t\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\t\tpush_value(o, -1, 0, \"BOT\");\n\t\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\t\tif(!cell) { push_value(o, 1, 0, \"\"); continue;}\n\t\t\t\t\tswitch(cell.t) {\n\t\t\t\t\t\tcase 'n':\n\t\t\t\t\t\t\tvar val = DIF_XL ? cell.w : cell.v;\n\t\t\t\t\t\t\tif(!val && cell.v != null) val = cell.v;\n\t\t\t\t\t\t\tif(val == null) {\n\t\t\t\t\t\t\t\tif(DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);\n\t\t\t\t\t\t\t\telse push_value(o, 1, 0, \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse push_value(o, 0, val, \"V\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tpush_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 's':\n\t\t\t\t\t\t\tpush_value(o, 1, 0, (!DIF_XL || isNaN(cell.v)) ? cell.v : '=\"' + cell.v + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tif(!cell.w) cell.w = SSF.format(cell.z || SSF._table[14], datenum(parseDate(cell.v)));\n\t\t\t\t\t\t\tif(DIF_XL) push_value(o, 0, cell.w, \"V\");\n\t\t\t\t\t\t\telse push_value(o, 1, 0, cell.w);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault: push_value(o, 1, 0, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpush_value(o, -1, 0, \"EOD\");\n\t\t\tvar RS = \"\\r\\n\";\n\t\t\tvar oo = o.join(RS);\n\t\t\t//while((oo.length & 0x7F) != 0) oo += \"\\0\";\n\t\t\treturn oo;\n\t\t};\n\t})();\n\treturn {\n\t\tto_workbook: dif_to_workbook,\n\t\tto_sheet: dif_to_sheet,\n\t\tfrom_sheet: sheet_to_dif\n\t};\n})();\n\nvar ETH = (function() {\n\tfunction decode(s/*:string*/)/*:string*/ { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n\tfunction encode(s/*:string*/)/*:string*/ { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n\tfunction eth_to_aoa(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tvar record = records[ri].trim().split(\":\");\n\t\t\tif(record[0] !== 'cell') continue;\n\t\t\tvar addr = decode_cell(record[1]);\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n\t\t\tR = addr.r; C = addr.c;\n\t\t\tswitch(record[2]) {\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'vtc':\n\t\t\t\t\tswitch(record[3]) {\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\n\t\t\t\t\t}\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n\t\t\t}\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction eth_to_sheet(d/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n\tfunction eth_to_workbook(d/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n\tvar header = [\n\t\t\"socialcalc:version:1.5\",\n\t\t\"MIME-Version: 1.0\",\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n\t].join(\"\\n\");\n\n\tvar sep = [\n\t\t\"--SocialCalcSpreadsheetControlSave\",\n\t\t\"Content-type: text/plain; charset=UTF-8\"\n\t].join(\"\\n\") + \"\\n\";\n\n\t/* TODO: the other parts */\n\tvar meta = [\n\t\t\"# SocialCalc Spreadsheet Control Save\",\n\t\t\"part:sheet\"\n\t].join(\"\\n\");\n\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\n\n\tfunction sheet_to_eth_data(ws/*:Worksheet*/)/*:string*/ {\n\t\tif(!ws || !ws['!ref']) return \"\";\n\t\tvar o/*:Array<string>*/ = [], oo/*:Array<string>*/ = [], cell, coord = \"\";\n\t\tvar r = decode_range(ws['!ref']);\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcoord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\n\t\t\t\too = [\"cell\", coord, 't'];\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n\t\t\t\t\t\too[5] = cell.w || SSF.format(cell.z || SSF._table[14], t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e': continue;\n\t\t\t\t}\n\t\t\t\to.push(oo.join(\":\"));\n\t\t\t}\n\t\t}\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n\t\to.push(\"valueformat:1:text-wiki\");\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n\t\treturn o.join(\"\\n\");\n\t}\n\n\tfunction sheet_to_eth(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n\t}\n\n\treturn {\n\t\tto_workbook: eth_to_workbook,\n\t\tto_sheet: eth_to_sheet,\n\t\tfrom_sheet: sheet_to_eth\n\t};\n})();\n\nvar PRN = (function() {\n\tfunction set_text_arr(data/*:string*/, arr/*:AOA*/, R/*:number*/, C/*:number*/, o/*:any*/) {\n\t\tif(o.raw) arr[R][C] = data;\n\t\telse if(data === \"\"){/* empty */}\n\t\telse if(data === 'TRUE') arr[R][C] = true;\n\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n\t\telse arr[R][C] = data;\n\t}\n\n\tfunction prn_to_aoa_str(f/*:string*/, opts)/*:AOA*/ {\n\t\tvar o = opts || {};\n\t\tvar arr/*:AOA*/ = ([]/*:any*/);\n\t\tif(!f || f.length === 0) return arr;\n\t\tvar lines = f.split(/[\\r\\n]/);\n\t\tvar L = lines.length - 1;\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\n\t\tvar start = 10, idx = 0;\n\t\tvar R = 0;\n\t\tfor(; R <= L; ++R) {\n\t\t\tidx = lines[R].indexOf(\" \");\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\n\t\t\tstart = Math.max(start, idx);\n\t\t}\n\t\tfor(R = 0; R <= L; ++R) {\n\t\t\tarr[R] = [];\n\t\t\t/* TODO: confirm that widths are always 10 */\n\t\t\tvar C = 0;\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n\t\t}\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n\t\treturn arr;\n\t}\n\n\t// List of accepted CSV separators\n\tvar guess_seps = {\n\t\t/*::[*/0x2C/*::]*/: ',',\n\t\t/*::[*/0x09/*::]*/: \"\\t\",\n\t\t/*::[*/0x3B/*::]*/: ';',\n\t\t/*::[*/0x7C/*::]*/: '|'\n\t};\n\n\t// CSV separator weights to be used in case of equal numbers\n\tvar guess_sep_weights = {\n\t\t/*::[*/0x2C/*::]*/: 3,\n\t\t/*::[*/0x09/*::]*/: 2,\n\t\t/*::[*/0x3B/*::]*/: 1,\n\t\t/*::[*/0x7C/*::]*/: 0\n\t};\n\n\tfunction guess_sep(str) {\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\n\t\tfor(;end < str.length;++end) {\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n\t\t}\n\n\t\tcc = [];\n\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\tcc.push([ cnt[end], end ]);\n\t\t}\n\n\t\tif ( !cc.length ) {\n\t\t\tcnt = guess_sep_weights;\n\t\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\t\tcc.push([ cnt[end], end ]);\n\t\t\t}\n\t\t}\n\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n\t\treturn guess_seps[cc.pop()[1]] || 0x2C;\n\t}\n\n\tfunction dsv_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar sep = \"\";\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:0}}/*:any*/);\n\n\t\tif(str.slice(0,4) == \"sep=\") {\n\t\t\t// If the line ends in \\r\\n\n\t\t\tif(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(7);\n\t\t\t}\n\t\t\t// If line ends in \\r OR \\n\n\t\t\telse if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(6);\n\t\t\t}\n\t\t\telse sep = guess_sep(str.slice(0,1024));\n\t\t}\n\t\telse if(o && o.FS) sep = o.FS;\n\t\telse sep = guess_sep(str.slice(0,1024));\n\t\tvar R = 0, C = 0, v = 0;\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);\n\t\tstr = str.replace(/\\r\\n/mg, \"\\n\");\n\t\tvar _re/*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n\t\tfunction finish_cell() {\n\t\t\tvar s = str.slice(start, end);\n\t\t\tvar cell = ({}/*:any*/);\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n\t\t\tif(s.length === 0) cell.t = 'z';\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\n\t\t\telse if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\n\t\t\t\tcell.z = o.dateNF || SSF._table[14];\n\t\t\t\tvar k = 0;\n\t\t\t\tif(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }\n\t\t\t\tif(o.cellText !== false) cell.w = SSF.format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\n\t\t\t\tif(!o.cellNF) delete cell.z;\n\t\t\t} else {\n\t\t\t\tcell.t = 's';\n\t\t\t\tcell.v = s;\n\t\t\t}\n\t\t\tif(cell.t == 'z'){}\n\t\t\telse if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\n\t\t\tstart = end+1; startcc = str.charCodeAt(start);\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n\t\t}\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n\t\t\tcase 0x22: if(startcc === 0x22) instr = !instr; break;\n\t\t\tcase sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;\n\t\t\tdefault: break;\n\t\t}\n\t\tif(end - start > 0) finish_cell();\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction prn_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tif(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n\t\tif(opts.FS) return dsv_to_sheet_str(str, opts);\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n\t}\n\n\tfunction prn_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': str = Base64.decode(d); break;\n\t\t\tcase 'binary': str = d; break;\n\t\t\tcase 'buffer':\n\t\t\t\tif(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n\t\t\t\telse if(opts.codepage && typeof cptable !== 'undefined') str = cptable.utils.decode(opts.codepage, d);\n\t\t\t\telse str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n\t\t\t\tbreak;\n\t\t\tcase 'array': str = cc2str(d); break;\n\t\t\tcase 'string': str = d; break;\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t\t}\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n\t\telse if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);\n\t\telse if((opts.type == 'binary') && typeof cptable !== 'undefined' && opts.codepage)  str = cptable.utils.decode(opts.codepage, cptable.utils.encode(28591,str));\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n\t\treturn prn_to_sheet_str(str, opts);\n\t}\n\n\tfunction prn_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n\tfunction sheet_to_prn(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar oo/*:Array<string>*/ = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n\t\t\t\twhile(w.length < 10) w += \" \";\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\n\t\t\t}\n\t\t\to.push(oo.join(\"\"));\n\t\t}\n\t\treturn o.join(\"\\n\");\n\t}\n\n\treturn {\n\t\tto_workbook: prn_to_workbook,\n\t\tto_sheet: prn_to_sheet,\n\t\tfrom_sheet: sheet_to_prn\n\t};\n})();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n\ttry {\n\t\tvar out = SYLK.to_workbook(d, o);\n\t\to.WTF = OLD_WTF;\n\t\treturn out;\n\t} catch(e) {\n\t\to.WTF = OLD_WTF;\n\t\tif(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n\t\treturn PRN.to_workbook(d, opts);\n\t}\n}\n\nvar WK_ = /*#__PURE__*/ (function() {\n\tfunction lotushopper(data, cb/*:RecordHopperCB*/, opts/*:any*/) {\n\t\tif(!data) return;\n\t\tprep_blob(data, data.l || 0);\n\t\tvar Enum = opts.Enum || WK1Enum;\n\t\twhile(data.l < data.length) {\n\t\t\tvar RT = data.read_shift(2);\n\t\t\tvar R = Enum[RT] || Enum[0xFFFF];\n\t\t\tvar length = data.read_shift(2);\n\t\t\tvar tgt = data.l + length;\n\t\t\tvar d = R.f && R.f(data, length, opts);\n\t\t\tdata.l = tgt;\n\t\t\tif(cb(d, R, RT)) return;\n\t\t}\n\t}\n\n\tfunction lotus_to_workbook(d/*:RawData*/, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64.decode(d)), opts);\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n\t\t\tcase 'buffer':\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\n\t\t}\n\t\tthrow \"Unsupported type \" + opts.type;\n\t}\n\n\tfunction lotus_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tif(!d) return d;\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ((o.dense ? [] : {})/*:any*/), n = \"Sheet1\", next_n = \"\", sidx = 0;\n\t\tvar sheets = {}, snames = [], realnames = [];\n\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\tvar sheetRows = o.sheetRows || 0;\n\n\t\tif(d[2] == 0x00) {\n\t\t\tif(d[3] == 0x08 || d[3] == 0x09) {\n\t\t\t\tif(d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n\t\t\t}\n\t\t}\n\n\t\tif(d[2] == 0x02) {\n\t\t\to.Enum = WK1Enum;\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0x00: /* BOF */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\n\t\t\t\tcase 0xCC: if(val) next_n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0xDE: next_n = val; break; /* SHEETNAMELP */\n\t\t\t\tcase 0x0F: /* LABEL */\n\t\t\t\tcase 0x33: /* STRING */\n\t\t\t\t\tif(!o.qpro) val[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x0D: /* INTEGER */\n\t\t\t\tcase 0x0E: /* NUMBER */\n\t\t\t\tcase 0x10: /* FORMULA */\n\t\t\t\t\t/* TODO: actual translation of the format code */\n\t\t\t\t\tif(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n\t\t\t\t\t\tval[1].z = o.dateNF || SSF._table[14];\n\t\t\t\t\t\tif(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\n\t\t\t\t\t}\n\n\t\t\t\t\tif(o.qpro) {\n\t\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\t\tsidx = val[3]; n = next_n || \"Sheet\" + (sidx + 1); next_n = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tmpcell = o.dense ? (s[val[0].r]||[])[val[0].c] : s[encode_cell(val[0])];\n\t\t\t\t\tif(tmpcell) {\n\t\t\t\t\t\ttmpcell.t = val[1].t; tmpcell.v = val[1].v;\n\t\t\t\t\t\tif(val[1].z != null) tmpcell.z = val[1].z;\n\t\t\t\t\t\tif(val[1].f != null) tmpcell.f = val[1].f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}}, o);\n\t\t} else if(d[2] == 0x1A || d[2] == 0x0E) {\n\t\t\to.Enum = WK3Enum;\n\t\t\tif(d[2] == 0x0E) { o.qpro = true; d.l = 0; }\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0xCC: n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0x16: /* LABEL16 */\n\t\t\t\t\tval[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x17: /* NUMBER17 */\n\t\t\t\tcase 0x18: /* NUMBER18 */\n\t\t\t\tcase 0x19: /* FORMULA19 */\n\t\t\t\tcase 0x25: /* NUMBER25 */\n\t\t\t\tcase 0x27: /* NUMBER27 */\n\t\t\t\tcase 0x28: /* FORMULA28 */\n\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x1B: /* XFORMAT */\n\t\t\t\t\tif(val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0601: /* SHEETINFOQP */\n\t\t\t\t\trealnames[val[0]] = val[1]; if(val[0] == sidx) n = val[1]; break;\n\t\t\t\tdefault: break;\n\t\t\t}}, o);\n\t\t} else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n\t\ts[\"!ref\"] = encode_range(refguess);\n\t\tsheets[next_n || n] = s;\n\t\tsnames.push(next_n || n);\n\t\tif(!realnames.length) return { SheetNames: snames, Sheets: sheets };\n\t\tvar osheets = {}, rnames = [];\n\t\t/* TODO: verify no collisions */\n\t\tfor(var i = 0; i < realnames.length; ++i) if(sheets[snames[i]]) {\n\t\t\trnames.push(realnames[i] || snames[i]);\n\t\t\tosheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n\t\t} else {\n\t\t\trnames.push(realnames[i]);\n\t\t\tosheets[realnames[i]] = ({ \"!ref\": \"A1\" });\n\t\t}\n\t\treturn { SheetNames: rnames, Sheets: osheets };\n\t}\n\n\tfunction sheet_to_wk1(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n\t\tvar ba = buf_array();\n\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\tvar dense = Array.isArray(ws);\n\t\tvar cols = [];\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n\t\twrite_biff_rec(ba, 0x06, write_RANGE(range));\n\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\tvar rr = encode_row(R);\n\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t/* TODO: formula records */\n\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\tif((cell.v|0)==cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell.v));\n\t\t\t\t\telse write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell.v));\n\t\t\t\t} else {\n\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\twrite_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\tfunction book_to_wk3(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n\t\tvar ba = buf_array();\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n\n\t\tfor(var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n\n\t\tvar wsidx = 0;\n\t\tfor(i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tvar cols = [];\n\t\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\t\tvar rr = encode_row(R);\n\t\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t\t/* TODO: FORMULA19 NUMBER18 records */\n\t\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\t\twrite_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\t\t/* TODO: max len? */\n\t\t\t\t\t\twrite_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t++wsidx;\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\n\tfunction write_BOF_WK1(v/*:number*/) {\n\t\tvar out = new_buf(2);\n\t\tout.write_shift(2, v);\n\t\treturn out;\n\t}\n\n\tfunction write_BOF_WK3(wb/*:Workbook*/) {\n\t\tvar out = new_buf(26);\n\t\tout.write_shift(2, 0x1000);\n\t\tout.write_shift(2, 0x0004);\n\t\tout.write_shift(4, 0x0000);\n\t\tvar rows = 0, cols = 0, wscnt = 0;\n\t\tfor(var i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar name = wb.SheetNames[i];\n\t\t\tvar ws = wb.Sheets[name];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\t++wscnt;\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tif(rows < range.e.r) rows = range.e.r;\n\t\t\tif(cols < range.e.c) cols = range.e.c;\n\t\t}\n\t\tif(rows > 8191) rows = 8191;\n\t\tout.write_shift(2, rows);\n\t\tout.write_shift(1, wscnt);\n\t\tout.write_shift(1, cols);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(1, 0x01);\n\t\tout.write_shift(1, 0x02);\n\t\tout.write_shift(4, 0);\n\t\tout.write_shift(4, 0);\n\t\treturn out;\n\t}\n\n\tfunction parse_RANGE(blob, length, opts) {\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\t\tif(length == 8 && opts.qpro) {\n\t\t\to.s.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.s.r = blob.read_shift(2);\n\t\t\to.e.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.e.r = blob.read_shift(2);\n\t\t\treturn o;\n\t\t}\n\t\to.s.c = blob.read_shift(2);\n\t\to.s.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\to.e.c = blob.read_shift(2);\n\t\to.e.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n\t\treturn o;\n\t}\n\tfunction write_RANGE(range) {\n\t\tvar out = new_buf(8);\n\t\tout.write_shift(2, range.s.c);\n\t\tout.write_shift(2, range.s.r);\n\t\tout.write_shift(2, range.e.c);\n\t\tout.write_shift(2, range.e.r);\n\t\treturn out;\n\t}\n\n\tfunction parse_cell(blob, length, opts) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0, 0];\n\t\tif(opts.qpro && opts.vers != 0x5120) {\n\t\t\to[0].c = blob.read_shift(1);\n\t\t\to[3] = blob.read_shift(1);\n\t\t\to[0].r = blob.read_shift(2);\n\t\t\tblob.l+=2;\n\t\t} else {\n\t\t\to[2] = blob.read_shift(1);\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tblob.l++;\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\tif(opts.qpro) blob.l++;\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL(R, C, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(7 + s.length);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, 0x27); // ??\n\t\tfor(var i = 0; i < o.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_INTEGER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(2, 'i');\n\t\treturn o;\n\t}\n\tfunction write_INTEGER(R, C, v) {\n\t\tvar o = new_buf(7);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(2, v, 'i');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\treturn o;\n\t}\n\tfunction write_NUMBER(R, C, v) {\n\t\tvar o = new_buf(13);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(8, v, 'f');\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\t/* TODO: formula */\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\tif(opts.qpro) blob.l = tgt;\n\t\telse {\n\t\t\tvar flen = blob.read_shift(2);\n\t\t\twk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n\t\t\tblob.l += flen;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction wk1_parse_rc(B, V, col) {\n\t\tvar rel = V & 0x8000;\n\t\tV &= ~0x8000;\n\t\tV = (rel ? B : 0) + ((V >= 0x2000) ? V - 0x4000 : V);\n\t\treturn (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n\t}\n\tvar oprec = [\n\t\t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n\t\t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n\t];\n\t/* TODO: flesh out */\n\tvar FuncTab = {\n\t\t0x33: [\"FALSE\", 0],\n\t\t0x34: [\"TRUE\", 0],\n\t\t0x46: [\"LEN\", 1],\n\t\t0x50: [\"SUM\", 69],\n\t\t0x51: [\"AVERAGEA\", 69],\n\t\t0x52: [\"COUNTA\", 69],\n\t\t0x53: [\"MINA\", 69],\n\t\t0x54: [\"MAXA\", 69],\n\t\t0x6F: [\"T\", 1]\n\t};\n\tvar BinOpTab = [\n\t\t  \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",\n\t\t  \"\",  \"+\",  \"-\",  \"*\",  \"/\",  \"^\",  \"=\", \"<>\",\n\t\t\"<=\", \">=\",  \"<\",  \">\",   \"\",   \"\",   \"\",   \"\",\n\t\t \"&\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\"\n\t];\n\n\tfunction wk1_fmla_to_csf(blob, o) {\n\t\tprep_blob(blob, 0);\n\t\tvar out = [], argc = 0, R = \"\", C = \"\", argL = \"\", argR = \"\";\n\t\twhile(blob.l < blob.length) {\n\t\t\tvar cc = blob[blob.l++];\n\t\t\tswitch(cc) {\n\t\t\t\tcase 0x00: out.push(blob.read_shift(8, 'f')); break;\n\t\t\t\tcase 0x01: {\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x02: {\n\t\t\t\t\tvar c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tvar r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(c + r + \":\" + C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x03:\n\t\t\t\t\tif(blob.l < blob.length) { console.error(\"WK1 premature formula end\"); return; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x04: out.push(\"(\" + out.pop() + \")\"); break;\n\t\t\t\tcase 0x05: out.push(blob.read_shift(2)); break;\n\t\t\t\tcase 0x06: {\n\t\t\t\t\t/* TODO: text encoding */\n\t\t\t\t\tvar Z = \"\"; while((cc = blob[blob.l++])) Z += String.fromCharCode(cc);\n\t\t\t\t\tout.push('\"' + Z.replace(/\"/g, '\"\"') + '\"'); break;\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x08: out.push(\"-\" + out.pop()); break;\n\t\t\t\tcase 0x17: out.push(\"+\" + out.pop()); break;\n\t\t\t\tcase 0x16: out.push(\"NOT(\" + out.pop() + \")\"); break;\n\n\t\t\t\tcase 0x14: case 0x15: {\n\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\tout.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n\t\t\t\t} break;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif(cc < 0x20 && BinOpTab[cc]) {\n\t\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\t\tout.push(argL + BinOpTab[cc] + argR);\n\t\t\t\t\t} else if(FuncTab[cc]) {\n\t\t\t\t\t\targc = FuncTab[cc][1];\n\t\t\t\t\t\tif(argc == 69) argc = blob[blob.l++];\n\t\t\t\t\t\tif(argc > out.length) { console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\"); return; }\n\t\t\t\t\t\tvar args = out.slice(-argc);\n\t\t\t\t\t\tout.length -= argc;\n\t\t\t\t\t\tout.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse if(cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n\t\t\t\t\t// possible future functions ??\n\t\t\t\t\telse return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n\t\t\t}\n\t\t}\n\t\tif(out.length == 1) o[1].f = \"\" + out[0];\n\t\telse console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n\t}\n\n\n\tfunction parse_cell_3(blob/*::, length*/) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL_16(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].t = 's';\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL_16(R, C, wsidx, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(6 + s.length);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\to.write_shift(1, 0x27);\n\t\tfor(var i = 0; i < s.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_18(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].v = blob.read_shift(2);\n\t\tvar v = o[1].v >> 1;\n\t\tif(o[1].v & 0x1) {\n\t\t\tswitch(v & 0x07) {\n\t\t\t\tcase 0: v = (v >> 3) * 5000; break;\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\n\t\t\t\tcase 3: v = (v >> 3) / 200; break;\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\n\t\t\t\tcase 5: v = (v >> 3) / 20000; break;\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\n\t\t\t}\n\t\t}\n\t\to[1].v = v;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_17(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\tvar v2 = blob.read_shift(4);\n\t\tvar e = blob.read_shift(2);\n\t\tif(e == 0xFFFF) {\n\t\t\tif(v1 === 0 && v2 === 0xC0000000) { o[1].t = \"e\"; o[1].v = 0x0F; } // ERR -> #VALUE!\n\t\t\telse if(v1 === 0 && v2 === 0xD0000000) { o[1].t = \"e\"; o[1].v = 0x2A; } // NA -> #N/A\n\t\t\telse o[1].v = 0;\n\t\t\treturn o;\n\t\t}\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\n\t\to[1].v = (1 - s*2) * (v2 * Math.pow(2, e+32) + v1 * Math.pow(2, e));\n\t\treturn o;\n\t}\n\tfunction write_NUMBER_17(R, C, wsidx, v) {\n\t\tvar o = new_buf(14);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\tif(v == 0) {\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(2, 0xFFFF);\n\t\t\treturn o;\n\t\t}\n\t\tvar s = 0, e = 0, v1 = 0, v2 = 0;\n\t\tif(v < 0) { s = 1; v = -v; }\n\t\te = Math.log2(v) | 0;\n\t\tv /= Math.pow(2, e-31);\n\t\tv2 = (v)>>>0;\n\t\tif((v2&0x80000000) == 0) { v/=2; ++e; v2 = v >>> 0; }\n\t\tv -= v2;\n\t\tv2 |= 0x80000000;\n\t\tv2 >>>= 0;\n\t\tv *= Math.pow(2, 32);\n\t\tv1 = v>>>0;\n\t\to.write_shift(4, v1);\n\t\to.write_shift(4, v2);\n\t\te += 0x3FFF + (s ? 0x8000 : 0);\n\t\to.write_shift(2, e);\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_19(blob, length) {\n\t\tvar o = parse_NUMBER_17(blob, 14);\n\t\tblob.l += length - 14; /* TODO: WK3 formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_25(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\to[1].v = v1 >> 6;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_27(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(8,'f');\n\t\to[1].v = v1;\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_28(blob, length) {\n\t\tvar o = parse_NUMBER_27(blob, 14);\n\t\tblob.l += length - 10; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETNAMECS(blob, length) {\n\t\treturn blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n\t}\n\n\tfunction parse_SHEETNAMELP(blob, length) {\n\t\tvar len = blob[blob.l++];\n\t\tif(len > length - 1) len = length - 1;\n\t\tvar o = \"\"; while(o.length < len) o += String.fromCharCode(blob[blob.l++]);\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETINFOQP(blob, length, opts) {\n\t\tif(!opts.qpro || length < 21) return;\n\t\tvar id = blob.read_shift(1);\n\t\tblob.l += 17;\n\t\tvar len = blob.read_shift(1);\n\t\tblob.l += 2;\n\t\tvar nm = blob.read_shift(length - 21, 'cstr');\n\t\treturn [id, nm];\n\t}\n\n\tfunction parse_XFORMAT(blob, length) {\n\t\tvar o = {}, tgt = blob.l + length;\n\t\twhile(blob.l < tgt) {\n\t\t\tvar dt = blob.read_shift(2);\n\t\t\tif(dt == 0x36b0) {\n\t\t\t\to[dt] = [0, \"\"];\n\t\t\t\to[dt][0] = blob.read_shift(2);\n\t\t\t\twhile(blob[blob.l]) { o[dt][1] += String.fromCharCode(blob[blob.l]); blob.l++; } blob.l++;\n\t\t\t}\n\t\t\t// TODO: 0x3a99 ??\n\t\t}\n\t\treturn o;\n\t}\n\tfunction write_XFORMAT_SHEETNAME(name, wsidx) {\n\t\tvar out = new_buf(5 + name.length);\n\t\tout.write_shift(2, 0x36b0);\n\t\tout.write_shift(2, wsidx);\n\t\tfor(var i = 0; i < name.length; ++i) {\n\t\t\tvar cc = name.charCodeAt(i);\n\t\t\tout[out.l++] = cc > 0x7F ? 0x5F : cc;\n\t\t}\n\t\tout[out.l++] = 0;\n\t\treturn out;\n\t}\n\n\tvar WK1Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\", f:parseuint16 },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"CALCMODE\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCORDER\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"SPLIT\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SYNC\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"RANGE\", f:parse_RANGE },\n\t\t/*::[*/0x0007/*::]*/: { n:\"WINDOW1\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"COLW1\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"WINTWO\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"COLW2\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"NAME\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"BLANK\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"INTEGER\", f:parse_INTEGER },\n\t\t/*::[*/0x000E/*::]*/: { n:\"NUMBER\", f:parse_NUMBER },\n\t\t/*::[*/0x000F/*::]*/: { n:\"LABEL\", f:parse_LABEL },\n\t\t/*::[*/0x0010/*::]*/: { n:\"FORMULA\", f:parse_FORMULA },\n\t\t/*::[*/0x0018/*::]*/: { n:\"TABLE\" },\n\t\t/*::[*/0x0019/*::]*/: { n:\"ORANGE\" },\n\t\t/*::[*/0x001A/*::]*/: { n:\"PRANGE\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"SRANGE\" },\n\t\t/*::[*/0x001C/*::]*/: { n:\"FRANGE\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"KRANGE1\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"HRANGE\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"KRANGE2\" },\n\t\t/*::[*/0x0024/*::]*/: { n:\"PROTEC\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"FOOTER\" },\n\t\t/*::[*/0x0026/*::]*/: { n:\"HEADER\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"SETUP\" },\n\t\t/*::[*/0x0028/*::]*/: { n:\"MARGINS\" },\n\t\t/*::[*/0x0029/*::]*/: { n:\"LABELFMT\" },\n\t\t/*::[*/0x002A/*::]*/: { n:\"TITLES\" },\n\t\t/*::[*/0x002B/*::]*/: { n:\"SHEETJS\" },\n\t\t/*::[*/0x002D/*::]*/: { n:\"GRAPH\" },\n\t\t/*::[*/0x002E/*::]*/: { n:\"NGRAPH\" },\n\t\t/*::[*/0x002F/*::]*/: { n:\"CALCCOUNT\" },\n\t\t/*::[*/0x0030/*::]*/: { n:\"UNFORMATTED\" },\n\t\t/*::[*/0x0031/*::]*/: { n:\"CURSORW12\" },\n\t\t/*::[*/0x0032/*::]*/: { n:\"WINDOW\" },\n\t\t/*::[*/0x0033/*::]*/: { n:\"STRING\", f:parse_LABEL },\n\t\t/*::[*/0x0037/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0038/*::]*/: { n:\"LOCKED\" },\n\t\t/*::[*/0x003C/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x003D/*::]*/: { n:\"QUERYNAME\" },\n\t\t/*::[*/0x003E/*::]*/: { n:\"PRINT\" },\n\t\t/*::[*/0x003F/*::]*/: { n:\"PRINTNAME\" },\n\t\t/*::[*/0x0040/*::]*/: { n:\"GRAPH2\" },\n\t\t/*::[*/0x0041/*::]*/: { n:\"GRAPHNAME\" },\n\t\t/*::[*/0x0042/*::]*/: { n:\"ZOOM\" },\n\t\t/*::[*/0x0043/*::]*/: { n:\"SYMSPLIT\" },\n\t\t/*::[*/0x0044/*::]*/: { n:\"NSROWS\" },\n\t\t/*::[*/0x0045/*::]*/: { n:\"NSCOLS\" },\n\t\t/*::[*/0x0046/*::]*/: { n:\"RULER\" },\n\t\t/*::[*/0x0047/*::]*/: { n:\"NNAME\" },\n\t\t/*::[*/0x0048/*::]*/: { n:\"ACOMM\" },\n\t\t/*::[*/0x0049/*::]*/: { n:\"AMACRO\" },\n\t\t/*::[*/0x004A/*::]*/: { n:\"PARSE\" },\n\t\t/*::[*/0x0066/*::]*/: { n:\"PRANGES??\" },\n\t\t/*::[*/0x0067/*::]*/: { n:\"RRANGES??\" },\n\t\t/*::[*/0x0068/*::]*/: { n:\"FNAME??\" },\n\t\t/*::[*/0x0069/*::]*/: { n:\"MRANGES??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00DE/*::]*/: { n:\"SHEETNAMELP\", f:parse_SHEETNAMELP },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\n\tvar WK3Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\" },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCSET\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"WINDOWSET\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SHEETCELLPTR\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"SHEETLAYOUT\" },\n\t\t/*::[*/0x0007/*::]*/: { n:\"COLUMNWIDTH\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"HIDDENCOLUMN\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"USERRANGE\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"SYSTEMRANGE\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"ZEROFORCE\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"SORTKEYDIR\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"FILESEAL\" },\n\t\t/*::[*/0x000E/*::]*/: { n:\"DATAFILLNUMS\" },\n\t\t/*::[*/0x000F/*::]*/: { n:\"PRINTMAIN\" },\n\t\t/*::[*/0x0010/*::]*/: { n:\"PRINTSTRING\" },\n\t\t/*::[*/0x0011/*::]*/: { n:\"GRAPHMAIN\" },\n\t\t/*::[*/0x0012/*::]*/: { n:\"GRAPHSTRING\" },\n\t\t/*::[*/0x0013/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0014/*::]*/: { n:\"ERRCELL\" },\n\t\t/*::[*/0x0015/*::]*/: { n:\"NACELL\" },\n\t\t/*::[*/0x0016/*::]*/: { n:\"LABEL16\", f:parse_LABEL_16},\n\t\t/*::[*/0x0017/*::]*/: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n\t\t/*::[*/0x0018/*::]*/: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n\t\t/*::[*/0x0019/*::]*/: { n:\"FORMULA19\", f:parse_FORMULA_19},\n\t\t/*::[*/0x001A/*::]*/: { n:\"FORMULA1A\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"XFORMAT\", f:parse_XFORMAT },\n\t\t/*::[*/0x001C/*::]*/: { n:\"DTLABELMISC\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"DTLABELCELL\" },\n\t\t/*::[*/0x001E/*::]*/: { n:\"GRAPHWINDOW\" },\n\t\t/*::[*/0x001F/*::]*/: { n:\"CPA\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"LPLAUTO\" },\n\t\t/*::[*/0x0021/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x0022/*::]*/: { n:\"HIDDENSHEET\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n\t\t/*::[*/0x0026/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n\t\t/*::[*/0x0028/*::]*/: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n\t\t/*::[*/0x008E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0093/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0096/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0097/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0098/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0099/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00A3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B1/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B8/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BA/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BB/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BC/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00CD/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00D0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0100/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0103/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0104/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0105/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0106/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0107/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0109/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010F/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0180/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0185/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0186/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0189/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x018C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0200/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0202/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0201/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0204/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0205/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0280/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0281/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0282/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0283/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0284/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0285/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0286/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0287/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0288/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0292/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0293/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0294/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0295/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0296/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0299/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x029A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0300/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0304/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0601/*::]*/: { n:\"SHEETINFOQP\", f:parse_SHEETINFOQP },\n\t\t/*::[*/0x0640/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0642/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0701/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0702/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0703/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0704/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0780/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0800/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0801/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0804/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0A80/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x2AF6/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x3231/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6E49/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6F44/*::]*/: { n:\"??\" },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\treturn {\n\t\tsheet_to_wk1: sheet_to_wk1,\n\t\tbook_to_wk3: book_to_wk3,\n\t\tto_workbook: lotus_to_workbook\n\t};\n})();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n\tvar font = {}, m = rpr.match(tagregex), i = 0;\n\tvar pass = false;\n\tif(m) for(;i!=m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(y[0].replace(/\\w*:/g,\"\")) {\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<condense': break;\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<extend': break;\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<shadow':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<shadow>':\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\t\t\tcase '</shadow>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\tfont.cp = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\tcase '<outline':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<outline>':\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\t\t\tcase '</outline>': break;\n\n\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<strike>':\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\tcase '</strike>': break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tif(!y.val) break;\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\n\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\n\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '<u>':\n\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\tcase '</u>': break;\n\n\t\t\t/* 18.8.2 b */\n\t\t\tcase '<b':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<b>':\n\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\tcase '</b>': break;\n\n\t\t\t/* 18.8.26 i */\n\t\t\tcase '<i':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<i>':\n\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\tcase '</i>': break;\n\n\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\tcase '<color':\n\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\n\t\t\t\tbreak;\n\t\t\tcase '<color>': case '<color/>': case '</color>': break;\n\n\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\tcase '<family': font.family = y.val; break;\n\t\t\tcase '<family>': case '<family/>': case '</family>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\tcase '<vertAlign': font.valign = y.val; break;\n\t\t\tcase '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\tcase '<scheme': break;\n\t\t\tcase '<scheme>': case '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault:\n\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t}\n\t}\n\treturn font;\n}\n\nvar parse_rs = (function() {\n\tvar tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\");\n\t/* 18.4.4 r CT_RElt */\n\tfunction parse_r(r) {\n\t\t/* 18.4.12 t ST_Xstring */\n\t\tvar t = r.match(tregex)/*, cp = 65001*/;\n\t\tif(!t) return {t:\"s\", v:\"\"};\n\n\t\tvar o/*:Cell*/ = ({t:'s', v:unescapexml(t[1])}/*:any*/);\n\t\tvar rpr = r.match(rpregex);\n\t\tif(rpr) o.s = parse_rpr(rpr[1]);\n\t\treturn o;\n\t}\n\tvar rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/;\n\treturn function parse_rs(rs) {\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).filter(function(r) { return r.v; });\n\t};\n})();\n\n\n/* Parse a list of <r> tags */\nvar rs_to_html = (function parse_rs_factory() {\n\tvar nlregex = /(\\r\\n|\\n)/g;\n\tfunction parse_rpr2(font, intro, outro) {\n\t\tvar style/*:Array<string>*/ = [];\n\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n\t\tvar align = font.valign || \"\";\n\t\tif(align == \"superscript\" || align == \"super\") align = \"sup\";\n\t\telse if(align == \"subscript\") align = \"sub\";\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n\t\toutro.push(\"</span>\");\n\t\treturn font;\n\t}\n\n\t/* 18.4.4 r CT_RElt */\n\tfunction r_to_html(r) {\n\t\tvar terms/*:[Array<string>, string, Array<string>]*/ = [[],r.v,[]];\n\t\tif(!r.v) return \"\";\n\n\t\tif(r.s) parse_rpr2(r.s, terms[0], terms[2]);\n\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n\t}\n\n\treturn function parse_rs(rs) {\n\t\treturn rs.map(r_to_html).join(\"\");\n\t};\n})();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n\tvar html = opts ? opts.cellHTML : true;\n\tvar z = {};\n\tif(!x) return { t: \"\" };\n\t//var y;\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t// TODO: is whitespace actually valid here?\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"));\n\t\tz.r = utf8read(x);\n\t\tif(html) z.h = escapehtml(z.t);\n\t}\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\telse if((/*y = */x.match(sirregex))) {\n\t\tz.r = utf8read(x);\n\t\tz.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")));\n\t\tif(html) z.h = rs_to_html(parse_rs(z.r));\n\t}\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\treturn z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data/*:string*/, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/), ss = \"\";\n\tif(!data) return s;\n\t/* 18.4.9 sst CT_Sst */\n\tvar sst = data.match(sstr0);\n\tif(sst) {\n\t\tss = sst[2].replace(sstr1,\"\").split(sstr2);\n\t\tfor(var i = 0; i != ss.length; ++i) {\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\n\t\t\tif(o != null) s[s.length] = o;\n\t\t}\n\t\tsst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\n\t}\n\treturn s;\n}\n\nRELS.SST = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\";\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst/*:SST*/, opts)/*:string*/ {\n\tif(!opts.bookSST) return \"\";\n\tvar o = [XML_HEADER];\n\to[o.length] = (writextag('sst', null, {\n\t\txmlns: XMLNS.main[0],\n\t\tcount: sst.Count,\n\t\tuniqueCount: sst.Unique\n\t}));\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n\t\tvar s/*:XLString*/ = sst[i];\n\t\tvar sitag = \"<si>\";\n\t\tif(s.r) sitag += s.r;\n\t\telse {\n\t\t\tsitag += \"<t\";\n\t\t\tif(!s.t) s.t = \"\";\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\n\t\t}\n\t\tsitag += \"</si>\";\n\t\to[o.length] = (sitag);\n\t}\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n\treturn [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/);\n\tvar pass = false;\n\trecordhopper(data, function hopper_sst(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009F: /* 'BrtBeginSst' */\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\n\t\t\tcase 0x0013: /* 'BrtSSTItem' */\n\t\t\t\ts.push(val); break;\n\t\t\tcase 0x00A0: /* 'BrtEndSst' */\n\t\t\t\treturn true;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R_n.indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if(R_n.indexOf(\"End\") > 0){/* empty */}\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn s;\n}\n\nfunction write_BrtBeginSst(sst, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(4, sst.Count);\n\to.write_shift(4, sst.Unique);\n\treturn o;\n}\n\nvar write_BrtSSTItem = write_RichStr;\n\nfunction write_sst_bin(sst/*::, opts*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginSst\", write_BrtBeginSst(sst));\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, \"BrtSSTItem\", write_BrtSSTItem(sst[i]));\n\t/* FRTSST */\n\twrite_record(ba, \"BrtEndSst\");\n\treturn ba.end();\n}\nfunction _JS2ANSI(str/*:string*/)/*:Array<number>*/ {\n\tif(typeof cptable !== 'undefined') return cptable.utils.encode(current_ansi, str);\n\tvar o/*:Array<number>*/ = [], oo = str.split(\"\");\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length/*:?number*/) {\n\tvar o/*:any*/ = {};\n\to.Major = blob.read_shift(2);\n\to.Minor = blob.read_shift(2);\n\t/*:: if(length == null) return o; */\n\tif(length >= 4) blob.l += length - 4;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n\tvar o = {};\n\to.id = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n\tvar len = blob.read_shift(4);\n\tvar end = blob.l + len - 4;\n\tvar o = {};\n\tvar cnt = blob.read_shift(4);\n\tvar comps/*:Array<{t:number, v:string}>*/ = [];\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n\to.name = blob.read_shift(0, 'lpp4');\n\to.comps = comps;\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob)/*:Array<string>*/ {\n\tvar o/*:Array<string>*/ = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n\tvar o = {};\n\t/*var len = */blob.read_shift(4);\n\tblob.l += 4; // must be 0x1\n\to.id = blob.read_shift(0, 'lpp4');\n\to.name = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\nfunction parse_Primary(blob) {\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n\tvar hdr = parse_TransformInfoHeader(blob);\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n\thdr.ename = blob.read_shift(0, '8lpp4');\n\thdr.blksz = blob.read_shift(4);\n\thdr.cmode = blob.read_shift(4);\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n\treturn hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length/*:number*/) {\n\tvar tgt = blob.l + length;\n\tvar o = {};\n\to.Flags = (blob.read_shift(4) & 0x3F);\n\tblob.l += 4;\n\to.AlgID = blob.read_shift(4);\n\tvar valid = false;\n\tswitch(o.AlgID) {\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n\t}\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n\to.AlgIDHash = blob.read_shift(4);\n\to.KeySize = blob.read_shift(4);\n\to.ProviderType = blob.read_shift(4);\n\tblob.l += 8;\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n\tblob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length/*:number*/) {\n\tvar o = {}, tgt = blob.l + length;\n\tblob.l += 4; // SaltSize must be 0x10\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\t/*var sz = */blob.read_shift(4);\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n\tvar vers = parse_CRYPTOVersion(blob);\n\tswitch(vers.Minor) {\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n\t}\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob/*::, vers*/) {\n\tvar flags = blob.read_shift(4);\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n\tvar sz = blob.read_shift(4);\n\t//var tgt = blob.l + sz;\n\tvar hdr = parse_EncryptionHeader(blob, sz);\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n\treturn { t:\"Std\", h:hdr, v:verifier };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt(/*::blob, vers*/) { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob/*::, vers*/) {\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n\tblob.l+=4;\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\n\tvar o = {};\n\txml.replace(tagregex, function xml_agile(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<encryption': case '</encryption>': break;\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n\t\t\tcase '</keyEncryptors>': break;\n\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\n\t\t\tcase '</keyEncryptor>': break;\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\n\t\t\tdefault: throw y[0];\n\t\t}\n\t});\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length/*:number*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n\to.Flags = blob.read_shift(4); length -= 4;\n\tvar sz = blob.read_shift(4); length -= 4;\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n\treturn o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob/*::, length*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n\to.Salt = blob.read_shift(16);\n\to.EncryptedVerifier = blob.read_shift(16);\n\to.EncryptedVerifierHash = blob.read_shift(16);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password/*:string*/) {\n\tvar Verifier = 0x0000, PasswordArray;\n\tvar PasswordDecoded = _JS2ANSI(Password);\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\n\tvar Intermediate1, Intermediate2, Intermediate3;\n\tPasswordArray = new_raw_buf(len);\n\tPasswordArray[0] = PasswordDecoded.length;\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n\tfor(i = len-1; i >= 0; --i) {\n\t\tPasswordByte = PasswordArray[i];\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\n\t\tVerifier = Intermediate3 ^ PasswordByte;\n\t}\n\treturn Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = (function() {\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n\tvar CreateXorKey_Method1 = function(Password) {\n\t\tvar XorKey = InitialCode[Password.length - 1];\n\t\tvar CurrentElement = 0x68;\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\n\t\t\tvar Char = Password[i];\n\t\t\tfor(var j = 0; j != 7; ++j) {\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n\t\t\t\tChar *= 2; --CurrentElement;\n\t\t\t}\n\t\t}\n\t\treturn XorKey;\n\t};\n\treturn function(password/*:string*/) {\n\t\tvar Password = _JS2ANSI(password);\n\t\tvar XorKey = CreateXorKey_Method1(Password);\n\t\tvar Index = Password.length;\n\t\tvar ObfuscationArray = new_raw_buf(16);\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n\t\tvar Temp, PasswordLastChar, PadIndex;\n\t\tif((Index & 1) === 1) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tPasswordLastChar = Password[Password.length - 1];\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n\t\t}\n\t\twhile(Index > 0) {\n\t\t\t--Index;\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t}\n\t\tIndex = 15;\n\t\tPadIndex = 15 - Password.length;\n\t\twhile(PadIndex > 0) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t}\n\t\treturn ObfuscationArray;\n\t};\n})();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function(password/*:string*/, Data, XorArrayIndex, XorArray, O) {\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\n\tif(!O) O = Data;\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n\tvar Index, Value;\n\tfor(Index = 0; Index != Data.length; ++Index) {\n\t\tValue = Data[Index];\n\t\tValue ^= XorArray[XorArrayIndex];\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\n\t\tO[Index] = Value;\n\t\t++XorArrayIndex;\n\t}\n\treturn [O, XorArrayIndex, XorArray];\n};\n\nvar crypto_MakeXorDecryptor = function(password/*:string*/) {\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n\treturn function(Data) {\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n\t\tXorArrayIndex = O[1];\n\t\treturn O[0];\n\t};\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) }/*:any*/);\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n\tout.valid = o.verificationBytes === o.verifier;\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n\treturn o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length/*:number*/, oo) {\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\n\treturn o;\n}\nfunction parse_FilePass(blob, length/*:number*/, opts) {\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }/*:any*/); /* wEncryptionType */\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n\treturn o;\n}\n\n\nvar RTF = (function() {\n\tfunction rtf_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return rtf_to_sheet_str(Base64.decode(d), opts);\n\t\t\tcase 'binary': return rtf_to_sheet_str(d, opts);\n\t\t\tcase 'buffer': return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array':  return rtf_to_sheet_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\n\t/* TODO: this is a stub */\n\tfunction rtf_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar ws/*:Worksheet*/ = o.dense ? ([]/*:any*/) : ({}/*:any*/);\n\n\t\tvar rows = str.match(/\\\\trowd.*?\\\\row\\b/g);\n\t\tif(!rows.length) throw new Error(\"RTF missing table\");\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:rows.length - 1}}/*:any*/);\n\t\trows.forEach(function(rowtf, R) {\n\t\t\tif(Array.isArray(ws)) ws[R] = [];\n\t\t\tvar rtfre = /\\\\\\w+\\b/g;\n\t\t\tvar last_index = 0;\n\t\t\tvar res;\n\t\t\tvar C = -1;\n\t\t\twhile((res = rtfre.exec(rowtf))) {\n\t\t\t\tswitch(res[0]) {\n\t\t\t\t\tcase \"\\\\cell\":\n\t\t\t\t\t\tvar data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n\t\t\t\t\t\tif(data[0] == \" \") data = data.slice(1);\n\t\t\t\t\t\t++C;\n\t\t\t\t\t\tif(data.length) {\n\t\t\t\t\t\t\t// TODO: value parsing, including codepage adjustments\n\t\t\t\t\t\t\tvar cell = {v: data, t:\"s\"};\n\t\t\t\t\t\t\tif(Array.isArray(ws)) ws[R][C] = cell;\n\t\t\t\t\t\t\telse ws[encode_cell({r:R, c:C})] = cell;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlast_index = rtfre.lastIndex;\n\t\t\t}\n\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t});\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction rtf_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }\n\n\t/* TODO: this is a stub */\n\tfunction sheet_to_rtf(ws/*:Worksheet*//*::, opts*/)/*:string*/ {\n\t\tvar o = [\"{\\\\rtf1\\\\ansi\"];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\to.push(\"\\\\trowd\\\\trautofit1\");\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C+1));\n\t\t\to.push(\"\\\\pard\\\\intbl\");\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || cell.v == null && (!cell.f || cell.F)) continue;\n\t\t\t\to.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\n\t\t\t\to.push(\"\\\\cell\");\n\t\t\t}\n\t\t\to.push(\"\\\\pard\\\\intbl\\\\row\");\n\t\t}\n\t\treturn o.join(\"\") + \"}\";\n\t}\n\n\treturn {\n\t\tto_workbook: rtf_to_workbook,\n\t\tto_sheet: rtf_to_sheet,\n\t\tfrom_sheet: sheet_to_rtf\n\t};\n})();\nfunction hex2RGB(h) {\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n}\nfunction rgb2Hex(rgb) {\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n\treturn o.toString(16).toUpperCase().slice(1);\n}\n\nfunction rgb2HSL(rgb) {\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n\tif(C === 0) return [0, 0, R];\n\n\tvar H6 = 0, S = 0, L2 = (M + m);\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\n\tswitch(M){\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\n\t\tcase G: H6 = ((B - R) / C + 2); break;\n\t\tcase B: H6 = ((R - G) / C + 4); break;\n\t}\n\treturn [H6 / 6, S, L2 / 2];\n}\n\nfunction hsl2RGB(hsl){\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n\tvar rgb = [m,m,m], h6 = 6*H;\n\n\tvar X;\n\tif(S !== 0) switch(h6|0) {\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n\t}\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n\treturn rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n\tif(tint === 0) return hex;\n\tvar hsl = rgb2HSL(hex2RGB(hex));\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n\treturn rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n\tMDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll/*:ColInfo*/) {\n\tif(coll.width) {\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.MDW = MDW;\n\t} else if(coll.wpx) {\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.MDW = MDW;\n\t} else if(typeof coll.wch == 'number') {\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.MDW = MDW;\n\t}\n\tif(coll.customWidth) delete coll.customWidth;\n}\n\nvar DEF_PPI = 96, PPI = DEF_PPI;\nfunction px2pt(px) { return px * 96 / PPI; }\nfunction pt2px(pt) { return pt * PPI / 96; }\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n\t\"None\": \"none\",\n\t\"Solid\": \"solid\",\n\t\"Gray50\": \"mediumGray\",\n\t\"Gray75\": \"darkGray\",\n\t\"Gray25\": \"lightGray\",\n\t\"HorzStripe\": \"darkHorizontal\",\n\t\"VertStripe\": \"darkVertical\",\n\t\"ReverseDiagStripe\": \"darkDown\",\n\t\"DiagStripe\": \"darkUp\",\n\t\"DiagCross\": \"darkGrid\",\n\t\"ThickDiagCross\": \"darkTrellis\",\n\t\"ThinHorzStripe\": \"lightHorizontal\",\n\t\"ThinVertStripe\": \"lightVertical\",\n\t\"ThinReverseDiagStripe\": \"lightDown\",\n\t\"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n\tstyles.Borders = [];\n\tvar border = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\n\n\t\t\t/* 18.8.4 border CT_Border */\n\t\t\tcase '<border': case '<border>': case '<border/>':\n\t\t\t\tborder = /*::(*/{}/*:: :any)*/;\n\t\t\t\tif(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n\t\t\t\tif(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n\t\t\t\tstyles.Borders.push(border);\n\t\t\t\tbreak;\n\t\t\tcase '</border>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<left/>': break;\n\t\t\tcase '<left': case '<left>': break;\n\t\t\tcase '</left>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<right/>': break;\n\t\t\tcase '<right': case '<right>': break;\n\t\t\tcase '</right>': break;\n\n\t\t\t/* 18.8.43 top CT_BorderPr */\n\t\t\tcase '<top/>': break;\n\t\t\tcase '<top': case '<top>': break;\n\t\t\tcase '</top>': break;\n\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\n\t\t\tcase '<bottom/>': break;\n\t\t\tcase '<bottom': case '<bottom>': break;\n\t\t\tcase '</bottom>': break;\n\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n\t\t\tcase '</diagonal>': break;\n\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n\t\t\tcase '</horizontal>': break;\n\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\n\t\t\tcase '</vertical>': break;\n\n\t\t\t/* 18.8.37 start CT_BorderPr */\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\n\t\t\tcase '</start>': break;\n\n\t\t\t/* 18.8.16 end CT_BorderPr */\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\n\t\t\tcase '</end>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color>':\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n\tstyles.Fills = [];\n\tvar fill = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\n\n\t\t\t/* 18.8.20 fill CT_Fill */\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\n\t\t\tcase '</fill>': break;\n\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\n\t\t\tcase '<gradientFill>': break;\n\t\t\tcase '<gradientFill':\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\n\t\t\tcase '<patternFill': case '<patternFill>':\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\n\t\t\t\tbreak;\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\n\n\t\t\t/* 18.8.3 bgColor CT_Color */\n\t\t\tcase '<bgColor':\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\n\n\t\t\t/* 18.8.19 fgColor CT_Color */\n\t\t\tcase '<fgColor':\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\n\n\t\t\t/* 18.8.38 stop CT_GradientStop */\n\t\t\tcase '<stop': case '<stop/>': break;\n\t\t\tcase '</stop>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color/>': break;\n\t\t\tcase '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n\tstyles.Fonts = [];\n\tvar font = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\n\n\t\t\t/* 18.8.22 font CT_Font */\n\t\t\tcase '<font': case '<font>': break;\n\t\t\tcase '</font>': case '<font/>':\n\t\t\t\tstyles.Fonts.push(font);\n\t\t\t\tfont = {};\n\t\t\t\tbreak;\n\n\t\t\t/* 18.8.29 name CT_FontName */\n\t\t\tcase '<name': if(y.val) font.name = utf8read(y.val); break;\n\t\t\tcase '<name/>': case '</name>': break;\n\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<b/>': font.bold = 1; break;\n\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<i/>': font.italic = 1; break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\n\t\t\t\t} break;\n\t\t\tcase '<u/>': font.underline = 1; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<condense/>': font.condense = 1; break;\n\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<extend/>': font.extend = 1; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\n\t\t\tcase '<sz/>': case '</sz>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.18 family CT_FontFamily */\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\n\t\t\tcase '<family/>': case '</family>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\n\t\t\tcase '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.?.? color CT_Color */\n\t\t\tcase '<color':\n\t\t\t\tif(!font.color) font.color = {};\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\n\t\t\t\telse if(y.indexed) {\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\n\t\t\t\t\tif(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n\t\t\t\t} else if(y.theme) {\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n\tstyles.NumberFmt = [];\n\tvar k/*Array<number>*/ = (keys(SSF._table)/*:any*/);\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = SSF._table[k[i]];\n\tvar m = t[0].match(tagregex);\n\tif(!m) return;\n\tfor(i=0; i < m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n\t\t\tcase '<numFmt': {\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tif(j > 0x188) {\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\t\t}\n\t\t\t\t\tSSF.load(f,j);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase '</numFmt>': break;\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n\t\t}\n\t}\n}\n\nfunction write_numFmts(NF/*:{[n:number|string]:string}*//*::, opts*/) {\n\tvar o = [\"<numFmts>\"];\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n\t});\n\tif(o.length === 1) return \"\";\n\to[o.length] = (\"</numFmts>\");\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\nfunction parse_cellXfs(t, styles, opts) {\n\tstyles.CellXf = [];\n\tvar xf;\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x), i = 0;\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n\t\t\t/* 18.8.45 xf CT_Xf */\n\t\t\tcase '<xf': case '<xf/>':\n\t\t\t\txf = y;\n\t\t\t\tdelete xf[0];\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n\t\t\t\tif(styles.NumberFmt && xf.numFmtId > 0x188) {\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n\t\t\t\t}\n\t\t\t\tstyles.CellXf.push(xf); break;\n\t\t\tcase '</xf>': break;\n\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\n\t\t\tcase '<alignment': case '<alignment/>':\n\t\t\t\tvar alignment = {};\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\n\t\t\t\tif(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n\t\t\t\txf.alignment = alignment;\n\t\t\t\tbreak;\n\t\t\tcase '</alignment>': break;\n\n\t\t\t/* 18.8.33 protection CT_CellProtection */\n\t\t\tcase '<protection':\n\t\t\t\tbreak;\n\t\t\tcase '</protection>': case '<protection/>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction write_cellXfs(cellXfs)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\to[o.length] = (writextag('cellXfs',null));\n\tcellXfs.forEach(function(c) {\n\t\to[o.length] = (writextag('xf', null, c));\n\t});\n\to[o.length] = (\"</cellXfs>\");\n\tif(o.length === 2) return \"\";\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml= (function make_pstyx() {\nvar numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\nvar cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\nvar fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\nvar fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\nvar bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n\nreturn function parse_sty_xml(data, themes, opts) {\n\tvar styles = {};\n\tif(!data) return styles;\n\tdata = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t/* 18.8.39 styleSheet CT_Stylesheet */\n\tvar t;\n\n\t/* 18.8.31 numFmts CT_NumFmts ? */\n\tif((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\n\n\t/* 18.8.23 fonts CT_Fonts ? */\n\tif((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\n\n\t/* 18.8.21 fills CT_Fills ? */\n\tif((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\n\n\t/* 18.8.5  borders CT_Borders ? */\n\tif((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\n\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\n\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\n\tif((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\n\n\t/* 18.8.15 dxfs CT_Dxfs ? */\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\n\t/* 18.8.11 colors CT_Colors ? */\n\t/* 18.2.10 extLst CT_ExtensionList ? */\n\n\treturn styles;\n};\n})();\n\nvar STYLES_XML_ROOT = writextag('styleSheet', null, {\n\t'xmlns': XMLNS.main[0],\n\t'xmlns:vt': XMLNS.vt\n});\n\nRELS.STY = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\";\n\nfunction write_sty_xml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o = [XML_HEADER, STYLES_XML_ROOT], w;\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n\to[o.length] = ('<dxfs count=\"0\"/>');\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length/*:number*/) {\n\tvar numFmtId = data.read_shift(2);\n\tvar stFmtCode = parse_XLWideString(data,length-2);\n\treturn [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i/*:number*/, f/*:string*/, o) {\n\tif(!o) o = new_buf(6 + 4 * f.length);\n\to.write_shift(2, i);\n\twrite_XLWideString(f, o);\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(o.l == null) o.l = o.length;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length/*:number*/, opts) {\n\tvar out = ({}/*:any*/);\n\n\tout.sz = data.read_shift(2) / 20;\n\n\tvar grbit = parse_FontFlags(data, 2, opts);\n\tif(grbit.fItalic) out.italic = 1;\n\tif(grbit.fCondense) out.condense = 1;\n\tif(grbit.fExtend) out.extend = 1;\n\tif(grbit.fShadow) out.shadow = 1;\n\tif(grbit.fOutline) out.outline = 1;\n\tif(grbit.fStrikeout) out.strike = 1;\n\n\tvar bls = data.read_shift(2);\n\tif(bls === 0x02BC) out.bold = 1;\n\n\tswitch(data.read_shift(2)) {\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\n\t}\n\n\tvar underline = data.read_shift(1);\n\tif(underline != 0) out.underline = underline;\n\n\tvar family = data.read_shift(1);\n\tif(family > 0) out.family = family;\n\n\tvar bCharSet = data.read_shift(1);\n\tif(bCharSet > 0) out.charset = bCharSet;\n\n\tdata.l++;\n\tout.color = parse_BrtColor(data, 8);\n\n\tswitch(data.read_shift(1)) {\n\t\t/* case 0: out.scheme = \"none\": break; */\n\t\tcase 1: out.scheme = \"major\"; break;\n\t\tcase 2: out.scheme = \"minor\"; break;\n\t}\n\n\tout.name = parse_XLWideString(data, length - 21);\n\n\treturn out;\n}\nfunction write_BrtFont(font/*:any*/, o) {\n\tif(!o) o = new_buf(25+4*32);\n\to.write_shift(2, font.sz * 20);\n\twrite_FontFlags(font, o);\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\n\tvar sss = 0;\n\tif(font.vertAlign == \"superscript\") sss = 1;\n\telse if(font.vertAlign == \"subscript\") sss = 2;\n\to.write_shift(2, sss);\n\to.write_shift(1, font.underline || 0);\n\to.write_shift(1, font.family || 0);\n\to.write_shift(1, font.charset || 0);\n\to.write_shift(1, 0);\n\twrite_BrtColor(font.color, o);\n\tvar scheme = 0;\n\tif(font.scheme == \"major\") scheme = 1;\n\tif(font.scheme == \"minor\") scheme = 2;\n\to.write_shift(1, scheme);\n\twrite_XLWideString(font.name, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\n\t\"none\",\n\t\"solid\",\n\t\"mediumGray\",\n\t\"darkGray\",\n\t\"lightGray\",\n\t\"darkHorizontal\",\n\t\"darkVertical\",\n\t\"darkDown\",\n\t\"darkUp\",\n\t\"darkGrid\",\n\t\"darkTrellis\",\n\t\"lightHorizontal\",\n\t\"lightVertical\",\n\t\"lightDown\",\n\t\"lightUp\",\n\t\"lightGrid\",\n\t\"lightTrellis\",\n\t\"gray125\",\n\t\"gray0625\"\n];\nvar rev_XLSBFillPTNames/*:EvertNumType*/ = (evert(XLSBFillPTNames)/*:any*/);\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\n\tvar fls/*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n\tif(fls == null) fls = 0x28;\n\to.write_shift(4, fls);\n\tvar j = 0;\n\tif(fls != 0x28) {\n\t\t/* TODO: custom FG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\t\t/* TODO: custom BG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\n\t} else {\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n\t\t/* iGradientType */\n\t\t/* xnumDegree */\n\t\t/* xnumFillToLeft */\n\t\t/* xnumFillToRight */\n\t\t/* xnumFillToTop */\n\t\t/* xnumFillToBottom */\n\t\t/* cNumStop */\n\t\t/* xfillGradientStop */\n\t}\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length/*:number*/) {\n\tvar tgt = data.l + length;\n\tvar ixfeParent = data.read_shift(2);\n\tvar ifmt = data.read_shift(2);\n\tdata.l = tgt;\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(2, ixfeP||0);\n\to.write_shift(2, data.numFmtId||0);\n\to.write_shift(2, 0); /* iFont */\n\to.write_shift(2, 0); /* iFill */\n\to.write_shift(2, 0); /* ixBorder */\n\to.write_shift(1, 0); /* trot */\n\to.write_shift(1, 0); /* indent */\n\tvar flow = 0;\n\to.write_shift(1, flow); /* flags */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* xfGrbitAtr */\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n\tif(!o) o = new_buf(10);\n\to.write_shift(1, 0); /* dg */\n\to.write_shift(1, 0);\n\to.write_shift(4, 0); /* color */\n\to.write_shift(4, 0); /* color */\n\treturn o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n\tif(!o) o = new_buf(51);\n\to.write_shift(1, 0); /* diagonal */\n\twrite_Blxf(null, o); /* top */\n\twrite_Blxf(null, o); /* bottom */\n\twrite_Blxf(null, o); /* left */\n\twrite_Blxf(null, o); /* right */\n\twrite_Blxf(null, o); /* diag */\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n\tif(!o) o = new_buf(12+4*10);\n\to.write_shift(4, style.xfId);\n\to.write_shift(2, 1);\n\to.write_shift(1, +style.builtinId);\n\to.write_shift(1, 0); /* iLevel */\n\twrite_XLNullableWideString(style.name || \"\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n\tvar o = new_buf(4+256*2*4);\n\to.write_shift(4, cnt);\n\twrite_XLNullableWideString(defTableStyle, o);\n\twrite_XLNullableWideString(defPivotStyle, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n\tvar styles = {};\n\tstyles.NumberFmt = ([]/*:any*/);\n\tfor(var y in SSF._table) styles.NumberFmt[y] = SSF._table[y];\n\n\tstyles.CellXf = [];\n\tstyles.Fonts = [];\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_sty(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x002C: /* 'BrtFmt' */\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF.load(val[1], val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x002B: /* 'BrtFont' */\n\t\t\t\tstyles.Fonts.push(val);\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0401: /* 'BrtKnownFonts' */ break;\n\t\t\tcase 0x002D: /* 'BrtFill' */\n\t\t\t\tbreak;\n\t\t\tcase 0x002E: /* 'BrtBorder' */\n\t\t\t\tbreak;\n\t\t\tcase 0x002F: /* 'BrtXF' */\n\t\t\t\tif(state[state.length - 1] == \"BrtBeginCellXFs\") {\n\t\t\t\t\tstyles.CellXf.push(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0030: /* 'BrtStyle' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x023C: /* 'BrtMRUColor' */\n\t\t\tcase 0x01DB: /* 'BrtIndexedColor': */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0493: /* 'BrtDXF14' */\n\t\t\tcase 0x0836: /* 'BrtDXF15' */\n\t\t\tcase 0x046A: /* 'BrtSlicerStyleElement' */\n\t\t\tcase 0x0200: /* 'BrtTableStyleElement' */\n\t\t\tcase 0x082F: /* 'BrtTimelineStyleElement' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != \"BrtACBegin\")) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn styles;\n}\n\nfunction write_FMTS_bin(ba, NF/*:?SSFTable*/) {\n\tif(!NF) return;\n\tvar cnt = 0;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n\t});\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginFmts\", write_UInt32LE(cnt));\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, \"BrtFmt\", write_BrtFmt(i, NF[i]));\n\t});\n\twrite_record(ba, \"BrtEndFmts\");\n}\n\nfunction write_FONTS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginFonts\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtFont\", write_BrtFont({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Calibri\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}));\n\t/* 1*65491BrtFont [ACFONTS] */\n\twrite_record(ba, \"BrtEndFonts\");\n}\n\nfunction write_FILLS_bin(ba/*::, data*/) {\n\tvar cnt = 2;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginFills\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtFill\", write_BrtFill({patternType:\"none\"}));\n\twrite_record(ba, \"BrtFill\", write_BrtFill({patternType:\"gray125\"}));\n\t/* 1*65431BrtFill */\n\twrite_record(ba, \"BrtEndFills\");\n}\n\nfunction write_BORDERS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginBorders\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtBorder\", write_BrtBorder({}));\n\t/* 1*65430BrtBorder */\n\twrite_record(ba, \"BrtEndBorders\");\n}\n\nfunction write_CELLSTYLEXFS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\twrite_record(ba, \"BrtBeginCellStyleXFs\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtXF\", write_BrtXF({\n\t\tnumFmtId: 0,\n\t\tfontId:   0,\n\t\tfillId:   0,\n\t\tborderId: 0\n\t}, 0xFFFF));\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, \"BrtEndCellStyleXFs\");\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n\twrite_record(ba, \"BrtBeginCellXFs\", write_UInt32LE(data.length));\n\tdata.forEach(function(c) { write_record(ba, \"BrtXF\", write_BrtXF(c,0)); });\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, \"BrtEndCellXFs\");\n}\n\nfunction write_STYLES_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\twrite_record(ba, \"BrtBeginStyles\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtStyle\", write_BrtStyle({\n\t\txfId:0,\n\t\tbuiltinId:0,\n\t\tname:\"Normal\"\n\t}));\n\t/* 1*65430(BrtStyle *FRT) */\n\twrite_record(ba, \"BrtEndStyles\");\n}\n\nfunction write_DXFS_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, \"BrtBeginDXFs\", write_UInt32LE(cnt));\n\t/* *2147483647(BrtDXF *FRT) */\n\twrite_record(ba, \"BrtEndDXFs\");\n}\n\nfunction write_TABLESTYLES_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, \"BrtBeginTableStyles\", write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n\t/* *TABLESTYLE */\n\twrite_record(ba, \"BrtEndTableStyles\");\n}\n\nfunction write_COLORPALETTE_bin(/*::ba, data*/) {\n\treturn;\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginStyleSheet\");\n\twrite_FMTS_bin(ba, wb.SSF);\n\twrite_FONTS_bin(ba, wb);\n\twrite_FILLS_bin(ba, wb);\n\twrite_BORDERS_bin(ba, wb);\n\twrite_CELLSTYLEXFS_bin(ba, wb);\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\n\twrite_STYLES_bin(ba, wb);\n\twrite_DXFS_bin(ba, wb);\n\twrite_TABLESTYLES_bin(ba, wb);\n\twrite_COLORPALETTE_bin(ba, wb);\n\t/* FRTSTYLESHEET*/\n\twrite_record(ba, \"BrtEndStyleSheet\");\n\treturn ba.end();\n}\nRELS.THEME = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\";\n\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = [\n\t'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',\n\t'</a:accent1>', '</a:accent2>', '</a:accent3>',\n\t'</a:accent4>', '</a:accent5>', '</a:accent6>',\n\t'</a:hlink>', '</a:folHlink>'\n];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n\tthemes.themeElements.clrScheme = [];\n\tvar color = {};\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\n\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\n\t\t\tcase '<a:srgbClr':\n\t\t\t\tcolor.rgb = y.val; break;\n\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\n\t\t\tcase '<a:sysClr':\n\t\t\t\tcolor.rgb = y.lastClr; break;\n\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\n\t\t\tcase '<a:dk1>': case '</a:dk1>':\n\t\t\tcase '<a:lt1>': case '</a:lt1>':\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\n\t\t\t\tif (y[0].charAt(1) === '/') {\n\t\t\t\t\tthemes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n\t\t\t\t\tcolor = {};\n\t\t\t\t} else {\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n\t\t}\n\t});\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme(/*::t, themes, opts*/) { }\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme(/*::t, themes, opts*/) { }\n\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n\tthemes.themeElements = {};\n\n\tvar t;\n\n\t[\n\t\t/* clrScheme CT_ColorScheme */\n\t\t['clrScheme', clrsregex, parse_clrScheme],\n\t\t/* fontScheme CT_FontScheme */\n\t\t['fontScheme', fntsregex, parse_fontScheme],\n\t\t/* fmtScheme CT_StyleMatrix */\n\t\t['fmtScheme', fmtsregex, parse_fmtScheme]\n\t].forEach(function(m) {\n\t\tif(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n\t\tm[2](t, themes, opts);\n\t});\n}\n\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data/*:string*/, opts) {\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\n\tif(!data || data.length === 0) return parse_theme_xml(write_theme());\n\n\tvar t;\n\tvar themes = {};\n\n\t/* themeElements CT_BaseStyles */\n\tif(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\n\tparse_themeElements(t[0], themes, opts);\n\tthemes.raw = data;\n\treturn themes;\n}\n\nfunction write_theme(Themes, opts)/*:string*/ {\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\n\tif(Themes && typeof Themes.raw == \"string\") return Themes.raw;\n\tvar o = [XML_HEADER];\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n\to[o.length] =  '<a:themeElements>';\n\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n\to[o.length] =   '</a:clrScheme>';\n\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\n\to[o.length] =    '<a:majorFont>';\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:majorFont>';\n\to[o.length] =    '<a:minorFont>';\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:minorFont>';\n\to[o.length] =   '</a:fontScheme>';\n\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\n\to[o.length] =    '<a:fillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:fillStyleLst>';\n\to[o.length] =    '<a:lnStyleLst>';\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =    '</a:lnStyleLst>';\n\to[o.length] =    '<a:effectStyleLst>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =    '</a:effectStyleLst>';\n\to[o.length] =    '<a:bgFillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:bgFillStyleLst>';\n\to[o.length] =   '</a:fmtScheme>';\n\to[o.length] =  '</a:themeElements>';\n\n\to[o.length] =  '<a:objectDefaults>';\n\to[o.length] =   '<a:spDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:spDef>';\n\to[o.length] =   '<a:lnDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:lnDef>';\n\to[o.length] =  '</a:objectDefaults>';\n\to[o.length] =  '<a:extraClrSchemeLst/>';\n\to[o.length] = '</a:theme>';\n\treturn o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar dwThemeVersion = blob.read_shift(4);\n\tif(dwThemeVersion === 124226) return;\n\tif(!opts.cellStyles) { blob.l = end; return; }\n\tvar data = blob.slice(blob.l);\n\tblob.l = end;\n\tvar zip; try { zip = zip_read(data, {type: \"array\"}); } catch(e) { return; }\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n\tif(!themeXML) return;\n\treturn parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob/*::, length*/) { return blob.read_shift(4); }\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob/*::, length*/) {\n\tvar o = {};\n\to.xclrType = blob.read_shift(2);\n\to.nTintShade = blob.read_shift(2);\n\tswitch(o.xclrType) {\n\t\tcase 0: blob.l += 4; break;\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n\t\tcase 4: blob.l += 4; break;\n\t}\n\tblob.l += 8;\n\treturn o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob/*::, length*/)/*:Array<any>*/ {\n\tvar extType = blob.read_shift(2);\n\tvar cb = blob.read_shift(2) - 4;\n\tvar o = [extType];\n\tswitch(extType) {\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n\t}\n\treturn o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n\tvar end = blob.l + length;\n\tblob.l += 2;\n\tvar ixfe = blob.read_shift(2);\n\tblob.l += 2;\n\tvar cexts = blob.read_shift(2);\n\tvar ext/*:AOA*/ = [];\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n\treturn {ixfe:ixfe, ext:ext};\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n\txfext.forEach(function(xfe) {\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\n\t\t\tcase 0x04: break; /* foreground color */\n\t\t\tcase 0x05: break; /* background color */\n\t\t\tcase 0x06: break; /* gradient fill */\n\t\t\tcase 0x07: break; /* top cell border color */\n\t\t\tcase 0x08: break; /* bottom cell border color */\n\t\t\tcase 0x09: break; /* left cell border color */\n\t\t\tcase 0x0a: break; /* right cell border color */\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\n\t\t\tcase 0x0d: /* text color */\n\t\t\t\tbreak;\n\t\t\tcase 0x0e: break; /* font scheme */\n\t\t\tcase 0x0f: break; /* indentation level */\n\t\t}\n\t});\n}\n\nRELS.XLMETA = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\";\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = { Types: [] };\n  if (!data)\n    return out;\n  var pass = false;\n  data.replace(tagregex, function(x, idx) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({ name: y.name });\n        break;\n      case \"<futureMetadata\":\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n      case \"</cellMetadata>\":\n        break;\n      case \"<valueMetadata\":\n        break;\n      case \"</valueMetadata>\":\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF)\n          throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = { Types: [] };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  recordhopper(data, function(val, R_n, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({ name: val.name });\n        break;\n      case 51:\n        break;\n      case 35:\n        state.push(R_n);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if ((R_n || \"\").indexOf(\"Begin\") > 0) {\n        } else if ((R_n || \"\").indexOf(\"End\") > 0) {\n        } else if (!pass || opts.WTF && state[state.length - 1] != \"BrtFRTBegin\")\n          throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, \"BrtBeginMetadata\");\n  write_record(ba, \"BrtBeginEsmdtinfo\", write_UInt32LE(1));\n  write_record(ba, \"BrtMdtinfo\", write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, \"BrtEndEsmdtinfo\");\n  write_record(ba, \"BrtBeginEsfmd\", write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, \"BrtBeginFmd\");\n  write_record(ba, \"BrtFRTBegin\", write_UInt32LE(514));\n  write_record(ba, \"BrtBeginDynamicArrayPr\", write_UInt32LE(0));\n  write_record(ba, \"BrtEndDynamicArrayPr\", writeuint16(1));\n  write_record(ba, \"BrtFRTEnd\");\n  write_record(ba, \"BrtEndFmd\");\n  write_record(ba, \"BrtEndEsfmd\");\n  write_record(ba, \"BrtBeginEsmdb\", write_BrtBeginEsmdb(1, true));\n  write_record(ba, \"BrtMdb\", write_BrtMdb([[1, 0]]));\n  write_record(ba, \"BrtEndEsmdb\");\n  write_record(ba, \"BrtEndMetadata\");\n  return ba.end();\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n\t\t}\n\t});\n\treturn d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n\tvar out = {};\n\tout.i = data.read_shift(4);\n\tvar cell = {};\n\tcell.r = data.read_shift(4);\n\tcell.c = data.read_shift(4);\n\tout.r = encode_cell(cell);\n\tvar flags = data.read_shift(1);\n\tif(flags & 0x2) out.l = '1';\n\tif(flags & 0x8) out.a = '1';\n\treturn out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n\tvar out = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_cc(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\n\t\t\t\tout.push(val); break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml(/*::data, rel, name:string, _opts*/) {\n\t//var opts = _opts || {};\n\t//if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name/*:string*/, _opts) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\n\tvar pass = false, end = false;\n\n\trecordhopper(data, function xlink_parse(val, R_n, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT.toString(16) + \" \" + R_n);\n\t\t}\n\t}, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\nRELS.IMG = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\nRELS.DRAW = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\";\n\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels/*:any*/) {\n\tif(!data) return \"??\";\n\t/*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n\tvar id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\n\n\treturn rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nvar _shapeid = 1024;\nfunction write_comments_vml(rId/*:number*/, comments) {\n\tvar csize = [21600, 21600];\n\t/* L.5.2.1.2 Path Attribute */\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n\tvar o = [\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"}),\n\t\twritextag(\"v:shapetype\", [\n\t\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n\t\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n\t\t].join(\"\"), {id:\"_x0000_t202\", 'o:spt':202, coordsize:csize.join(\",\"),path:bbox})\n\t];\n\twhile(_shapeid < rId * 1000) _shapeid += 1000;\n\n\tcomments.forEach(function(x) {\n\tvar c = decode_cell(x[0]);\n\tvar fillopts = /*::(*/{'color2':\"#BEFF82\", 'type':\"gradient\"}/*:: :any)*/;\n\tif(fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n\tvar fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}) : null;\n\tvar fillxml = writextag('v:fill', fillparm, fillopts);\n\n\tvar shadata = ({on:\"t\", 'obscured':\"t\"}/*:any*/);\n\t++_shapeid;\n\n\to = o.concat([\n\t'<v:shape' + wxt_helper({\n\t\tid:'_x0000_s' + _shapeid,\n\t\ttype:\"#_x0000_t202\",\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n\t\tfillcolor:\"#ECFAD4\",\n\t\tstrokecolor:\"#edeaa1\"\n\t}) + '>',\n\t\tfillxml,\n\t\twritextag(\"v:shadow\", null, shadata),\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n\t\t'<x:ClientData ObjectType=\"Note\">',\n\t\t\t'<x:MoveWithCells/>',\n\t\t\t'<x:SizeWithCells/>',\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\n\t\t\twritetag('x:Anchor', [c.c+1, 0, c.r+1, 0, c.c+3, 20, c.r+5, 20].join(\",\")),\n\t\t\twritetag('x:AutoFill', \"False\"),\n\t\t\twritetag('x:Row', String(c.r)),\n\t\t\twritetag('x:Column', String(c.c)),\n\t\t\tx[1].hidden ? '' : '<x:Visible/>',\n\t\t'</x:ClientData>',\n\t'</v:shape>'\n\t]); });\n\to.push('</xml>');\n\treturn o.join(\"\");\n}\nRELS.CMNT = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\";\n\nfunction sheet_insert_comments(sheet, comments/*:Array<RawComment>*/) {\n\tvar dense = Array.isArray(sheet);\n\tvar cell/*:Cell*/;\n\tcomments.forEach(function(comment) {\n\t\tvar r = decode_cell(comment.ref);\n\t\tif(dense) {\n\t\t\tif(!sheet[r.r]) sheet[r.r] = [];\n\t\t\tcell = sheet[r.r][r.c];\n\t\t} else cell = sheet[comment.ref];\n\t\tif (!cell) {\n\t\t\tcell = ({t:\"z\"}/*:any*/);\n\t\t\tif(dense) sheet[r.r][r.c] = cell;\n\t\t\telse sheet[comment.ref] = cell;\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n\t\t\tif(range.s.r > r.r) range.s.r = r.r;\n\t\t\tif(range.e.r < r.r) range.e.r = r.r;\n\t\t\tif(range.s.c > r.c) range.s.c = r.c;\n\t\t\tif(range.e.c < r.c) range.e.c = r.c;\n\t\t\tvar encoded = encode_range(range);\n\t\t\tif (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\n\t\t}\n\n\t\tif (!cell.c) cell.c = [];\n\t\tvar o/*:Comment*/ = ({a: comment.author, t: comment.t, r: comment.r});\n\t\tif(comment.h) o.h = comment.h;\n\t\tcell.c.push(o);\n\t});\n}\n\n/* 18.7 Comments */\nfunction parse_comments_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\t/* 18.7.6 CT_Comments */\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar commentList/*:Array<RawComment>*/ = [];\n\tvar authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n\t\tif(a) authors.push(a[1]);\n\t});\n\tvar cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n\t\tif(!cm) return;\n\t\tvar y = parsexmltag(cm[0]);\n\t\tvar comment/*:RawComment*/ = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid }/*:any*/);\n\t\tvar cell = decode_cell(y.ref);\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\n\t\tvar textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n\t\tcomment.r = rt.r;\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n\t\tcomment.t = (rt.t||\"\").replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\t\tif(opts.cellHTML) comment.h = rt.h;\n\t\tcommentList.push(comment);\n\t});\n\treturn commentList;\n}\n\nvar CMNT_XML_ROOT = writextag('comments', null, { 'xmlns': XMLNS.main[0] });\nfunction write_comments_xml(data/*::, opts*/) {\n\tvar o = [XML_HEADER, CMNT_XML_ROOT];\n\n\tvar iauthor/*:Array<string>*/ = [];\n\to.push(\"<authors>\");\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n\t\tif(iauthor.indexOf(a) > -1) return;\n\t\tiauthor.push(a);\n\t\to.push(\"<author>\" + a + \"</author>\");\n\t}); });\n\to.push(\"</authors>\");\n\to.push(\"<commentList>\");\n\tdata.forEach(function(d) {\n\t\td[1].forEach(function(c) {\n\t\t\t/* 18.7.3 CT_Comment */\n\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n\t\t\to.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n\t\t\to.push('</text></comment>');\n\t\t});\n\t});\n\to.push(\"</commentList>\");\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n\tvar out = {};\n\tout.iauthor = data.read_shift(4);\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tout.rfx = rfx.s;\n\tout.ref = encode_cell(rfx.s);\n\tdata.l += 16; /*var guid = parse_GUID(data); */\n\treturn out;\n}\nfunction write_BrtBeginComment(data, o) {\n\tif(o == null) o = new_buf(36);\n\to.write_shift(4, data[1].iauthor);\n\twrite_UncheckedRfX((data[0]/*:any*/), o);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts)/*:Array<RawComment>*/ {\n\tvar out/*:Array<RawComment>*/ = [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar c = {};\n\tvar pass = false;\n\trecordhopper(data, function hopper_cmnt(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\n\t\t\t\tauthors.push(val); break;\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\n\t\t\t\tc = val; break;\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\n\t\t\t\tc.author = authors[c.iauthor];\n\t\t\t\tdelete (c/*:any*/).iauthor;\n\t\t\t\tif(opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n\t\t\t\tif(!c.t) c.t = \"\";\n\t\t\t\tdelete c.rfx; out.push(c); break;\n\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn out;\n}\n\nfunction write_comments_bin(data/*::, opts*/) {\n\tvar ba = buf_array();\n\tvar iauthor/*:Array<string>*/ = [];\n\twrite_record(ba, \"BrtBeginComments\");\n\n\twrite_record(ba, \"BrtBeginCommentAuthors\");\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\n\t\t\tiauthor.push(c.a.slice(0,54));\n\t\t\twrite_record(ba, \"BrtCommentAuthor\", write_BrtCommentAuthor(c.a));\n\t\t});\n\t});\n\twrite_record(ba, \"BrtEndCommentAuthors\");\n\n\twrite_record(ba, \"BrtBeginCommentList\");\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tc.iauthor = iauthor.indexOf(c.a);\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n\t\t\twrite_record(ba, \"BrtBeginComment\", write_BrtBeginComment([range, c]));\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, \"BrtCommentText\", write_BrtCommentText(c));\n\t\t\twrite_record(ba, \"BrtEndComment\");\n\t\t\tdelete c.iauthor;\n\t\t});\n\t});\n\twrite_record(ba, \"BrtEndCommentList\");\n\n\twrite_record(ba, \"BrtEndComments\");\n\treturn ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({ root: \"R\" });\n  cfb.FullPaths.forEach(function(p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/))\n      return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function(p, i) {\n    if (i == 0)\n      return;\n    var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\")\n      CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\nRELS.DS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\";\nRELS.MS = \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\";\n\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ds_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ms_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\nfunction parse_ms_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = (function(){\n\tvar rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n\tvar rcbase/*:Cell*/ = ({r:0,c:0}/*:any*/);\n\tfunction rcfunc($$,$1,$2,$3) {\n\t\tvar cRel = false, rRel = false;\n\n\t\tif($2.length == 0) rRel = true;\n\t\telse if($2.charAt(0) == \"[\") { rRel = true; $2 = $2.slice(1, -1); }\n\n\t\tif($3.length == 0) cRel = true;\n\t\telse if($3.charAt(0) == \"[\") { cRel = true; $3 = $3.slice(1, -1); }\n\n\t\tvar R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;\n\n\t\tif(cRel) C += rcbase.c; else --C;\n\t\tif(rRel) R += rcbase.r; else --R;\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n\t}\n\treturn function rc_to_a1(fstr/*:string*/, base/*:Cell*/)/*:string*/ {\n\t\trcbase = base;\n\t\treturn fstr.replace(rcregex, rcfunc);\n\t};\n})();\n\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc =(function(){\n\treturn function a1_to_rc(fstr/*:string*/, base/*:CellAddress*/) {\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\n\t\t\tvar R = (r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : (r+1));\n\t\t\tvar C = (c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : (c+1));\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\n\t\t});\n\t};\n})();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f/*:string*/, delta/*:Cell*/)/*:string*/ {\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n\t});\n}\n\nfunction shift_formula_xlsx(f/*:string*/, range/*:string*/, cell/*:string*/)/*:string*/ {\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\n\treturn shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f/*:string*/)/*:boolean*/ {\n\tif(f.length == 1) return false;\n\treturn true;\n}\n\nfunction _xlfn(f/*:string*/)/*:string*/ {\n\treturn f.replace(/_xlfn\\./g,\"\");\n}\nfunction parseread1(blob) { blob.l+=1; return; }\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n\tvar w = 2;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n\t\telse if(opts.biff == 12) w = 4;\n\t}\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob/*::, length, opts*/) {\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n\tvar c=blob.read_shift(1);\n\tvar C=blob.read_shift(1);\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n\tvar c = parse_ColRelU(blob, 2);\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n}\nfunction parse_RgceLoc_BIFF2(blob/*::, length, opts*/) {\n\tvar r = parse_ColRelU(blob, 2);\n\tvar c = blob.read_shift(1);\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob/*::, length, opts*/) {\n\tvar r = blob.read_shift(2);\n\tvar c = blob.read_shift(2);\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n\tvar biff = opts && opts.biff ? opts.biff : 8;\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\n\tvar cl = blob.read_shift(2);\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n\tcl &= 0x3FFF;\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\n}\nfunction parse_RgceLocRel_BIFF2(blob/*::, length:number, opts*/) {\n\tvar rl = blob.read_shift(2);\n\tvar c = blob.read_shift(1);\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n\trl &= 0x3FFF;\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2, 'i');\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tvar area = parse_RgceArea(blob, w, opts);\n\treturn [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n\treturn [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n\tvar bitBaxcel = 1;\n\tblob.l += 4;\n\treturn [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts)/*:Array<number>*/ {\n\tblob.l +=2;\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar o/*:Array<number>*/ = [];\n\t/* offset is 1 less than the number of elements */\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\n\treturn [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob/*::, length*/) {\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\n\treturn [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLoc(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tif(opts && opts.biff == 5) blob.l += 12;\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n\treturn [type, ixti, loc];\n}\n\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n\tvar type = blob[blob.l++];\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\n\nfunction parsetab(blob) {\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n\tblob.l++;\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n\tvar row = blob.read_shift(2);\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff/*:number*/) {\n\tvar val = [blob.read_shift(1)];\n\tif(biff == 12) switch(val[0]) {\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\n\t}\n\tswitch(val[0]) {\n\t\tcase 0x04: /* SerBool -- boolean */\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n\t\t\tif(biff != 12) blob.l += 7; break;\n\t\tcase 0x25: /* appears to be an alias */\n\t\tcase 0x10: /* SerErr -- error */\n\t\t\tval[1] = BErr[blob[blob.l]];\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n\t\t\tblob.l += 8; break;\n\t\tcase 0x01: /* SerNum -- Xnum */\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n\t\tdefault: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n\t}\n\treturn val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n\tvar out/*:Array<Range>*/ = [];\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n\tvar rows = 0, cols = 0;\n\tif(opts.biff == 12) {\n\t\trows = blob.read_shift(4); // DRw\n\t\tcols = blob.read_shift(4); // DCol\n\t} else {\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\n\t\trows = 1 + blob.read_shift(2); //DRw\n\t}\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n\t// $FlowIgnore\n\tfor(var i = 0, o/*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i)\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n\tvar nameindex = blob.read_shift(w);\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l += 5; break;\n\t\tcase 3: case 4: blob.l += 8; break;\n\t\tcase 5: blob.l += 12; break;\n\t}\n\treturn [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tvar nameindex = blob.read_shift(4);\n\treturn [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\n\tblob.l += 8;\n\tvar nameindex = blob.read_shift(2);\n\tblob.l += 12;\n\treturn [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += 4;\n\tif(opts.biff < 8) blob.l--;\n\tif(opts.biff == 12) blob.l += 2;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 4;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: w = 15; break;\n\t\tcase 12: w = 6; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\n\nfunction parse_PtgElfLoc(blob, length, opts) {\n\tblob.l += 2;\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob/*::, length, opts*/) {\n\tblob.l += 6;\n\treturn [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\n\t\"Data\",\n\t\"All\",\n\t\"Headers\",\n\t\"??\",\n\t\"?Data2\",\n\t\"??\",\n\t\"?DataHeaders\",\n\t\"??\",\n\t\"Totals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?DataTotals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?Current\"\n];\nfunction parse_PtgList(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\tvar ixti = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tvar idx = blob.read_shift(4);\n\tvar c = blob.read_shift(2);\n\tvar C = blob.read_shift(2);\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n\tblob.l += 5;\n\tblob.l += 2;\n\tblob.l += (opts.biff == 2 ? 1 : 4);\n\treturn [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n\tblob.l += (opts.biff == 2 ? 4 : 5);\n\treturn [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgAttrNoop(blob/*::, length, opts*/) {\n\tblob.l += 4;\n\treturn [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n\t/*::[*/0x01/*::]*/: { n:'PtgExp', f:parse_PtgExp },\n\t/*::[*/0x02/*::]*/: { n:'PtgTbl', f:parse_PtgTbl },\n\t/*::[*/0x03/*::]*/: { n:'PtgAdd', f:parseread1 },\n\t/*::[*/0x04/*::]*/: { n:'PtgSub', f:parseread1 },\n\t/*::[*/0x05/*::]*/: { n:'PtgMul', f:parseread1 },\n\t/*::[*/0x06/*::]*/: { n:'PtgDiv', f:parseread1 },\n\t/*::[*/0x07/*::]*/: { n:'PtgPower', f:parseread1 },\n\t/*::[*/0x08/*::]*/: { n:'PtgConcat', f:parseread1 },\n\t/*::[*/0x09/*::]*/: { n:'PtgLt', f:parseread1 },\n\t/*::[*/0x0A/*::]*/: { n:'PtgLe', f:parseread1 },\n\t/*::[*/0x0B/*::]*/: { n:'PtgEq', f:parseread1 },\n\t/*::[*/0x0C/*::]*/: { n:'PtgGe', f:parseread1 },\n\t/*::[*/0x0D/*::]*/: { n:'PtgGt', f:parseread1 },\n\t/*::[*/0x0E/*::]*/: { n:'PtgNe', f:parseread1 },\n\t/*::[*/0x0F/*::]*/: { n:'PtgIsect', f:parseread1 },\n\t/*::[*/0x10/*::]*/: { n:'PtgUnion', f:parseread1 },\n\t/*::[*/0x11/*::]*/: { n:'PtgRange', f:parseread1 },\n\t/*::[*/0x12/*::]*/: { n:'PtgUplus', f:parseread1 },\n\t/*::[*/0x13/*::]*/: { n:'PtgUminus', f:parseread1 },\n\t/*::[*/0x14/*::]*/: { n:'PtgPercent', f:parseread1 },\n\t/*::[*/0x15/*::]*/: { n:'PtgParen', f:parseread1 },\n\t/*::[*/0x16/*::]*/: { n:'PtgMissArg', f:parseread1 },\n\t/*::[*/0x17/*::]*/: { n:'PtgStr', f:parse_PtgStr },\n\t/*::[*/0x1A/*::]*/: { n:'PtgSheet', f:parse_PtgSheet },\n\t/*::[*/0x1B/*::]*/: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n\t/*::[*/0x1C/*::]*/: { n:'PtgErr', f:parse_PtgErr },\n\t/*::[*/0x1D/*::]*/: { n:'PtgBool', f:parse_PtgBool },\n\t/*::[*/0x1E/*::]*/: { n:'PtgInt', f:parse_PtgInt },\n\t/*::[*/0x1F/*::]*/: { n:'PtgNum', f:parse_PtgNum },\n\t/*::[*/0x20/*::]*/: { n:'PtgArray', f:parse_PtgArray },\n\t/*::[*/0x21/*::]*/: { n:'PtgFunc', f:parse_PtgFunc },\n\t/*::[*/0x22/*::]*/: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n\t/*::[*/0x23/*::]*/: { n:'PtgName', f:parse_PtgName },\n\t/*::[*/0x24/*::]*/: { n:'PtgRef', f:parse_PtgRef },\n\t/*::[*/0x25/*::]*/: { n:'PtgArea', f:parse_PtgArea },\n\t/*::[*/0x26/*::]*/: { n:'PtgMemArea', f:parse_PtgMemArea },\n\t/*::[*/0x27/*::]*/: { n:'PtgMemErr', f:parse_PtgMemErr },\n\t/*::[*/0x28/*::]*/: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n\t/*::[*/0x29/*::]*/: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n\t/*::[*/0x2A/*::]*/: { n:'PtgRefErr', f:parse_PtgRefErr },\n\t/*::[*/0x2B/*::]*/: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n\t/*::[*/0x2C/*::]*/: { n:'PtgRefN', f:parse_PtgRefN },\n\t/*::[*/0x2D/*::]*/: { n:'PtgAreaN', f:parse_PtgAreaN },\n\t/*::[*/0x2E/*::]*/: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n\t/*::[*/0x2F/*::]*/: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n\t/*::[*/0x39/*::]*/: { n:'PtgNameX', f:parse_PtgNameX },\n\t/*::[*/0x3A/*::]*/: { n:'PtgRef3d', f:parse_PtgRef3d },\n\t/*::[*/0x3B/*::]*/: { n:'PtgArea3d', f:parse_PtgArea3d },\n\t/*::[*/0x3C/*::]*/: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n\t/*::[*/0x3D/*::]*/: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n\t/*::[*/0xFF/*::]*/: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n\t/*::[*/0x40/*::]*/: 0x20, /*::[*/0x60/*::]*/: 0x20,\n\t/*::[*/0x41/*::]*/: 0x21, /*::[*/0x61/*::]*/: 0x21,\n\t/*::[*/0x42/*::]*/: 0x22, /*::[*/0x62/*::]*/: 0x22,\n\t/*::[*/0x43/*::]*/: 0x23, /*::[*/0x63/*::]*/: 0x23,\n\t/*::[*/0x44/*::]*/: 0x24, /*::[*/0x64/*::]*/: 0x24,\n\t/*::[*/0x45/*::]*/: 0x25, /*::[*/0x65/*::]*/: 0x25,\n\t/*::[*/0x46/*::]*/: 0x26, /*::[*/0x66/*::]*/: 0x26,\n\t/*::[*/0x47/*::]*/: 0x27, /*::[*/0x67/*::]*/: 0x27,\n\t/*::[*/0x48/*::]*/: 0x28, /*::[*/0x68/*::]*/: 0x28,\n\t/*::[*/0x49/*::]*/: 0x29, /*::[*/0x69/*::]*/: 0x29,\n\t/*::[*/0x4A/*::]*/: 0x2A, /*::[*/0x6A/*::]*/: 0x2A,\n\t/*::[*/0x4B/*::]*/: 0x2B, /*::[*/0x6B/*::]*/: 0x2B,\n\t/*::[*/0x4C/*::]*/: 0x2C, /*::[*/0x6C/*::]*/: 0x2C,\n\t/*::[*/0x4D/*::]*/: 0x2D, /*::[*/0x6D/*::]*/: 0x2D,\n\t/*::[*/0x4E/*::]*/: 0x2E, /*::[*/0x6E/*::]*/: 0x2E,\n\t/*::[*/0x4F/*::]*/: 0x2F, /*::[*/0x6F/*::]*/: 0x2F,\n\t/*::[*/0x58/*::]*/: 0x22, /*::[*/0x78/*::]*/: 0x22,\n\t/*::[*/0x59/*::]*/: 0x39, /*::[*/0x79/*::]*/: 0x39,\n\t/*::[*/0x5A/*::]*/: 0x3A, /*::[*/0x7A/*::]*/: 0x3A,\n\t/*::[*/0x5B/*::]*/: 0x3B, /*::[*/0x7B/*::]*/: 0x3B,\n\t/*::[*/0x5C/*::]*/: 0x3C, /*::[*/0x7C/*::]*/: 0x3C,\n\t/*::[*/0x5D/*::]*/: 0x3D, /*::[*/0x7D/*::]*/: 0x3D\n};\n(function(){for(var y in PtgDupes) PtgTypes[y] = PtgTypes[PtgDupes[y]];})();\n\nvar Ptg18 = {\n\t/*::[*/0x01/*::]*/: { n:'PtgElfLel', f:parse_PtgElfLel },\n\t/*::[*/0x02/*::]*/: { n:'PtgElfRw', f:parse_PtgElfRw },\n\t/*::[*/0x03/*::]*/: { n:'PtgElfCol', f:parse_PtgElfCol },\n\t/*::[*/0x06/*::]*/: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n\t/*::[*/0x07/*::]*/: { n:'PtgElfColV', f:parse_PtgElfColV },\n\t/*::[*/0x0A/*::]*/: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n\t/*::[*/0x0B/*::]*/: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n\t/*::[*/0x0D/*::]*/: { n:'PtgElfColS', f:parse_PtgElfColS },\n\t/*::[*/0x0F/*::]*/: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n\t/*::[*/0x10/*::]*/: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n\t/*::[*/0x19/*::]*/: { n:'PtgList', f:parse_PtgList },\n\t/*::[*/0x1D/*::]*/: { n:'PtgSxName', f:parse_PtgSxName },\n\t/*::[*/0xFF/*::]*/: {}\n};\nvar Ptg19 = {\n\t/*::[*/0x00/*::]*/: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n\t/*::[*/0x01/*::]*/: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n\t/*::[*/0x02/*::]*/: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n\t/*::[*/0x04/*::]*/: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n\t/*::[*/0x08/*::]*/: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n\t/*::[*/0x10/*::]*/: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n\t/*::[*/0x20/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x40/*::]*/: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n\t/*::[*/0x41/*::]*/: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n\t/*::[*/0x80/*::]*/: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n\t/*::[*/0xFF/*::]*/: {}\n};\nPtg19[0x21] = Ptg19[0x20];\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n\tif(opts.biff < 8) return parsenoop(blob, length);\n\tvar target = blob.l + length;\n\tvar o = [];\n\tfor(var i = 0; i !== rgce.length; ++i) {\n\t\tswitch(rgce[i][0]) {\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n\t\t\t\to.push(rgce[i][1]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n\t\t\t\to.push(rgce[i][2]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\n\t\t\t\tif(opts && opts.biff == 12) {\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\n\t\t\t\t\to.push(rgce[i][1]);\n\t\t\t\t} break;\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\n\t\t\tdefault: break;\n\t\t}\n\t}\n\tlength = target - blob.l;\n\t/* note: this is technically an error but Excel disregards */\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n\tif(length !== 0) o.push(parsenoop(blob, length));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar R, id, ptgs = [];\n\twhile(target != blob.l) {\n\t\tlength = target - blob.l;\n\t\tid = blob[blob.l];\n\t\tR = PtgTypes[id];\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\n\t}\n\treturn ptgs;\n}\n\nfunction stringify_array(f/*:Array<Array<string>>*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < f.length; ++i) {\n\t\tvar x = f[i], r/*:Array<string>*/ = [];\n\t\tfor(var j = 0; j < x.length; ++j) {\n\t\t\tvar y = x[j];\n\t\t\tif(y) switch(y[0]) {\n\t\t\t\t// TODO: handle embedded quotes\n\t\t\t\tcase 0x02:\n\t\t\t\t\t/*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n\t\t\t\t\tr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n\t\t\t\tdefault: r.push(y[1]);\n\t\t\t} else r.push(\"\");\n\t\t}\n\t\to.push(r.join(\",\"));\n\t}\n\treturn o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n\tPtgAdd: \"+\",\n\tPtgConcat: \"&\",\n\tPtgDiv: \"/\",\n\tPtgEq: \"=\",\n\tPtgGe: \">=\",\n\tPtgGt: \">\",\n\tPtgLe: \"<=\",\n\tPtgLt: \"<\",\n\tPtgMul: \"*\",\n\tPtgNe: \"<>\",\n\tPtgPower: \"^\",\n\tPtgSub: \"-\"\n};\n\n// List of invalid characters needs to be tested further\nvar quoteCharacters /*:RegExp */ = new RegExp(/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/);\nfunction formula_quote_sheet_name(sname/*:string*/, opts)/*:string*/ {\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n\tif (quoteCharacters.test(sname)) return \"'\" + sname + \"'\";\n\treturn sname;\n}\nfunction get_ixti_raw(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tif(!supbooks) return \"SH33TJSERR0\";\n\tif(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\n\tvar XTI = supbooks.XTI[ixti];\n\tif(opts.biff < 8) {\n\t\tif(ixti > 10000) ixti-= 65536;\n\t\tif(ixti < 0) ixti = -ixti;\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n\t}\n\tif(!XTI) return \"SH33TJSERR1\";\n\tvar o = \"\";\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\t/* falls through */\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n\t}\n\tswitch(supbooks[XTI[0]][0][0]) {\n\t\tcase 0x0401:\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x3A01: return supbooks[XTI[0]].slice(1).map(function(name) { return name.Name; }).join(\";;\"); //return \"SH33TJSERR8\";\n\t\tdefault:\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n\t}\n}\nfunction get_ixti(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tvar ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n\treturn ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula/*Array<any>*/, range, cell/*:any*/, supbooks, opts)/*:string*/ {\n\tvar biff = (opts && opts.biff) || 8;\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n\tvar stack/*:Array<string>*/ = [], e1, e2, /*::type,*/ c/*:CellAddress*/, ixti=0, nameidx=0, r, sname=\"\";\n\tif(!formula[0] || !formula[0][0]) return \"\";\n\tvar last_sp = -1, sp = \"\";\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n\t\tvar f = formula[0][ff];\n\t\tswitch(f[0]) {\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\n\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsp = \"\";\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\te2 = e2 + sp;\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\" \"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\",\"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\":\"+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\n\t\t\t\t/*::type = f[1][0]; */c = shift_cell_xls((f[1][1]/*:any*/), _range, opts);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\n\t\t\t\t/*::type = f[1][0]; */c = cell ? shift_cell_xls((f[1][1]/*:any*/), cell, opts) : (f[1][1]/*:any*/);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; c = shift_cell_xls((f[1][2]/*:any*/), _range, opts);\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n\t\t\t\t/* f[1] = [argc, func, type] */\n\t\t\t\tvar argc/*:number*/ = (f[1][0]/*:any*/), func/*:string*/ = (f[1][1]/*:any*/);\n\t\t\t\tif(!argc) argc = 0;\n\t\t\t\targc &= 0x7F;\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\n\t\t\t\tstack.length -= argc;\n\t\t\t\tif(func === 'User') func = args.shift();\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n\t\t\t\tstack.push(String(f[1])); break;\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"'); break;\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; r = f[1][2];\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n\t\t\t\t/* f[1] = type, 0, nameindex */\n\t\t\t\tnameidx = (f[1][2]/*:any*/);\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n\t\t\t\t/* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n\t\t\t\tif(name && name.slice(0,6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n\t\t\t\tstack.push(name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n\t\t\t\t/* f[1] = type, ixti, nameindex */\n\t\t\t\tvar bookidx/*:number*/ = (f[1][1]/*:any*/); nameidx = (f[1][2]/*:any*/); var externbook;\n\t\t\t\t/* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n\t\t\t\tif(opts.biff <= 5) {\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n\t\t\t\t} else {\n\t\t\t\t\tvar o = \"\";\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar ixtidata = (get_ixti_raw(supbooks, bookidx, opts)||\"\").split(\";;\");\n\t\t\t\t\t\tif(ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n\t\t\t\t\t\telse o += \"SH33TJSERRX\";\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(o);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n\t\t\t\tstack.push(externbook.Name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n\t\t\t\tvar lp = '(', rp = ')';\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\n\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n\t\t\t\tc = {c:(f[1][1]/*:any*/),r:(f[1][0]/*:any*/)};\n\t\t\t\tvar q = ({c: cell.c, r:cell.r}/*:any*/);\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n\t\t\t\t} else {\n\t\t\t\t\tvar fnd = false;\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n\t\t\t\t\t\t/* TODO: should be something like range_has */\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!fnd) stack.push(/*::String(*/f[1]/*::)*/);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n\t\t\t\tstack.push(\"{\" + stringify_array(/*::(*/f[1]/*:: :any)*/) + \"}\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n\t\t\t\tlast_sp = ff;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n\t\t\t\tstack.push(\"\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemAreaN':\n\t\t\tcase 'PtgMemNoMemN':\n\t\t\tcase 'PtgAttrNoop':\n\t\t\tcase 'PtgSheet':\n\t\t\tcase 'PtgEndSheet':\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\n\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\n\t\t}\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n\t\t\tf = formula[0][last_sp];\n\t\t\tvar _left = true;\n\t\t\tswitch(f[1][0]) {\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\n\t\t\t\tcase 4: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 0:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\n\t\t\t\tcase 5: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\n\t\t\t\tdefault:\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n\t\t\t}\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n\t\t\tlast_sp = -1;\n\t\t}\n\t}\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n\treturn stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts/*::, ref*/) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n\tvar target = blob.l + length;\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tvar rgcb;\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob/*::, length*/) {\n\tvar b;\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n\tswitch(blob[blob.l]) {\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\n\t}\n\treturn [];\n}\nfunction write_FormulaValue(value) {\n\tif(value == null) {\n\t\t// Blank String Value\n\t\tvar o = new_buf(8);\n\t\to.write_shift(1, 0x03);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0xFFFF);\n\t\treturn o;\n\t} else if(typeof value == \"number\") return write_Xnum(value);\n\treturn write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) ++blob.l;\n\tvar val = parse_FormulaValue(blob,8);\n\tvar flags = blob.read_shift(1);\n\tif(opts.biff != 2) {\n\t\tblob.read_shift(1);\n\t\tif(opts.biff >= 5) {\n\t\t\t/*var chn = */blob.read_shift(4);\n\t\t}\n\t}\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n}\nfunction write_Formula(cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, os/*:number*/) {\n\t// Cell\n\tvar o1 = write_XLSCell(R, C, os);\n\n\t// FormulaValue\n\tvar o2 = write_FormulaValue(cell.v);\n\n\t// flags + cache\n\tvar o3 = new_buf(6);\n\tvar flags = 0x01 | 0x20;\n\to3.write_shift(2, flags);\n\to3.write_shift(4, 0);\n\n\t// CellParsedFormula\n\tvar bf = new_buf(cell.bf.length);\n\tfor(var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n\n\tvar out = bconcat([o1, o2, o3, bf]);\n\treturn out;\n}\n\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n\tvar cce = data.read_shift(4);\n\tvar rgce = parse_Rgce(data, cce, opts);\n\tvar cb = data.read_shift(4);\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f/*:string*/)/*:string*/ {\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\n\t/* 5.2 Basic Expressions */\n\tif(f.charCodeAt(0) == 61) {\n\t\tf = f.slice(1);\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\n\t}\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n\t/* Part 3 Section 5.8 References */\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n\t/* TODO: something other than this */\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n}\n\nfunction csf_to_ods_formula(f/*:string*/)/*:string*/ {\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n\t/* TODO: something other than this */\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\n}\n\nfunction ods_to_csf_3D(r/*:string*/)/*:[string, string]*/ {\n\tvar a = r.split(\":\");\n\tvar s = a[0].split(\".\")[0];\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n}\n\nfunction csf_to_ods_3D(r/*:string*/)/*:string*/ {\n\treturn r.replace(/\\./,\"!\");\n}\n\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\nRELS.WS = [\n\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n];\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\n\nfunction get_sst_id(sst/*:SST*/, str/*:string*/, rev)/*:number*/ {\n\tvar i = 0, len = sst.length;\n\tif(rev) {\n\t\tif(browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n\t\t\tvar revarr = browser_has_Map ? rev.get(str) : rev[str];\n\t\t\tfor(; i < revarr.length; ++i) {\n\t\t\t\tif(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n\t\t\t}\n\t\t}\n\t} else for(; i < len; ++i) {\n\t\tif(sst[i].t === str) { sst.Count ++; return i; }\n\t}\n\tsst[len] = ({t:str}/*:any*/); sst.Count ++; sst.Unique ++;\n\tif(rev) {\n\t\tif(browser_has_Map) {\n\t\t\tif(!rev.has(str)) rev.set(str, []);\n\t\t\trev.get(str).push(len);\n\t\t} else {\n\t\t\tif(!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n\t\t\trev[str].push(len);\n\t\t}\n\t}\n\treturn len;\n}\n\nfunction col_obj_w(C/*:number*/, col) {\n\tvar p = ({min:C+1,max:C+1}/*:any*/);\n\t/* wch (chars), wpx (pixels) */\n\tvar wch = -1;\n\tif(col.MDW) MDW = col.MDW;\n\tif(col.width != null) p.customWidth = 1;\n\telse if(col.wpx != null) wch = px2char(col.wpx);\n\telse if(col.wch != null) wch = col.wch;\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n\telse if(col.width != null) p.width = col.width;\n\tif(col.hidden) p.hidden = true;\n\tif(col.level != null) { p.outlineLevel = p.level = col.level; }\n\treturn p;\n}\n\nfunction default_margins(margins/*:Margins*/, mode/*:?string*/) {\n\tif(!margins) return;\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n\tif(margins.left   == null) margins.left   = defs[0];\n\tif(margins.right  == null) margins.right  = defs[1];\n\tif(margins.top    == null) margins.top    = defs[2];\n\tif(margins.bottom == null) margins.bottom = defs[3];\n\tif(margins.header == null) margins.header = defs[4];\n\tif(margins.footer == null) margins.footer = defs[5];\n}\n\nfunction get_cell_style(styles/*:Array<any>*/, cell/*:Cell*/, opts) {\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n\tvar i = 0x3c, len = styles.length;\n\tif(z == null && opts.ssf) {\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\n\t\t\tSSF.load(cell.z, i);\n\t\t\t// $FlowIgnore\n\t\t\topts.ssf[i] = cell.z;\n\t\t\topts.revssf[cell.z] = z = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\n\tstyles[len] = {\n\t\tnumFmtId:z,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0,\n\t\txfId:0,\n\t\tapplyNumberFormat:1\n\t};\n\treturn len;\n}\n\nfunction safe_format(p/*:Cell*/, fmtid/*:number*/, fillid/*:?number*/, opts, themes, styles) {\n\ttry {\n\t\tif(opts.cellNF) p.z = SSF._table[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(p.t === 'z' && !opts.cellStyles) return;\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n\tif((!opts || opts.cellText !== false) && p.t !== 'z') try {\n\t\tif(SSF._table[fmtid] == null) SSF.load(SSFImplicit[fmtid] || \"General\", fmtid);\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\n\t\telse if(fmtid === 0) {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = SSF._general_int(p.v);\n\t\t\t\telse p.w = SSF._general_num(p.v);\n\t\t\t}\n\t\t\telse if(p.t === 'd') {\n\t\t\t\tvar dd = datenum(p.v);\n\t\t\t\tif((dd|0) === dd) p.w = SSF._general_int(dd);\n\t\t\t\telse p.w = SSF._general_num(dd);\n\t\t\t}\n\t\t\telse if(p.v === undefined) return \"\";\n\t\t\telse p.w = SSF._general(p.v,_ssfopts);\n\t\t}\n\t\telse if(p.t === 'd') p.w = SSF.format(fmtid,datenum(p.v),_ssfopts);\n\t\telse p.w = SSF.format(fmtid,p.v,_ssfopts);\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts.cellStyles) return;\n\tif(fillid != null) try {\n\t\tp.s = styles.Fills[fillid];\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n\t\t}\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n\t\t}\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\n}\n\nfunction check_ws(ws/*:Worksheet*/, sname/*:string*/, i/*:number*/) {\n\tif(ws && ws['!ref']) {\n\t\tvar range = safe_decode_range(ws['!ref']);\n\t\tif(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n\t}\n}\nfunction parse_ws_xml_dim(ws/*:Worksheet*/, s/*:string*/) {\n\tvar d = safe_decode_range(s);\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData[^>]*>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\nvar sheetprregex2= /<(?:\\w:)?sheetPr[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetPr)>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n\t/* 18.3.1.99 worksheet CT_Worksheet */\n\tvar s = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\tvar refguess/*:Range*/ = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} }/*:any*/);\n\n\tvar data1 = \"\", data2 = \"\";\n\tvar mtch/*:?any*/ = data.match(sheetdataregex);\n\tif(mtch) {\n\t\tdata1 = data.slice(0, mtch.index);\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\n\t} else data1 = data2 = data;\n\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\n\tvar sheetPr = data1.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\telse if((sheetPr = data1.match(sheetprregex2))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||\"\", s, wb, idx, styles, themes);\n\n\t/* 18.3.1.35 dimension CT_SheetDimension */\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n\tif(ridx > 0) {\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\n\t\tif(ref) parse_ws_xml_dim(s, ref[1]);\n\t}\n\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\n\tvar svs = data1.match(svsregex);\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n\t/* 18.3.1.17 cols CT_Cols */\n\tvar columns/*:Array<ColInfo>*/ = [];\n\tif(opts.cellStyles) {\n\t\t/* 18.3.1.13 col CT_Col */\n\t\tvar cols = data1.match(colregex);\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\n\t}\n\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\n\tvar afilter = data2.match(afregex);\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\n\tvar merges/*:Array<Range>*/ = [];\n\tvar _merge = data2.match(mergecregex);\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\n\tvar hlink = data2.match(hlinkregex);\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\n\tvar margins = data2.match(marginregex);\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(columns.length > 0) s[\"!cols\"] = columns;\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\treturn s;\n}\n\nfunction write_ws_xml_merges(merges/*:Array<Range>*/)/*:string*/ {\n\tif(merges.length === 0) return \"\";\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n\treturn o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tvar data = parsexmltag(sheetPr);\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\tif(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr/*:string*/, body/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/, styles, themes) {\n\tparse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n\tvar needed = false;\n\tvar props = {}, payload = null;\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\n\t\tvar cname = wb.SheetNames[idx];\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n\t\tneeded = true;\n\t\tprops.codeName = utf8write(escapexml(cname));\n\t}\n\n\tif(ws && ws[\"!outline\"]) {\n\t\tvar outlineprops = {summaryBelow:1, summaryRight:1};\n\t\tif(ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n\t\tif(ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n\t\tpayload = (payload||\"\") + writextag('outlinePr', null, outlineprops);\n\t}\n\n\tif(!needed && !payload) return;\n\to[o.length] = (writextag('sheetPr', payload, props));\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\n\t\"formatColumns\", \"formatRows\", \"formatCells\",\n\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n\t\"deleteColumns\", \"deleteRows\",\n\t\"sort\", \"autoFilter\", \"pivotTables\"\n];\nfunction write_ws_xml_protection(sp)/*:string*/ {\n\t// algorithmName, hashValue, saltValue, spinCount\n\tvar o = ({sheet:1}/*:any*/);\n\tsheetprot_deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n\tsheetprot_deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n\t/* TODO: algorithm */\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n\treturn writextag('sheetProtection', null, o);\n}\n\nfunction parse_ws_xml_hlinks(s, data/*:Array<string>*/, rels) {\n\tvar dense = Array.isArray(s);\n\tfor(var i = 0; i != data.length; ++i) {\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\n\t\tif(!val.ref) return;\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\n\t\tif(rel) {\n\t\t\tval.Target = rel.Target;\n\t\t\tif(val.location) val.Target += \"#\"+unescapexml(val.location);\n\t\t} else {\n\t\t\tval.Target = \"#\" + unescapexml(val.location);\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\n\t\t}\n\t\tval.Rel = rel;\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n\t\tvar rng = safe_decode_range(val.ref);\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n\t\t\tvar addr = encode_cell({c:C,r:R});\n\t\t\tif(dense) {\n\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\tif(!s[R][C]) s[R][C] = {t:\"z\",v:undefined};\n\t\t\t\ts[R][C].l = val;\n\t\t\t} else {\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n\t\t\t\ts[addr].l = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parse_ws_xml_margins(margin) {\n\tvar o = {};\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\n\t});\n\treturn o;\n}\nfunction write_ws_xml_margins(margin)/*:string*/ {\n\tdefault_margins(margin);\n\treturn writextag('pageMargins', null, margin);\n}\n\nfunction parse_ws_xml_cols(columns, cols) {\n\tvar seencol = false;\n\tfor(var coli = 0; coli != cols.length; ++coli) {\n\t\tvar coll = parsexmltag(cols[coli], true);\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n\t\tif(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n\t\tprocess_col(coll);\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\n\t}\n}\nfunction write_ws_xml_cols(ws, cols)/*:string*/ {\n\tvar o = [\"<cols>\"], col;\n\tfor(var i = 0; i != cols.length; ++i) {\n\t\tif(!(col = cols[i])) continue;\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\n\t}\n\to[o.length] = \"</cols>\";\n\treturn o.join(\"\");\n}\n\nfunction parse_ws_xml_autofilter(data/*:string*/) {\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n\treturn o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx)/*:string*/ {\n\tvar ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\treturn writextag(\"autoFilter\", null, {ref:ref});\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/?>/;\nfunction parse_ws_xml_sheetviews(data, wb/*:WBWBProps*/) {\n\tif(!wb.Views) wb.Views = [{}];\n\t(data.match(sviewregex)||[]).forEach(function(r/*:string*/, i/*:number*/) {\n\t\tvar tag = parsexmltag(r);\n\t\t// $FlowIgnore\n\t\tif(!wb.Views[i]) wb.Views[i] = {};\n\t\t// $FlowIgnore\n\t\tif(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n\t\t// $FlowIgnore\n\t\tif(parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n\t});\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb)/*:string*/ {\n\tvar sview = ({workbookViewId:\"0\"}/*:any*/);\n\t// $FlowIgnore\n\tif((((wb||{}).Workbook||{}).Views||[])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\n\nfunction write_ws_xml_cell(cell/*:Cell*/, ref, ws, opts/*::, idx, wb*/)/*:string*/ {\n\tif(cell.v === undefined && typeof cell.f !== \"string\" || cell.t === 'z') return \"\";\n\tvar vv = \"\";\n\tvar oldt = cell.t, oldv = cell.v;\n\tif(cell.t !== \"z\") switch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'n': vv = ''+cell.v; break;\n\t\tcase 'e': vv = BErr[cell.v]; break;\n\t\tcase 'd':\n\t\t\tif(opts && opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\n\t\t\telse {\n\t\t\t\tcell = dup(cell);\n\t\t\t\tcell.t = 'n';\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v)));\n\t\t\t}\n\t\t\tif(typeof cell.z === 'undefined') cell.z = SSF._table[14];\n\t\t\tbreak;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar v = writetag('v', escapexml(vv)), o = ({r:ref}/*:any*/);\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tif(os !== 0) o.s = os;\n\tswitch(cell.t) {\n\t\tcase 'n': break;\n\t\tcase 'd': o.t = \"d\"; break;\n\t\tcase 'b': o.t = \"b\"; break;\n\t\tcase 'e': o.t = \"e\"; break;\n\t\tcase 'z': break;\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\n\t\t\tif(cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n\t\t\tif(opts && opts.bookSST) {\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n\t\t\t\to.t = \"s\"; break;\n\t\t\t}\n\t\t\to.t = \"str\"; break;\n\t}\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n\tif(typeof cell.f == \"string\" && cell.f) {\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n\t}\n\tif(cell.l) ws['!links'].push([ref, cell.l]);\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\n\tif(cell.D) o.cm = 1;\n\treturn writextag('c', v, o);\n}\n\nvar parse_ws_xml_data = (function() {\n\tvar cellregex = /<(?:\\w+:)?c[ \\/>]/, rowregex = /<\\/(?:\\w+:)?row>/;\n\tvar rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\n\tvar match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\n\nreturn function parse_ws_xml_data(sdata/*:string*/, s, opts, guess/*:Range*/, themes, styles) {\n\tvar ri = 0, x = \"\", cells/*:Array<string>*/ = [], cref/*:?Array<string>*/ = [], idx=0, i=0, cc=0, d=\"\", p/*:any*/;\n\tvar tag, tagr = 0, tagc = 0;\n\tvar sstr, ftag;\n\tvar fmtid = 0, fillid = 0;\n\tvar do_format = Array.isArray(styles.CellXf), cf;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = [];\n\tvar dense = Array.isArray(s);\n\tvar rows/*:Array<RowInfo>*/ = [], rowobj = {}, rowrite = false;\n\tvar sheetStubs = !!opts.sheetStubs;\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n\t\tx = marr[mt].trim();\n\t\tvar xlen = x.length;\n\t\tif(xlen === 0) continue;\n\n\t\t/* 18.3.1.73 row CT_Row */\n\t\tvar rstarti = 0;\n\t\touta: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {\n\t\t\tcase \">\" /*62*/:\n\t\t\t\tif(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != \"/\") { ++ri; break outa; }\n\t\t\t\tif(opts && opts.cellStyles) {\n\t\t\t\t\t// TODO: avoid duplication\n\t\t\t\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\t\t\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\t\t\t\trowobj = {}; rowrite = false;\n\t\t\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"<\" /*60*/: rstarti = ri; break;\n\t\t}\n\t\tif(rstarti >= ri) break;\n\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\n\t\tif(opts && opts.cellStyles) {\n\t\t\trowobj = {}; rowrite = false;\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t}\n\n\t\t/* 18.3.1.4 c CT_Cell */\n\t\tcells = x.slice(ri).split(cellregex);\n\t\tfor(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != \"<\") break;\n\t\tcells = cells.slice(rslice);\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\n\t\t\tx = cells[ri].trim();\n\t\t\tif(x.length === 0) continue;\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n\t\t\tif(cref != null && cref.length === 2) {\n\t\t\t\tidx = 0; d=cref[1];\n\t\t\t\tfor(i=0; i != d.length; ++i) {\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\t\t\t\tidx = 26*idx + cc;\n\t\t\t\t}\n\t\t\t\t--idx;\n\t\t\t\ttagc = idx;\n\t\t\t} else ++tagc;\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n\t\t\td = x.slice(i);\n\t\t\tp = ({t:\"\"}/*:any*/);\n\n\t\t\tif((cref=d.match(match_v))!= null && /*::cref != null && */cref[1] !== '') p.v=unescapexml(cref[1]);\n\t\t\tif(opts.cellFormula) {\n\t\t\t\tif((cref=d.match(match_f))!= null && /*::cref != null && */cref[1] !== '') {\n\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\n\t\t\t\t\tp.f=unescapexml(utf8read(cref[1])).replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\tif(!opts.xlfn) p.f = _xlfn(p.f);\n\t\t\t\t\tif(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\n\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n\t\t\t\t\t} else if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\tvar ___f = unescapexml(utf8read(cref[1]));\n\t\t\t\t\t\tif(!opts.xlfn) ___f = _xlfn(___f);\n\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n\t\t\t\t\t}\n\t\t\t\t} else if((cref=d.match(/<f[^>]*\\/>/))) {\n\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n\t\t\t\t}\n\t\t\t\t/* TODO: factor out contains logic */\n\t\t\t\tvar _tag = decode_cell(tag.r);\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\n\t\t\t}\n\n\t\t\tif(tag.t == null && p.v === undefined) {\n\t\t\t\tif(p.f || p.F) {\n\t\t\t\t\tp.v = 0; p.t = \"n\";\n\t\t\t\t} else if(!sheetStubs) continue;\n\t\t\t\telse p.t = \"z\";\n\t\t\t}\n\t\t\telse p.t = tag.t || \"n\";\n\t\t\tif(guess.s.c > tagc) guess.s.c = tagc;\n\t\t\tif(guess.e.c < tagc) guess.e.c = tagc;\n\t\t\t/* 18.18.11 t ST_CellType */\n\t\t\tswitch(p.t) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else p.v = parseFloat(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tif(typeof p.v == 'undefined') {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tp.r = sstr.r;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'str':\n\t\t\t\t\tp.t = \"s\";\n\t\t\t\t\tp.v = (p.v!=null) ? utf8read(p.v) : '';\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inlineStr':\n\t\t\t\t\tcref = d.match(isregex);\n\t\t\t\t\tp.t = 's';\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) {\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t} else p.v = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\n\t\t\t\tcase 'd':\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, 1);\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\n\t\t\t\t\tbreak;\n\t\t\t\t/* error string in .w, number in .v */\n\t\t\t\tcase 'e':\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\n\t\t\t\t\tp.v = RBErr[p.v]; break;\n\t\t\t}\n\t\t\t/* formatting */\n\t\t\tfmtid = fillid = 0;\n\t\t\tcf = null;\n\t\t\tif(do_format && tag.s !== undefined) {\n\t\t\t\tcf = styles.CellXf[tag.s];\n\t\t\t\tif(cf != null) {\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\n\t\t\t\t\tif(opts.cellStyles) {\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles);\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && SSF.is_date(SSF._table[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\n\t\t\tif(tag.cm && opts.xlmeta) {\n\t\t\t\tvar cm = (opts.xlmeta.Types||[])[+tag.cm-1];\n\t\t\t\tif(cm && cm.name == 'XLDAPR') p.D = true;\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tvar _r = decode_cell(tag.r);\n\t\t\t\tif(!s[_r.r]) s[_r.r] = [];\n\t\t\t\ts[_r.r][_r.c] = p;\n\t\t\t} else s[tag.r] = p;\n\t\t}\n\t}\n\tif(rows.length > 0) s['!rows'] = rows;\n}; })();\n\nfunction write_ws_xml_data(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*//*::, rels*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], r/*:Array<string>*/ = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols/*:Array<string>*/ = [], R=0, C=0, rows = ws['!rows'];\n\tvar dense = Array.isArray(ws);\n\tvar params = ({r:rr}/*:any*/), row/*:RowInfo*/, height = -1;\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\n\t\tr = [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar _cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\tif(_cell === undefined) continue;\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n\t\t}\n\t\tif(r.length > 0 || (rows && rows[R])) {\n\t\t\tparams = ({r:rr}/*:any*/);\n\t\t\tif(rows && rows[R]) {\n\t\t\t\trow = rows[R];\n\t\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\t\theight = -1;\n\t\t\t\tif(row.hpx) height = px2pt(row.hpx);\n\t\t\t\telse if(row.hpt) height = row.hpt;\n\t\t\t\tif(height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\t\tif(row.level) { params.outlineLevel = row.level; }\n\t\t\t}\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\n\t\t}\n\t}\n\tif(rows) for(; R < rows.length; ++R) {\n\t\tif(rows && rows[R]) {\n\t\t\tparams = ({r:R+1}/*:any*/);\n\t\t\trow = rows[R];\n\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\theight = -1;\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\n\t\t\telse if (row.hpt) height = row.hpt;\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\n\t\t\to[o.length] = (writextag('row', \"\", params));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nvar WS_XML_ROOT = writextag('worksheet', null, {\n\t'xmlns': XMLNS.main[0],\n\t'xmlns:r': XMLNS.r\n});\n\nfunction write_ws_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, WS_XML_ROOT];\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n\tvar ws = wb.Sheets[s];\n\tif(ws == null) ws = {};\n\tvar ref = ws['!ref'] || 'A1';\n\tvar range = safe_decode_range(ref);\n\tif(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n\t\trange.e.c = Math.min(range.e.c, 0x3FFF);\n\t\trange.e.r = Math.min(range.e.c, 0xFFFFF);\n\t\tref = encode_range(range);\n\t}\n\tif(!rels) rels = {};\n\tws['!comments'] = [];\n\tvar _drawing = [];\n\n\twrite_ws_xml_sheetpr(ws, wb, idx, opts, o);\n\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n\t/* TODO: store in WB, process styles */\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n\t}));\n\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n\to[sidx = o.length] = '<sheetData/>';\n\tws['!links'] = [];\n\tif(ws['!ref'] != null) {\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\n\t}\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n\t/* sheetCalcPr */\n\n\tif(ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n\t/* protectedRanges */\n\t/* scenarios */\n\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n\t/* sortState */\n\t/* dataConsolidate */\n\t/* customSheetViews */\n\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n\t/* phoneticPr */\n\t/* conditionalFormatting */\n\t/* dataValidations */\n\n\tvar relc = -1, rel, rId = -1;\n\tif(/*::(*/ws['!links']/*::||[])*/.length > 0) {\n\t\to[o.length] = \"<hyperlinks>\";\n\t\t/*::(*/ws['!links']/*::||[])*/.forEach(function(l) {\n\t\t\tif(!l[1].Target) return;\n\t\t\trel = ({\"ref\":l[0]}/*:any*/);\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\n\t\t\t}\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\n\t\t});\n\t\to[o.length] = \"</hyperlinks>\";\n\t}\n\tdelete ws['!links'];\n\n\t/* printOptions */\n\n\tif(ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n\n\t/* pageSetup */\n\t/* headerFooter */\n\t/* rowBreaks */\n\t/* colBreaks */\n\t/* customProperties */\n\t/* cellWatches */\n\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n\t/* smartTags */\n\n\tif(_drawing.length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!drawing'] = _drawing;\n\t}\n\n\tif(ws['!comments'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!legacy'] = rId;\n\t}\n\n\t/* legacyDrawingHF */\n\t/* picture */\n\t/* oleObjects */\n\t/* controls */\n\t/* webPublishItems */\n\t/* tableParts */\n\t/* extLst */\n\n\tif(o.length>1) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n\tvar z = ({}/*:any*/);\n\tvar tgt = data.l + length;\n\tz.r = data.read_shift(4);\n\tdata.l += 4; // TODO: ixfe\n\tvar miyRw = data.read_shift(2);\n\tdata.l += 1; // TODO: top/bot padding\n\tvar flags = data.read_shift(1);\n\tdata.l = tgt;\n\tif(flags & 0x07) z.level = flags & 0x07;\n\tif(flags & 0x10) z.hidden = true;\n\tif(flags & 0x20) z.hpt = miyRw / 20;\n\treturn z;\n}\nfunction write_BrtRowHdr(R/*:number*/, range, ws) {\n\tvar o = new_buf(17+8*16);\n\tvar row = (ws['!rows']||[])[R]||{};\n\to.write_shift(4, R);\n\n\to.write_shift(4, 0); /* TODO: ixfe */\n\n\tvar miyRw = 0x0140;\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\n\telse if(row.hpt) miyRw = row.hpt * 20;\n\to.write_shift(2, miyRw);\n\n\to.write_shift(1, 0); /* top/bot padding */\n\n\tvar flags = 0x0;\n\tif(row.level) flags |= row.level;\n\tif(row.hidden) flags |= 0x10;\n\tif(row.hpx || row.hpt) flags |= 0x20;\n\to.write_shift(1, flags);\n\n\to.write_shift(1, 0); /* phonetic guide */\n\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n\tvar ncolspan = 0, lcs = o.l;\n\to.l += 4;\n\n\tvar caddr = {r:R, c:0};\n\tfor(var i = 0; i < 16; ++i) {\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n\t\tvar first = -1, last = -1;\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\n\t\t\tcaddr.c = j;\n\t\t\tvar cell = Array.isArray(ws) ? (ws[caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\n\t\t}\n\t\tif(first < 0) continue;\n\t\t++ncolspan;\n\t\to.write_shift(4, first);\n\t\to.write_shift(4, last);\n\t}\n\n\tvar l = o.l;\n\to.l = lcs;\n\to.write_shift(4, ncolspan);\n\to.l = l;\n\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n\tvar o = write_BrtRowHdr(R, range, ws);\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 'BrtRowHdr', o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo(/*::data, length*/) {\n}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n\tvar z = {};\n\tvar f = data[data.l]; ++data.l;\n\tz.above = !(f & 0x40);\n\tz.left  = !(f & 0x80);\n\t/* TODO: pull flags */\n\tdata.l += 18;\n\tz.name = parse_XLSBCodeName(data, length - 19);\n\treturn z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n\tif(o == null) o = new_buf(84+4*str.length);\n\tvar f = 0xC0;\n\tif(outl) {\n\t\tif(outl.above) f &= ~0x40;\n\t\tif(outl.left)  f &= ~0x80;\n\t}\n\to.write_shift(1, f);\n\tfor(var i = 1; i < 3; ++i) o.write_shift(1,0);\n\twrite_BrtColor({auto:1}, o);\n\to.write_shift(-4,-1);\n\to.write_shift(-4,-1);\n\twrite_XLSBCodeName(str, o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n\tvar cell = parse_XLSBCell(data);\n\treturn [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\treturn write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\treturn [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(4);\n\treturn write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\nfunction parse_BrtShortBool(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(5);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v);\n\treturn o;\n}\nfunction parse_BrtShortError(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v);\n\to.write_shift(2, 0);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\nfunction parse_BrtShortIsst(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(16);\n\twrite_XLSBCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortReal(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortRk(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RichStr(data);\n\treturn [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\n\twrite_XLSBCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(8 + 4 * cell.v.length);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'b'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'e'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_Xnum(data);\n\tvar o = [cell, value, 'n'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_XLWideString(data);\n\tvar o = [cell, value, 'str'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(4, cnt);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length/*::, opts*/) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar relId = parse_XLNullableWideString(data);\n\tvar loc = parse_XLWideString(data);\n\tvar tooltip = parse_XLWideString(data);\n\tvar display = parse_XLWideString(data);\n\tdata.l = end;\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display}/*:any*/);\n\tif(tooltip) o.Tooltip = tooltip;\n\treturn o;\n}\nfunction write_BrtHLink(l, rId) {\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n\twrite_RelID(\"rId\" + rId, o);\n\tvar locidx = l[1].Target.indexOf(\"#\");\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n\twrite_XLWideString(loc || \"\", o);\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\n\twrite_XLWideString(\"\", o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane(/*data, length, opts*/) {\n}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_RfX(data, 16);\n\tvar fAlwaysCalc = data.read_shift(1);\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar o = [rfx];\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t\tdata.l = end;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C/*:number*/, col, o) {\n\tif(o == null) o = new_buf(18);\n\tvar p = col_obj_w(C, col);\n\to.write_shift(-4, C);\n\to.write_shift(-4, C);\n\to.write_shift(4, (p.width || 10) * 256);\n\to.write_shift(4, 0/*ixfe*/); // style\n\tvar flags = 0;\n\tif(col.hidden) flags |= 0x01;\n\tif(typeof p.width == 'number') flags |= 0x02;\n\tif(col.level) flags |= (col.level << 8);\n\to.write_shift(2, flags); // bit flag\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\nfunction parse_BrtMargins(data/*::, length, opts*/)/*:Margins*/ {\n\tvar margins = ({}/*:any*/);\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n\treturn margins;\n}\nfunction write_BrtMargins(margins/*:Margins*/, o) {\n\tif(o == null) o = new_buf(6*8);\n\tdefault_margins(margins);\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins/*:any*/)[k], o); });\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data/*::, length, opts*/) {\n\tvar f = data.read_shift(2);\n\tdata.l += 28;\n\treturn { RTL: f & 0x20 };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n\tif(o == null) o = new_buf(30);\n\tvar f = 0x39c;\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n\to.write_shift(2, f); // bit flag\n\to.write_shift(4, 0);\n\to.write_shift(4, 0); // view first row\n\to.write_shift(4, 0); // view first col\n\to.write_shift(1, 0); // gridline color ICV\n\to.write_shift(1, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 100); // zoom scale\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(4, 0); // workbook view id\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n\tvar o = new_buf(24);\n\to.write_shift(4, 4);\n\to.write_shift(4, 1);\n\twrite_UncheckedRfX(ref, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n\tif(o == null) o = new_buf(16*4+2);\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n\to.write_shift(4, 1); // this record should not be written if no protection\n\t[\n\t\t[\"objects\",             false], // fObjects\n\t\t[\"scenarios\",           false], // fScenarios\n\t\t[\"formatCells\",          true], // fFormatCells\n\t\t[\"formatColumns\",        true], // fFormatColumns\n\t\t[\"formatRows\",           true], // fFormatRows\n\t\t[\"insertColumns\",        true], // fInsertColumns\n\t\t[\"insertRows\",           true], // fInsertRows\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\n\t\t[\"deleteRows\",           true], // fDeleteRows\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\n\t\t[\"sort\",                 true], // fSort\n\t\t[\"autoFilter\",           true], // fAutoFilter\n\t\t[\"pivotTables\",          true], // fPivotTables\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\n\t].forEach(function(n) {\n\t\t/*:: if(o == null) throw \"unreachable\"; */\n\t\tif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n\t});\n\treturn o;\n}\n\nfunction parse_BrtDVal(/*data, length, opts*/) {\n}\nfunction parse_BrtDVal14(/*data, length, opts*/) {\n}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar s/*:Worksheet*/ = (opts.dense ? [] : {});\n\n\tvar ref;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false, end = false;\n\tvar row, p, cf, R, C, addr, sstr, rr, cell/*:Cell*/;\n\tvar merges/*:Array<Range>*/ = [];\n\topts.biff = 12;\n\topts['!row'] = 0;\n\n\tvar ai = 0, af = false;\n\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = {};\n\tvar supbooks = opts.supbooks || /*::(*/wb/*:: :any)*/.supbooks || ([[]]/*:any*/);\n\tsupbooks.sharedf = sharedf;\n\tsupbooks.arrayf = arrayf;\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n\tif(!opts.supbooks) {\n\t\topts.supbooks = supbooks;\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n\t}\n\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtShortReal\", f:parse_BrtShortReal };\n\n\tvar cm, vm;\n\n\trecordhopper(data, function ws_parse(val, R_n, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\n\t\t\t\tref = val; break;\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\n\t\t\t\trow = val;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n\t\t\t\trr = encode_row(R = row.r);\n\t\t\t\topts['!row'] = row.r;\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\n\t\t\t\t\trowinfo[val.r] = val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\n\t\t\tcase 0x0003: /* 'BrtCellError' */\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\n\t\t\tcase 0x000D: /* 'BrtShortRk' */\n\t\t\tcase 0x000E: /* 'BrtShortError' */\n\t\t\tcase 0x000F: /* 'BrtShortBool' */\n\t\t\tcase 0x0010: /* 'BrtShortReal' */\n\t\t\tcase 0x0011: /* 'BrtShortSt' */\n\t\t\tcase 0x0012: /* 'BrtShortIsst' */\n\t\t\tcase 0x003E: /* 'BrtCellRString' */\n\t\t\t\tp = ({t:val[2]}/*:any*/);\n\t\t\t\tswitch(val[2]) {\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\n\t\t\t\t\tcase 'is': p.t = 's'; p.v = val[1].t; break;\n\t\t\t\t}\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\taf = false;\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\n\t\t\t\t\t\tvar aii = arrayf[ai];\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\n\t\t\t\t}\n\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && SSF.is_date(SSF._table[cf.numFmtId])) {\n\t\t\t\t\tvar _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t\t\t}\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.name == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\n\t\t\tcase 0x000C: /* 'BrtShortBlank' */\n\t\t\t\tif(!opts.sheetStubs || pass) break;\n\t\t\t\tp = ({t:'z',v:void 0}/*:any*/);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.name == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\n\t\t\t\tmerges.push(val); break;\n\n\t\t\tcase 0x0031: { /* 'BrtCellMeta' */\n\t\t\t\tcm = ((opts.xlmeta||{}).Types||[])[val-1];\n\t\t\t} break;\n\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\n\t\t\t\tvar rel = rels['!id'][val.relId];\n\t\t\t\tif(rel) {\n\t\t\t\t\tval.Target = rel.Target;\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\n\t\t\t\t\tval.Rel = rel;\n\t\t\t\t} else if(val.relId == '') {\n\t\t\t\t\tval.Target = \"#\" + val.loc;\n\t\t\t\t}\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\t\t\tif(!s[R][C]) s[R][C] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[R][C].l = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddr = encode_cell({c:C,r:R});\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[addr].l = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tarrayf.push(val);\n\t\t\t\tcell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr])/*:any*/);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tcell.F = encode_range(val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\n\t\t\t\tcell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tbreak;\n\n\t\t\t/* identical to 'ColInfo' in XLS */\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\n\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01), level: val.level };\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\t\ts['!margins'] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tif(val.above || val.left) s['!outline'] = { above: val.above, left: val.left };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0040: /* 'BrtDVal' */\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0097: /* 'BrtPane' */\n\t\t\t\tbreak;\n\t\t\tcase 0x0098: /* 'BrtSel' */\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\n\t\t\tcase 0x0271: /* 'BrtBigName' */\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x018C: /* 'BrtBrk' */\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\n\t\t\tcase 0x0234: /* 'BrtColor' */\n\t\t\tcase 0x041F: /* 'BrtColor14' */\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x0295: /* 'BrtListPart' */\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\n\t\t\tcase 0x01AC: /* 'BrtTable' */\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t}, opts);\n\n\tdelete opts.supbooks;\n\tdelete opts['!row'];\n\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n\tif(opts.sheetRows && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n\treturn s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, ws/*:Worksheet*/, last_seen/*:boolean*/)/*:boolean*/ {\n\tif(cell.v === undefined) return false;\n\tvar vv = \"\";\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'd': // no BrtCellDate :(\n\t\t\tcell = dup(cell);\n\t\t\tcell.z = cell.z || SSF._table[14];\n\t\t\tcell.v = datenum(parseDate(cell.v)); cell.t = 'n';\n\t\t\tbreak;\n\t\t/* falls through */\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar o/*:any*/ = ({r:R, c:C}/*:any*/);\n\t/* TODO: cell style */\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n\tswitch(cell.t) {\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v/*:any*/), opts.revStrings);\n\t\t\t\to.t = \"s\"; o.v = vv;\n\t\t\t\tif(last_seen) write_record(ba, \"BrtShortIsst\", write_BrtShortIsst(cell, o));\n\t\t\t\telse write_record(ba, \"BrtCellIsst\", write_BrtCellIsst(cell, o));\n\t\t\t} else {\n\t\t\t\to.t = \"str\";\n\t\t\t\tif(last_seen) write_record(ba, \"BrtShortSt\", write_BrtShortSt(cell, o));\n\t\t\t\telse write_record(ba, \"BrtCellSt\", write_BrtCellSt(cell, o));\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 'n':\n\t\t\t/* TODO: determine threshold for Real vs RK */\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n\t\t\t\tif(last_seen) write_record(ba, \"BrtShortRk\", write_BrtShortRk(cell, o));\n\t\t\t\telse write_record(ba, \"BrtCellRk\", write_BrtCellRk(cell, o));\n\t\t\t} else {\n\t\t\t\tif(last_seen) write_record(ba, \"BrtShortReal\", write_BrtShortReal(cell, o));\n\t\t\t\telse write_record(ba, \"BrtCellReal\", write_BrtCellReal(cell, o));\n\t\t\t} return true;\n\t\tcase 'b':\n\t\t\to.t = \"b\";\n\t\t\tif(last_seen) write_record(ba, \"BrtShortBool\", write_BrtShortBool(cell, o));\n\t\t\telse write_record(ba, \"BrtCellBool\", write_BrtCellBool(cell, o));\n\t\t\treturn true;\n\t\tcase 'e':\n\t\t\to.t = \"e\";\n\t\t\tif(last_seen) write_record(ba, \"BrtShortError\", write_BrtShortError(cell, o));\n\t\t\telse write_record(ba, \"BrtCellError\", write_BrtCellError(cell, o));\n\t\t\treturn true;\n\t}\n\tif(last_seen) write_record(ba, \"BrtShortBlank\", write_BrtShortBlank(cell, o));\n\telse write_record(ba, \"BrtCellBlank\", write_BrtCellBlank(cell, o));\n\treturn true;\n}\n\nfunction write_CELLTABLE(ba, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols/*:Array<string>*/ = [];\n\twrite_record(ba, 'BrtBeginSheetData');\n\tvar dense = Array.isArray(ws);\n\tvar cap = range.e.r;\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n\tfor(var R = range.s.r; R <= cap; ++R) {\n\t\trr = encode_row(R);\n\t\t/* [ACCELLTABLE] */\n\t\t/* BrtRowHdr */\n\t\twrite_row_header(ba, ws, range, R);\n\t\tvar last_seen = false;\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t/* *16384CELL */\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) { last_seen = false; continue; }\n\t\t\t/* write cell */\n\t\t\tlast_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen);\n\t\t}\n\t}\n\twrite_record(ba, 'BrtEndSheetData');\n}\n\nfunction write_MERGECELLS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!merges']) return;\n\twrite_record(ba, 'BrtBeginMergeCells', write_BrtBeginMergeCells(ws['!merges'].length));\n\tws['!merges'].forEach(function(m) { write_record(ba, 'BrtMergeCell', write_BrtMergeCell(m)); });\n\twrite_record(ba, 'BrtEndMergeCells');\n}\n\nfunction write_COLINFOS(ba, ws/*:Worksheet*//*::, idx:number, opts, wb:Workbook*/) {\n\tif(!ws || !ws['!cols']) return;\n\twrite_record(ba, 'BrtBeginColInfos');\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 'BrtColInfo', write_BrtColInfo(i, m)); });\n\twrite_record(ba, 'BrtEndColInfos');\n}\n\nfunction write_IGNOREECS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!ref']) return;\n\twrite_record(ba, 'BrtBeginCellIgnoreECs');\n\twrite_record(ba, 'BrtCellIgnoreEC', write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n\twrite_record(ba, 'BrtEndCellIgnoreECs');\n}\n\nfunction write_HLINKS(ba, ws/*:Worksheet*/, rels) {\n\t/* *BrtHLink */\n\tws['!links'].forEach(function(l) {\n\t\tif(!l[1].Target) return;\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n\t\twrite_record(ba, \"BrtHLink\", write_BrtHLink(l, rId));\n\t});\n\tdelete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws/*:Worksheet*/, idx/*:number*/, rels) {\n\t/* [BrtLegacyDrawing] */\n\tif(ws['!comments'].length > 0) {\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\twrite_record(ba, \"BrtLegacyDrawing\", write_RelID(\"rId\" + rId));\n\t\tws['!legacy'] = rId;\n\t}\n}\n\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n\tif(!ws['!autofilter']) return;\n\tvar data = ws['!autofilter'];\n\tvar ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n\t/* Update FilterDatabase defined name for the worksheet */\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\n\twrite_record(ba, \"BrtBeginAFilter\", write_UncheckedRfX(safe_decode_range(ref)));\n\t/* *FILTERCOLUMN */\n\t/* [SORTSTATE] */\n\t/* BrtEndAFilter */\n\twrite_record(ba, \"BrtEndAFilter\");\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n\twrite_record(ba, \"BrtBeginWsViews\");\n\t{ /* 1*WSVIEW2 */\n\t\t/* [ACUID] */\n\t\twrite_record(ba, \"BrtBeginWsView\", write_BrtBeginWsView(ws, Workbook));\n\t\t/* [BrtPane] */\n\t\t/* *4BrtSel */\n\t\t/* *4SXSELECT */\n\t\t/* *FRT */\n\t\twrite_record(ba, \"BrtEndWsView\");\n\t}\n\t/* *FRT */\n\twrite_record(ba, \"BrtEndWsViews\");\n}\n\nfunction write_WSFMTINFO(/*::ba, ws*/) {\n\t/* [ACWSFMTINFO] */\n\t//write_record(ba, \"BrtWsFmtInfo\", write_BrtWsFmtInfo(ws));\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n\tif(!ws['!protect']) return;\n\t/* [BrtSheetProtectionIso] */\n\twrite_record(ba, \"BrtSheetProtection\", write_BrtSheetProtection(ws['!protect']));\n}\n\nfunction write_ws_bin(idx/*:number*/, opts, wb/*:Workbook*/, rels) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar c/*:string*/ = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\n\tif(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n\t\tr.e.c = Math.min(r.e.c, 0x3FFF);\n\t\tr.e.r = Math.min(r.e.c, 0xFFFFF);\n\t}\n\tws['!links'] = [];\n\t/* passed back to write_zip and removed there */\n\tws['!comments'] = [];\n\twrite_record(ba, \"BrtBeginSheet\");\n\tif(wb.vbaraw || ws['!outline']) write_record(ba, \"BrtWsProp\", write_BrtWsProp(c, ws['!outline']));\n\twrite_record(ba, \"BrtWsDim\", write_BrtWsDim(r));\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\n\twrite_WSFMTINFO(ba, ws);\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\n\t/* [BrtSheetCalcProp] */\n\twrite_SHEETPROTECT(ba, ws);\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\n\t/* [SCENMAN] */\n\twrite_AUTOFILTER(ba, ws, wb, idx);\n\t/* [SORTSTATE] */\n\t/* [DCON] */\n\t/* [USERSHVIEWS] */\n\twrite_MERGECELLS(ba, ws);\n\t/* [BrtPhoneticInfo] */\n\t/* *CONDITIONALFORMATTING */\n\t/* [DVALS] */\n\twrite_HLINKS(ba, ws, rels);\n\t/* [BrtPrintOptions] */\n\tif(ws['!margins']) write_record(ba, \"BrtMargins\", write_BrtMargins(ws['!margins']));\n\t/* [BrtPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* [RWBRK] */\n\t/* [COLBRK] */\n\t/* *BrtBigName */\n\t/* [CELLWATCHES] */\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n\t/* [SMARTTAGS] */\n\t/* [BrtDrawing] */\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [OLEOBJECTS] */\n\t/* [ACTIVEXCONTROLS] */\n\t/* [WEBPUBITEMS] */\n\t/* [LISTPARTS] */\n\t/* FRTWORKSHEET */\n\twrite_record(ba, \"BrtEndSheet\");\n\treturn ba.end();\n}\nRELS.CHART = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\";\nRELS.CHARTEX = \"http://schemas.microsoft.com/office/2014/relationships/chartEx\";\n\nfunction parse_Cache(data/*:string*/)/*:[Array<number|string>, string, ?string]*/ {\n\tvar col/*:Array<number|string>*/ = [];\n\tvar num = data.match(/^<c:numCache>/);\n\tvar f;\n\n\t/* 21.2.2.150 pt CT_NumVal */\n\t(data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n\t\tif(!q) return;\n\t\tcol[+q[1]] = num ? +q[2] : q[2];\n\t});\n\n\t/* 21.2.2.71 formatCode CT_Xstring */\n\tvar nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\n\n\t(data.match(/<c:f>(.*?)<\\/c:f>/mg)||[]).forEach(function(F) { f = F.replace(/<.*?>/g,\"\"); });\n\n\treturn [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data/*:?string*/, name/*:string*/, opts, rels, wb, csheet) {\n\tvar cs/*:Worksheet*/ = ((csheet || {\"!type\":\"chart\"})/*:any*/);\n\tif(!data) return csheet;\n\t/* 21.2.2.27 chart CT_Chart */\n\n\tvar C = 0, R = 0, col = \"A\";\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\t/* 21.2.2.120 numCache CT_NumData */\n\t(data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\n\t\tvar cache = parse_Cache(nc);\n\t\trefguess.s.r = refguess.s.c = 0;\n\t\trefguess.e.c = C;\n\t\tcol = encode_col(C);\n\t\tcache[0].forEach(function(n,i) {\n\t\t\tcs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n\t\t\tR = i;\n\t\t});\n\t\tif(refguess.e.r < R) refguess.e.r = R;\n\t\t++C;\n\t});\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\n\treturn cs;\n}\nRELS.CS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\";\n\nvar CS_XML_ROOT = writextag('chartsheet', null, {\n\t'xmlns': XMLNS.main[0],\n\t'xmlns:r': XMLNS.r\n});\n\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\n\tif(!rels) rels = {'!id':{}};\n\tvar s = ({'!type':\"chart\", '!drawel':null, '!rel':\"\"}/*:any*/);\n\tvar m;\n\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\n\tvar sheetPr = data.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.36 drawing CT_Drawing */\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, CS_XML_ROOT];\n\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length/*:number*/) {\n\tdata.l += 10;\n\tvar name = parse_XLWideString(data, length - 10);\n\treturn { name: name };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!drawel':null, '!rel':\"\"};\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function cs_parse(val, R_n, RT) {\n\t\tswitch(RT) {\n\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\t\ts['!rel'] = val; break;\n\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t}, opts);\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginSheet\");\n\t/* [BrtCsProp] */\n\t/* CSVIEWS */\n\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n\t/* [USERCSVIEWS] */\n\t/* [BrtMargins] */\n\t/* [BrtCsPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* BrtDrawing */\n\t/* [BrtLegacyDrawing] */\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [WEBPUBITEMS] */\n\t/* FRTCHARTSHEET */\n\twrite_record(ba, \"BrtEndSheet\");\n\treturn ba.end();\n}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [\n\t['allowRefreshQuery',           false, \"bool\"],\n\t['autoCompressPictures',        true,  \"bool\"],\n\t['backupFile',                  false, \"bool\"],\n\t['checkCompatibility',          false, \"bool\"],\n\t['CodeName',                    ''],\n\t['date1904',                    false, \"bool\"],\n\t['defaultThemeVersion',         0,      \"int\"],\n\t['filterPrivacy',               false, \"bool\"],\n\t['hidePivotFieldList',          false, \"bool\"],\n\t['promptedSolutions',           false, \"bool\"],\n\t['publishItems',                false, \"bool\"],\n\t['refreshAllConnections',       false, \"bool\"],\n\t['saveExternalLinkValues',      true,  \"bool\"],\n\t['showBorderUnselectedTables',  true,  \"bool\"],\n\t['showInkAnnotation',           true,  \"bool\"],\n\t['showObjects',                 'all'],\n\t['showPivotChartFilter',        false, \"bool\"],\n\t['updateLinks', 'userSet']\n];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [\n\t['activeTab',                   0,      \"int\"],\n\t['autoFilterDateGrouping',      true,  \"bool\"],\n\t['firstSheet',                  0,      \"int\"],\n\t['minimized',                   false, \"bool\"],\n\t['showHorizontalScroll',        true,  \"bool\"],\n\t['showSheetTabs',               true,  \"bool\"],\n\t['showVerticalScroll',          true,  \"bool\"],\n\t['tabRatio',                    600,    \"int\"],\n\t['visibility',                  'visible']\n\t//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n\t//['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [\n\t['calcCompleted', 'true'],\n\t['calcMode', 'auto'],\n\t['calcOnSave', 'true'],\n\t['concurrentCalc', 'true'],\n\t['fullCalcOnLoad', 'false'],\n\t['fullPrecision', 'true'],\n\t['iterate', 'false'],\n\t['iterateCount', '100'],\n\t['iterateDelta', '0.001'],\n\t['refMode', 'A1']\n];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\n\t\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction push_defaults(target, defaults) {\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\n\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n\t\t}\n\t}\n}\n\nfunction parse_wb_defaults(wb) {\n\tpush_defaults(wb.WBProps, WBPropsDef);\n\tpush_defaults(wb.CalcPr, CalcPrDef);\n\n\tpush_defaults_array(wb.WBView, WBViewDef);\n\tpush_defaults_array(wb.Sheets, SheetDef);\n\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\n\nfunction safe1904(wb/*:Workbook*/)/*:string*/ {\n\t/* TODO: store date1904 somewhere else */\n\tif(!wb.Workbook) return \"false\";\n\tif(!wb.Workbook.WBProps) return \"false\";\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\n\nvar badchars = \"][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n/*:string*/, safe/*:?boolean*/)/*:boolean*/ {\n\tif(n.length > 31) { if(safe) return false; throw new Error(\"Sheet names cannot exceed 31 chars\"); }\n\tvar _good = true;\n\tbadchars.forEach(function(c) {\n\t\tif(n.indexOf(c) == -1) return;\n\t\tif(!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n\t\t_good = false;\n\t});\n\treturn _good;\n}\nfunction check_wb_names(N, S, codes) {\n\tN.forEach(function(n,i) {\n\t\tcheck_ws_name(n);\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n\t\tif(codes) {\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n\t\t}\n\t});\n}\nfunction check_wb(wb) {\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n\t/* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts)/*:WorkbookFile*/ {\n\tif(!data) throw new Error(\"Could not find file\");\n\tvar wb = /*::(*/{ AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" }/*::)*/;\n\tvar pass = false, xmlns = \"xmlns\";\n\tvar dname = {}, dnstart = 0;\n\tdata.replace(tagregex, function xml_wb(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\n\t\t\tcase '<workbook':\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n\t\t\t\twb.xmlns = y[xmlns];\n\t\t\t\tbreak;\n\t\t\tcase '</workbook>': break;\n\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\n\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\n\t\t\tcase '<fileSharing':\n\t\t\t\tbreak;\n\t\t\tcase '<fileSharing/>': break;\n\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\n\t\t\tcase '<workbookPr':\n\t\t\tcase '<workbookPr/>':\n\t\t\t\tWBPropsDef.forEach(function(w) {\n\t\t\t\t\tif(y[w[0]] == null) return;\n\t\t\t\t\tswitch(w[2]) {\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n\t\t\t\tbreak;\n\t\t\tcase '</workbookPr>': break;\n\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n\t\t\tcase '<workbookProtection':\n\t\t\t\tbreak;\n\t\t\tcase '<workbookProtection/>': break;\n\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\n\t\t\tcase '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n\t\t\tcase '</workbookView>': break;\n\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\n\t\t\tcase '<sheet':\n\t\t\t\tswitch(y.state) {\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\n\t\t\t\t\tdefault: y.Hidden = 0;\n\t\t\t\t}\n\t\t\t\tdelete y.state;\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\n\t\t\tcase '</sheet>': break;\n\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\n\t\t\tcase '<functionGroup': break;\n\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\n\t\t\tcase '<externalReference': break;\n\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\n\t\t\tcase '<definedNames/>': break;\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\n\t\t\tcase '</definedNames>': pass=false; break;\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\n\t\t\tcase '<definedName': {\n\t\t\t\tdname = {};\n\t\t\t\tdname.Name = utf8read(y.name);\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\n\t\t\t\tif(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n\t\t\t\tdnstart = idx + x.length;\n\t\t\t}\tbreak;\n\t\t\tcase '</definedName>': {\n\t\t\t\tdname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n\t\t\t\twb.Names.push(dname);\n\t\t\t} break;\n\t\t\tcase '<definedName/>': break;\n\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '</calcPr>': break;\n\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\n\t\t\tcase '<oleSize': break;\n\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n\t\t\t/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\n\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\n\t\t\tcase '<pivotCache': break;\n\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\n\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n\t\t\t/* 18.2.22 smartTagType CT_SmartTagType ? */\n\t\t\tcase '<smartTagType': break;\n\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\n\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\n\t\t\tcase '<webPublishObject': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\t/* Others */\n\t\t\tcase '<ArchID': break;\n\t\t\tcase '<AlternateContent':\n\t\t\tcase '<AlternateContent>': pass=true; break;\n\t\t\tcase '</AlternateContent>': pass=false; break;\n\n\t\t\t/* TODO */\n\t\t\tcase '<revisionPtr': break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n\t\t}\n\t\treturn x;\n\t});\n\tif(XMLNS.main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n\tparse_wb_defaults(wb);\n\n\treturn wb;\n}\n\nvar WB_XML_ROOT = writextag('workbook', null, {\n\t'xmlns': XMLNS.main[0],\n\t//'xmlns:mx': XMLNS.mx,\n\t//'xmlns:s': XMLNS.main[0],\n\t'xmlns:r': XMLNS.r\n});\n\nfunction write_wb_xml(wb/*:Workbook*//*::, opts:?WriteOpts*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to[o.length] = WB_XML_ROOT;\n\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n\t/* fileVersion */\n\t/* fileSharing */\n\n\tvar workbookPr/*:any*/ = ({codeName:\"ThisWorkbook\"}/*:any*/);\n\tif(wb.Workbook && wb.Workbook.WBProps) {\n\t\tWBPropsDef.forEach(function(x) {\n\t\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == null) return;\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == x[1]) return;\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]/*:any*/);\n\t\t});\n\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\tif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n\t}\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\n\n\t/* workbookProtection */\n\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\n\tvar i = 0;\n\n\t/* bookViews only written if first worksheet is hidden */\n\tif(sheets && sheets[0] && !!sheets[0].Hidden) {\n\t\to[o.length] = \"<bookViews>\";\n\t\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\t\tif(!sheets[i]) break;\n\t\t\tif(!sheets[i].Hidden) break;\n\t\t}\n\t\tif(i == wb.SheetNames.length) i = 0;\n\t\to[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n\t\to[o.length] = \"</bookViews>\";\n\t}\n\n\to[o.length] = \"<sheets>\";\n\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))}/*:any*/);\n\t\tsht.sheetId = \"\"+(i+1);\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\n\t\t\tcase 1: sht.state = \"hidden\"; break;\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\n\t\t}\n\t\to[o.length] = (writextag('sheet',null,sht));\n\t}\n\to[o.length] = \"</sheets>\";\n\n\t/* functionGroups */\n\t/* externalReferences */\n\n\tif(write_names) {\n\t\to[o.length] = \"<definedNames>\";\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n\t\t\tvar d/*:any*/ = {name:n.Name};\n\t\t\tif(n.Comment) d.comment = n.Comment;\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n\t\t\tif(n.Hidden) d.hidden = \"1\";\n\t\t\tif(!n.Ref) return;\n\t\t\to[o.length] = writextag('definedName', escapexml(n.Ref), d);\n\t\t});\n\t\to[o.length] = \"</definedNames>\";\n\t}\n\n\t/* calcPr */\n\t/* oleSize */\n\t/* customWorkbookViews */\n\t/* pivotCaches */\n\t/* smartTagPr */\n\t/* smartTagTypes */\n\t/* webPublishing */\n\t/* fileRecoveryPr */\n\t/* webPublishObjects */\n\t/* extLst */\n\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length/*:number*/) {\n\tvar z = {};\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\n\tz.iTabID = data.read_shift(4);\n\tz.strRelID = parse_RelID(data,length-8);\n\tz.name = parse_XLWideString(data);\n\treturn z;\n}\nfunction write_BrtBundleSh(data, o) {\n\tif(!o) o = new_buf(127);\n\to.write_shift(4, data.Hidden);\n\to.write_shift(4, data.iTabID);\n\twrite_RelID(data.strRelID, o);\n\twrite_XLWideString(data.name.slice(0,31), o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length)/*:WBProps*/ {\n\tvar o/*:WBProps*/ = ({}/*:any*/);\n\tvar flags = data.read_shift(4);\n\to.defaultThemeVersion = data.read_shift(4);\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\n\tif(strName.length > 0) o.CodeName = strName;\n\to.autoCompressPictures = !!(flags & 0x10000);\n\to.backupFile = !!(flags & 0x40);\n\to.checkCompatibility = !!(flags & 0x1000);\n\to.date1904 = !!(flags & 0x01);\n\to.filterPrivacy = !!(flags & 0x08);\n\to.hidePivotFieldList = !!(flags & 0x400);\n\to.promptedSolutions = !!(flags & 0x10);\n\to.publishItems = !!(flags & 0x800);\n\to.refreshAllConnections = !!(flags & 0x40000);\n\to.saveExternalLinkValues = !!(flags & 0x80);\n\to.showBorderUnselectedTables = !!(flags & 0x04);\n\to.showInkAnnotation = !!(flags & 0x20);\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n\to.showPivotChartFilter = !!(flags & 0x8000);\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n\treturn o;\n}\nfunction write_BrtWbProp(data/*:?WBProps*/, o) {\n\tif(!o) o = new_buf(72);\n\tvar flags = 0;\n\tif(data) {\n\t\t/* TODO: mirror parse_BrtWbProp fields */\n\t\tif(data.filterPrivacy) flags |= 0x08;\n\t}\n\to.write_shift(4, flags);\n\to.write_shift(4, 0);\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n\treturn o.slice(0, o.l);\n}\n\nfunction parse_BrtFRTArchID$(data, length) {\n\tvar o = {};\n\tdata.read_shift(4);\n\to.ArchID = data.read_shift(4);\n\tdata.l += length - 8;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n\tvar end = data.l + length;\n\tdata.l += 4; //var flags = data.read_shift(4);\n\tdata.l += 1; //var chKey = data.read_shift(1);\n\tvar itab = data.read_shift(4);\n\tvar name = parse_XLNameWideString(data);\n\tvar formula = parse_XLSBNameParsedFormula(data, 0, opts);\n\tvar comment = parse_XLNullableWideString(data);\n\t//if(0 /* fProc */) {\n\t\t// unusedstring1: XLNullableWideString\n\t\t// description: XLNullableWideString\n\t\t// helpTopic: XLNullableWideString\n\t\t// unusedstring2: XLNullableWideString\n\t//}\n\tdata.l = end;\n\tvar out = ({Name:name, Ptg:formula}/*:any*/);\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\n\tif(comment) out.Comment = comment;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts)/*:WorkbookFile*/ {\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\n\tif(!opts) opts = {};\n\topts.biff = 12;\n\n\tvar Names = [];\n\tvar supbooks = ([[]]/*:any*/);\n\tsupbooks.SheetNames = [];\n\tsupbooks.XTI = [];\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ };\n\n\trecordhopper(data, function hopper_wb(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\n\t\t\t\tsupbooks.SheetNames.push(val.name);\n\t\t\t\twb.Sheets.push(val); break;\n\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\n\t\t\t\twb.WBProps = val; break;\n\n\t\t\tcase 0x0027: /* 'BrtName' */\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\n\t\t\t\tval.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n\t\t\t\tdelete opts.SID;\n\t\t\t\tdelete val.Ptg;\n\t\t\t\tNames.push(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\n\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\n\t\t\t\telse supbooks.push([RT, val]);\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\n\t\t\t\tbreak;\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\n\t\t\tcase 0x009E: /* 'BrtBookView' */\n\t\t\tcase 0x008F: /* 'BrtBeginBundleShs' */\n\t\t\tcase 0x0298: /* 'BrtBeginFnGroup' */\n\t\t\tcase 0x0161: /* 'BrtBeginExternals' */\n\t\t\t\tbreak;\n\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tstate.push(R_n); pass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != \"BrtACBegin\" && state[state.length-1] != \"BrtFRTBegin\")) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t}, opts);\n\n\tparse_wb_defaults(wb);\n\n\t// $FlowIgnore\n\twb.Names = Names;\n\n\t(wb/*:any*/).supbooks = supbooks;\n\treturn wb;\n}\n\nfunction write_BUNDLESHS(ba, wb/*::, opts*/) {\n\twrite_record(ba, \"BrtBeginBundleShs\");\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n\t\twrite_record(ba, \"BrtBundleSh\", write_BrtBundleSh(d));\n\t}\n\twrite_record(ba, \"BrtEndBundleShs\");\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n\tif(!o) o = new_buf(127);\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n\twrite_XLWideString(\"SheetJS\", o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(\"7262\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n\tif(!o) o = new_buf(29);\n\to.write_shift(-4, 0);\n\to.write_shift(-4, 460);\n\to.write_shift(4,  28800);\n\to.write_shift(4,  17600);\n\to.write_shift(4,  500);\n\to.write_shift(4,  idx);\n\to.write_shift(4,  idx);\n\tvar flags = 0x78;\n\to.write_shift(1,  flags);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\nfunction write_BOOKVIEWS(ba, wb/*::, opts*/) {\n\t/* required if hidden tab appears before visible tab */\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\n\tvar sheets = wb.Workbook.Sheets;\n\tvar i = 0, vistab = -1, hidden = -1;\n\tfor(; i < sheets.length; ++i) {\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n\t}\n\tif(hidden > vistab) return;\n\twrite_record(ba, \"BrtBeginBookViews\");\n\twrite_record(ba, \"BrtBookView\", write_BrtBookView(vistab));\n\t/* 1*(BrtBookView *FRT) */\n\twrite_record(ba, \"BrtEndBookViews\");\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginBook\");\n\twrite_record(ba, \"BrtFileVersion\", write_BrtFileVersion());\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\n\twrite_record(ba, \"BrtWbProp\", write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n\t/* [ACABSPATH] */\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\n\twrite_BOOKVIEWS(ba, wb, opts);\n\twrite_BUNDLESHS(ba, wb, opts);\n\t/* [FNGROUP] */\n\t/* [EXTERNALS] */\n\t/* *BrtName */\n\t/* write_record(ba, \"BrtCalcProp\", write_BrtCalcProp()); */\n\t/* [BrtOleSize] */\n\t/* *(BrtUserBookView *FRT) */\n\t/* [PIVOTCACHEIDS] */\n\t/* [BrtWbFactoid] */\n\t/* [SMARTTAGTYPES] */\n\t/* [BrtWebOpt] */\n\t/* write_record(ba, \"BrtFileRecover\", write_BrtFileRecover()); */\n\t/* [WEBPUBITEMS] */\n\t/* [CRERRS] */\n\t/* FRTWORKBOOK */\n\twrite_record(ba, \"BrtEndBook\");\n\n\treturn ba.end();\n}\nfunction parse_wb(data, name/*:string*/, opts)/*:WorkbookFile*/ {\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data/*:any*/), opts);\n\treturn parse_wb_xml((data/*:any*/), opts);\n}\n\nfunction parse_ws(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ws_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_cs(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_cs_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ms(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ms_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ds(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ds_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_sty(data, name/*:string*/, themes, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data/*:any*/), themes, opts);\n\treturn parse_sty_xml((data/*:any*/), themes, opts);\n}\n\nfunction parse_theme(data/*:string*/, name/*:string*/, opts) {\n\treturn parse_theme_xml(data, opts);\n}\n\nfunction parse_sst(data, name/*:string*/, opts)/*:SST*/ {\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data/*:any*/), opts);\n\treturn parse_sst_xml((data/*:any*/), opts);\n}\n\nfunction parse_cmnt(data, name/*:string*/, opts)/*:Array<RawComment>*/ {\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data/*:any*/), opts);\n\treturn parse_comments_xml((data/*:any*/), opts);\n}\n\nfunction parse_cc(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data/*:any*/), name, opts);\n\treturn parse_cc_xml((data/*:any*/), name, opts);\n}\n\nfunction parse_xlink(data, rel, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data/*:any*/), rel, name, opts);\n\treturn parse_xlink_xml((data/*:any*/), rel, name, opts);\n}\n\nfunction parse_xlmeta(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlmeta_bin((data/*:any*/), name, opts);\n\treturn parse_xlmeta_xml((data/*:any*/), name, opts);\n}\n\nfunction write_wb(wb, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\n}\n\nfunction write_ws(data/*:number*/, name/*:string*/, opts, wb/*:Workbook*/, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction write_cs(data/*:number*/, name/*:string*/, opts, wb/*:Workbook*/, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\n}\n\nfunction write_sty(data, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\n}\n\nfunction write_sst(data/*:SST*/, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\n}\n\nfunction write_cmnt(data/*:Array<any>*/, name/*:string*/, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\n}\n/*\nfunction write_cc(data, name:string, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\n}\n*/\n\nfunction write_xlmeta(name/*:string*/) {\n\treturn (name.slice(-4)===\".bin\" ? write_xlmeta_bin : write_xlmeta_xml)();\n}\nvar attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag/*:string*/, skip_root/*:?boolean*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z/*:any*/ = ([]/*:any*/); if(!skip_root) z[0] = words[0];\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\nfunction xlml_parsexmltagobj(tag/*:string*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = {};\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\n\n// ----\n\nfunction xlml_format(format, value)/*:string*/ {\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\n\tif(fmt === \"General\") return SSF._general(value);\n\treturn SSF.format(fmt, value);\n}\n\nfunction xlml_set_custprop(Custprops, key, cp, val/*:string*/) {\n\tvar oval/*:any*/ = val;\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\n\t}\n\tCustprops[unescapexml(key)] = oval;\n}\n\nfunction safe_format_xlml(cell/*:Cell*/, nf, o) {\n\tif(cell.t === 'z') return;\n\tif(!o || o.cellText !== false) try {\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n\t\telse if(nf === \"General\") {\n\t\t\tif(cell.t === 'n') {\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = SSF._general_int(cell.v);\n\t\t\t\telse cell.w = SSF._general_num(cell.v);\n\t\t\t}\n\t\t\telse cell.w = SSF._general(cell.v);\n\t\t}\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v);\n\t} catch(e) { if(o.WTF) throw e; }\n\ttry {\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\n\t\tif(o.cellNF) cell.z = z;\n\t\tif(o.cellDates && cell.t == 'n' && SSF.is_date(z)) {\n\t\t\tvar _d = SSF.parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t}\n\t} catch(e) { if(o.WTF) throw e; }\n}\n\nfunction process_style_xlml(styles, stag, opts) {\n\tif(opts.cellStyles) {\n\t\tif(stag.Interior) {\n\t\t\tvar I = stag.Interior;\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n\t\t}\n\t}\n\tstyles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell/*:any*/, base, styles, csty, row, arrayf, o) {\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n\tvar interiors = [];\n\tvar i = 0;\n\tif(sid === undefined && row) sid = row.StyleID;\n\tif(sid === undefined && csty) sid = csty.StyleID;\n\twhile(styles[sid] !== undefined) {\n\t\tif(styles[sid].nf) nf = styles[sid].nf;\n\t\tif(styles[sid].Interior) interiors.push(styles[sid].Interior);\n\t\tif(!styles[sid].Parent) break;\n\t\tsid = styles[sid].Parent;\n\t}\n\tswitch(data.Type) {\n\t\tcase 'Boolean':\n\t\t\tcell.t = 'b';\n\t\t\tcell.v = parsexmlbool(xml);\n\t\t\tbreak;\n\t\tcase 'String':\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n\t\t\tcell.v = (xml.indexOf(\"<\") > -1 ? unescapexml(ss||xml).replace(/<.*?>/g, \"\") : cell.r); // todo: BR etc\n\t\t\tbreak;\n\t\tcase 'DateTime':\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\n\t\t\tcell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\n\t\t\telse if(cell.v<60) cell.v = cell.v -1;\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n\t\t\t/* falls through */\n\t\tcase 'Number':\n\t\t\tif(cell.v === undefined) cell.v=+xml;\n\t\t\tif(!cell.t) cell.t = 'n';\n\t\t\tbreak;\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n\t\tdefault:\n\t\t\tif(xml == \"\" && ss == \"\") { cell.t = 'z'; }\n\t\t\telse { cell.t = 's'; cell.v = xlml_fixstr(ss||xml); }\n\t\t\tbreak;\n\t}\n\tsafe_format_xlml(cell, nf, o);\n\tif(o.cellFormula !== false) {\n\t\tif(cell.Formula) {\n\t\t\tvar fstr = unescapexml(cell.Formula);\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n\t\t\tcell.f = rc_to_a1(fstr, base);\n\t\t\tdelete cell.Formula;\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n\t\t\telse if(cell.ArrayRange) {\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\tcell.F = arrayf[i][1];\n\t\t}\n\t}\n\tif(o.cellStyles) {\n\t\tinteriors.forEach(function(x) {\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\n\t\t});\n\t\tcell.s = S;\n\t}\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\n\nfunction xlml_clean_comment(comment/*:any*/) {\n\tcomment.t = comment.v || \"\";\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\tcomment.v = comment.w = comment.ixfe = undefined;\n}\n\nfunction xlml_normalize(d)/*:string*/ {\n\tif(has_buf &&/*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/ Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\t/* duktape */\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\n}\n\n/* TODO: Everything */\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?><!\\/:]*:|)([^\\s?<>:\\/]+)(?:[\\s?:\\/][^>]*)?>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\nfunction parse_xlml_xml(d, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tmake_ssf(SSF);\n\tvar str = debom(xlml_normalize(d));\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n\t\tif(typeof cptable !== 'undefined') str = cptable.utils.decode(65001, char_codes(str));\n\t\telse str = utf8read(str);\n\t}\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n\topening = opening.replace(/\".*?\"/g, \"\");\n\tif((opening.indexOf(\">\") & 1023) > Math.min((opening.indexOf(\",\") & 1023), (opening.indexOf(\";\")&1023))) { var _o = dup(opts); _o.type = \"string\"; return PRN.to_workbook(str, _o); }\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n\tif(ishtml) return HTML_.to_workbook(str, opts);\n\tvar Rn;\n\tvar state = [], tmp;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar sheets = {}, sheetnames/*:Array<string>*/ = [], cursheet/*:Worksheet*/ = (opts.dense ? [] : {}), sheetname = \"\";\n\tvar table = {}, cell = ({}/*:any*/), row = {};// eslint-disable-line no-unused-vars\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n\tvar c = 0, r = 0;\n\tvar refguess/*:Range*/ = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\tvar styles = {}, stag = {};\n\tvar ss = \"\", fidx = 0;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\n\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\tvar cstys = [], csty, seencol = false;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar rowinfo/*:Array<RowInfo>*/ = [], rowobj = {}, cc = 0, rr = 0;\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false} }/*:any*/), wsprops = {};\n\txlmlregex.lastIndex = 0;\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\n\tvar raw_Rn3 = \"\";\n\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase())) {\n\t\tcase 'data' /*case 'Data'*/:\n\t\t\tif(raw_Rn3 == \"data\") {\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(state[state.length-1][1]) break;\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==/*\"Comment\"*/\"comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n\t\t\tbreak;\n\t\tcase 'cell' /*case 'Cell'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif(comments.length > 0) cell.c = comments;\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!cursheet[r]) cursheet[r] = [];\n\t\t\t\t\t\tcursheet[r][c] = cell;\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\n\t\t\t\t}\n\t\t\t\tif(cell.HRef) {\n\t\t\t\t\tcell.l = ({Target:unescapexml(cell.HRef)}/*:any*/);\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\n\t\t\t\t}\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\n\t\t\t\t\tmerges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n\t\t\t\t}\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\t/*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n\t\t\t\t\tfor(var cma = c; cma <= cc; ++cma) {\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!cursheet[cmd]) cursheet[cmd] = [];\n\t\t\t\t\t\t\t\t\tcursheet[cmd][cma] = {t:'z'};\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = cc + 1;\n\t\t\t\t}\n\t\t\t\telse ++c;\n\t\t\t} else {\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\n\t\t\t\tcomments = [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'row' /*case 'Row'*/:\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\t}\n\t\t\t\tc = 0; ++r;\n\t\t\t} else {\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\trowobj = {};\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n\t\t\t\t\trowinfo[r] = rowobj;\n\t\t\t\t}\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'worksheet' /*case 'Worksheet'*/: /* TODO: read range from FullRows/FullColumns */\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\tsheetnames.push(sheetname);\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n\t\t\t\tsheets[sheetname] = cursheet;\n\t\t\t} else {\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\t\t\t\tr = c = 0;\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tsheetname = unescapexml(tmp.Name);\n\t\t\t\tcursheet = (opts.dense ? [] : {});\n\t\t\t\tmerges = [];\n\t\t\t\tarrayf = [];\n\t\t\t\trowinfo = [];\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\n\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'table' /*case 'Table'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\n\t\t\telse {\n\t\t\t\ttable = xlml_parsexmltag(Rn[0]);\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\tcstys = []; seencol = false;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'style' /*case 'Style'*/:\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\n\t\tcase 'numberformat' /*case 'NumberFormat'*/:\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == stag.nf) break;\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == null) { SSF.load(stag.nf, ssfidx); break; }\n\t\t\tbreak;\n\n\t\tcase 'column' /*case 'Column'*/:\n\t\t\tif(state[state.length-1][0] !== /*'Table'*/'table') break;\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n\t\t\tif(!seencol && csty.wpx > 10) {\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n\t\t\t}\n\t\t\tif(seencol) process_col(csty);\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n\t\t\tbreak;\n\n\t\tcase 'namedrange' /*case 'NamedRange'*/:\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\n\t\t\tvar _DefinedName/*:DefinedName*/ = ({\n\t\t\t\tName: _NamedRange.Name,\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n\t\t\t}/*:any*/);\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\n\t\t\t/*:: if(Workbook.Names) */Workbook.Names.push(_DefinedName);\n\t\t\tbreak;\n\n\t\tcase 'namedcell' /*case 'NamedCell'*/: break;\n\t\tcase 'b' /*case 'B'*/: break;\n\t\tcase 'i' /*case 'I'*/: break;\n\t\tcase 'u' /*case 'U'*/: break;\n\t\tcase 's' /*case 'S'*/: break;\n\t\tcase 'em' /*case 'EM'*/: break;\n\t\tcase 'h2' /*case 'H2'*/: break;\n\t\tcase 'h3' /*case 'H3'*/: break;\n\t\tcase 'sub' /*case 'Sub'*/: break;\n\t\tcase 'sup' /*case 'Sup'*/: break;\n\t\tcase 'span' /*case 'Span'*/: break;\n\t\tcase 'alignment' /*case 'Alignment'*/:\n\t\t\tbreak;\n\t\tcase 'borders' /*case 'Borders'*/: break;\n\t\tcase 'border' /*case 'Border'*/: break;\n\t\tcase 'font' /*case 'Font'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n\t\t\telse fidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'interior' /*case 'Interior'*/:\n\t\t\tif(!opts.cellStyles) break;\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\t\tcase 'protection' /*case 'Protection'*/: break;\n\n\t\tcase 'author' /*case 'Author'*/:\n\t\tcase 'title' /*case 'Title'*/:\n\t\tcase 'description' /*case 'Description'*/:\n\t\tcase 'created' /*case 'Created'*/:\n\t\tcase 'keywords' /*case 'Keywords'*/:\n\t\tcase 'subject' /*case 'Subject'*/:\n\t\tcase 'category' /*case 'Category'*/:\n\t\tcase 'company' /*case 'Company'*/:\n\t\tcase 'lastauthor' /*case 'LastAuthor'*/:\n\t\tcase 'lastsaved' /*case 'LastSaved'*/:\n\t\tcase 'lastprinted' /*case 'LastPrinted'*/:\n\t\tcase 'version' /*case 'Version'*/:\n\t\tcase 'revision' /*case 'Revision'*/:\n\t\tcase 'totaltime' /*case 'TotalTime'*/:\n\t\tcase 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n\t\tcase 'manager' /*case 'Manager'*/:\n\t\tcase 'contentstatus' /*case 'ContentStatus'*/:\n\t\tcase 'identifier' /*case 'Identifier'*/:\n\t\tcase 'language' /*case 'Language'*/:\n\t\tcase 'appname' /*case 'AppName'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));\n\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'paragraphs' /*case 'Paragraphs'*/: break;\n\n\t\tcase 'styles' /*case 'Styles'*/:\n\t\tcase 'workbook' /*case 'Workbook'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse state.push([Rn[3], false]);\n\t\t\tbreak;\n\n\t\tcase 'comment' /*case 'Comment'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\txlml_clean_comment(comment);\n\t\t\t\tcomments.push(comment);\n\t\t\t} else {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcomment = ({a:tmp.Author}/*:any*/);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'autofilter' /*case 'AutoFilter'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'name' /*case 'Name'*/: break;\n\n\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t} else {\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'pixelsperinch' /*case 'PixelsPerInch'*/:\n\t\t\tbreak;\n\t\tcase 'componentoptions' /*case 'ComponentOptions'*/:\n\t\tcase 'documentproperties' /*case 'DocumentProperties'*/:\n\t\tcase 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n\t\tcase 'pivottable' /*case 'PivotTable'*/:\n\t\tcase 'pivotcache' /*case 'PivotCache'*/:\n\t\tcase 'names' /*case 'Names'*/:\n\t\tcase 'mapinfo' /*case 'MapInfo'*/:\n\t\tcase 'pagebreaks' /*case 'PageBreaks'*/:\n\t\tcase 'querytable' /*case 'QueryTable'*/:\n\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\tcase 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\tcase 'smarttagtype' /*case 'SmartTagType'*/:\n\t\tcase 'smarttags' /*case 'SmartTags'*/:\n\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/:\n\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/:\n\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\tbreak;\n\n\t\tcase 'null' /*case 'Null'*/: break;\n\n\t\tdefault:\n\t\t\t/* FODS file root is <office:document> */\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n\t\t\t/* UOS file root is <uof:UOF> */\n\t\t\tif(state.length == 0 && Rn[3] == \"uof\"/*\"UOF\"*/) return parse_fods(str, opts);\n\n\t\t\tvar seen = true;\n\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t/* OfficeDocumentSettings */\n\t\t\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'allowpng' /*case 'AllowPNG'*/: break;\n\t\t\t\t\tcase 'removepersonalinformation' /*case 'RemovePersonalInformation'*/: break;\n\t\t\t\t\tcase 'downloadcomponents' /*case 'DownloadComponents'*/: break;\n\t\t\t\t\tcase 'locationofcomponents' /*case 'LocationOfComponents'*/: break;\n\t\t\t\t\tcase 'colors' /*case 'Colors'*/: break;\n\t\t\t\t\tcase 'color' /*case 'Color'*/: break;\n\t\t\t\t\tcase 'index' /*case 'Index'*/: break;\n\t\t\t\t\tcase 'rgb' /*case 'RGB'*/: break;\n\t\t\t\t\tcase 'targetscreensize' /*case 'TargetScreenSize'*/: break;\n\t\t\t\t\tcase 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ComponentOptions */\n\t\t\t\tcase 'componentoptions' /*case 'ComponentOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'toolbar' /*case 'Toolbar'*/: break;\n\t\t\t\t\tcase 'hideofficelogo' /*case 'HideOfficeLogo'*/: break;\n\t\t\t\t\tcase 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/: break;\n\t\t\t\t\tcase 'label' /*case 'Label'*/: break;\n\t\t\t\t\tcase 'caption' /*case 'Caption'*/: break;\n\t\t\t\t\tcase 'maxheight' /*case 'MaxHeight'*/: break;\n\t\t\t\t\tcase 'maxwidth' /*case 'MaxWidth'*/: break;\n\t\t\t\t\tcase 'nextsheetnumber' /*case 'NextSheetNumber'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ExcelWorkbook */\n\t\t\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'date1904' /*case 'Date1904'*/:\n\t\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\t\tWorkbook.WBProps.date1904 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'windowheight' /*case 'WindowHeight'*/: break;\n\t\t\t\t\tcase 'windowwidth' /*case 'WindowWidth'*/: break;\n\t\t\t\t\tcase 'windowtopx' /*case 'WindowTopX'*/: break;\n\t\t\t\t\tcase 'windowtopy' /*case 'WindowTopY'*/: break;\n\t\t\t\t\tcase 'tabratio' /*case 'TabRatio'*/: break;\n\t\t\t\t\tcase 'protectstructure' /*case 'ProtectStructure'*/: break;\n\t\t\t\t\tcase 'protectwindow' /*case 'ProtectWindow'*/: break;\n\t\t\t\t\tcase 'protectwindows' /*case 'ProtectWindows'*/: break;\n\t\t\t\t\tcase 'activesheet' /*case 'ActiveSheet'*/: break;\n\t\t\t\t\tcase 'displayinknotes' /*case 'DisplayInkNotes'*/: break;\n\t\t\t\t\tcase 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/: break;\n\t\t\t\t\tcase 'supbook' /*case 'SupBook'*/: break;\n\t\t\t\t\tcase 'sheetname' /*case 'SheetName'*/: break;\n\t\t\t\t\tcase 'sheetindex' /*case 'SheetIndex'*/: break;\n\t\t\t\t\tcase 'sheetindexfirst' /*case 'SheetIndexFirst'*/: break;\n\t\t\t\t\tcase 'sheetindexlast' /*case 'SheetIndexLast'*/: break;\n\t\t\t\t\tcase 'dll' /*case 'Dll'*/: break;\n\t\t\t\t\tcase 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/: break;\n\t\t\t\t\tcase 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/: break;\n\t\t\t\t\tcase 'iteration' /*case 'Iteration'*/: break;\n\t\t\t\t\tcase 'maxiterations' /*case 'MaxIterations'*/: break;\n\t\t\t\t\tcase 'maxchange' /*case 'MaxChange'*/: break;\n\t\t\t\t\tcase 'path' /*case 'Path'*/: break;\n\t\t\t\t\tcase 'xct' /*case 'Xct'*/: break;\n\t\t\t\t\tcase 'count' /*case 'Count'*/: break;\n\t\t\t\t\tcase 'selectedsheets' /*case 'SelectedSheets'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tcase 'uncalced' /*case 'Uncalced'*/: break;\n\t\t\t\t\tcase 'startupprompt' /*case 'StartupPrompt'*/: break;\n\t\t\t\t\tcase 'crn' /*case 'Crn'*/: break;\n\t\t\t\t\tcase 'externname' /*case 'ExternName'*/: break;\n\t\t\t\t\tcase 'formula' /*case 'Formula'*/: break;\n\t\t\t\t\tcase 'colfirst' /*case 'ColFirst'*/: break;\n\t\t\t\t\tcase 'collast' /*case 'ColLast'*/: break;\n\t\t\t\t\tcase 'wantadvise' /*case 'WantAdvise'*/: break;\n\t\t\t\t\tcase 'boolean' /*case 'Boolean'*/: break;\n\t\t\t\t\tcase 'error' /*case 'Error'*/: break;\n\t\t\t\t\tcase 'text' /*case 'Text'*/: break;\n\t\t\t\t\tcase 'ole' /*case 'OLE'*/: break;\n\t\t\t\t\tcase 'noautorecover' /*case 'NoAutoRecover'*/: break;\n\t\t\t\t\tcase 'publishobjects' /*case 'PublishObjects'*/: break;\n\t\t\t\t\tcase 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'refmoder1c1' /*case 'RefModeR1C1'*/: break;\n\t\t\t\t\tcase 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorkbookOptions */\n\t\t\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'owcversion' /*case 'OWCVersion'*/: break;\n\t\t\t\t\tcase 'height' /*case 'Height'*/: break;\n\t\t\t\t\tcase 'width' /*case 'Width'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorksheetOptions */\n\t\t\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'visible' /*case 'Visible'*/:\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'header' /*case 'Header'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'footer' /*case 'Footer'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'pagemargins' /*case 'PageMargins'*/:\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'freezepanes' /*case 'FreezePanes'*/: break;\n\t\t\t\t\tcase 'frozennosplit' /*case 'FrozenNoSplit'*/: break;\n\n\t\t\t\t\tcase 'splithorizontal' /*case 'SplitHorizontal'*/:\n\t\t\t\t\tcase 'splitvertical' /*case 'SplitVertical'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'activerow' /*case 'ActiveRow'*/: break;\n\t\t\t\t\tcase 'activecol' /*case 'ActiveCol'*/: break;\n\t\t\t\t\tcase 'toprowbottompane' /*case 'TopRowBottomPane'*/: break;\n\t\t\t\t\tcase 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/: break;\n\n\t\t\t\t\tcase 'unsynced' /*case 'Unsynced'*/: break;\n\t\t\t\t\tcase 'print' /*case 'Print'*/: break;\n\t\t\t\t\tcase 'printerrors' /*case 'PrintErrors'*/: break;\n\t\t\t\t\tcase 'panes' /*case 'Panes'*/: break;\n\t\t\t\t\tcase 'scale' /*case 'Scale'*/: break;\n\t\t\t\t\tcase 'pane' /*case 'Pane'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'layout' /*case 'Layout'*/: break;\n\t\t\t\t\tcase 'pagesetup' /*case 'PageSetup'*/: break;\n\t\t\t\t\tcase 'selected' /*case 'Selected'*/: break;\n\t\t\t\t\tcase 'protectobjects' /*case 'ProtectObjects'*/: break;\n\t\t\t\t\tcase 'enableselection' /*case 'EnableSelection'*/: break;\n\t\t\t\t\tcase 'protectscenarios' /*case 'ProtectScenarios'*/: break;\n\t\t\t\t\tcase 'validprinterinfo' /*case 'ValidPrinterInfo'*/: break;\n\t\t\t\t\tcase 'horizontalresolution' /*case 'HorizontalResolution'*/: break;\n\t\t\t\t\tcase 'verticalresolution' /*case 'VerticalResolution'*/: break;\n\t\t\t\t\tcase 'numberofcopies' /*case 'NumberofCopies'*/: break;\n\t\t\t\t\tcase 'activepane' /*case 'ActivePane'*/: break;\n\t\t\t\t\tcase 'toprowvisible' /*case 'TopRowVisible'*/: break;\n\t\t\t\t\tcase 'leftcolumnvisible' /*case 'LeftColumnVisible'*/: break;\n\t\t\t\t\tcase 'fittopage' /*case 'FitToPage'*/: break;\n\t\t\t\t\tcase 'rangeselection' /*case 'RangeSelection'*/: break;\n\t\t\t\t\tcase 'papersizeindex' /*case 'PaperSizeIndex'*/: break;\n\t\t\t\t\tcase 'pagelayoutzoom' /*case 'PageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'pagebreakzoom' /*case 'PageBreakZoom'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'fitwidth' /*case 'FitWidth'*/: break;\n\t\t\t\t\tcase 'fitheight' /*case 'FitHeight'*/: break;\n\t\t\t\t\tcase 'commentslayout' /*case 'CommentsLayout'*/: break;\n\t\t\t\t\tcase 'zoom' /*case 'Zoom'*/: break;\n\t\t\t\t\tcase 'lefttoright' /*case 'LeftToRight'*/: break;\n\t\t\t\t\tcase 'gridlines' /*case 'Gridlines'*/: break;\n\t\t\t\t\tcase 'allowsort' /*case 'AllowSort'*/: break;\n\t\t\t\t\tcase 'allowfilter' /*case 'AllowFilter'*/: break;\n\t\t\t\t\tcase 'allowinsertrows' /*case 'AllowInsertRows'*/: break;\n\t\t\t\t\tcase 'allowdeleterows' /*case 'AllowDeleteRows'*/: break;\n\t\t\t\t\tcase 'allowinsertcols' /*case 'AllowInsertCols'*/: break;\n\t\t\t\t\tcase 'allowdeletecols' /*case 'AllowDeleteCols'*/: break;\n\t\t\t\t\tcase 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/: break;\n\t\t\t\t\tcase 'allowformatcells' /*case 'AllowFormatCells'*/: break;\n\t\t\t\t\tcase 'allowsizecols' /*case 'AllowSizeCols'*/: break;\n\t\t\t\t\tcase 'allowsizerows' /*case 'AllowSizeRows'*/: break;\n\t\t\t\t\tcase 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].above = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'tabcolorindex' /*case 'TabColorIndex'*/: break;\n\t\t\t\t\tcase 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/: break;\n\t\t\t\t\tcase 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].left = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blackandwhite' /*case 'BlackAndWhite'*/: break;\n\t\t\t\t\tcase 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/: break;\n\t\t\t\t\tcase 'displaypagebreak' /*case 'DisplayPageBreak'*/: break;\n\t\t\t\t\tcase 'rowcolheadings' /*case 'RowColHeadings'*/: break;\n\t\t\t\t\tcase 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/: break;\n\t\t\t\t\tcase 'noorientation' /*case 'NoOrientation'*/: break;\n\t\t\t\t\tcase 'allowusepivottables' /*case 'AllowUsePivotTables'*/: break;\n\t\t\t\t\tcase 'zeroheight' /*case 'ZeroHeight'*/: break;\n\t\t\t\t\tcase 'viewablerange' /*case 'ViewableRange'*/: break;\n\t\t\t\t\tcase 'selection' /*case 'Selection'*/: break;\n\t\t\t\t\tcase 'protectcontents' /*case 'ProtectContents'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'pivottable' /*case 'PivotTable'*/: case 'pivotcache' /*case 'PivotCache'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/: break;\n\t\t\t\t\tcase 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/: break;\n\t\t\t\t\tcase 'compactrowindent' /*case 'CompactRowIndent'*/: break;\n\t\t\t\t\tcase 'location' /*case 'Location'*/: break;\n\t\t\t\t\tcase 'pivotfield' /*case 'PivotField'*/: break;\n\t\t\t\t\tcase 'orientation' /*case 'Orientation'*/: break;\n\t\t\t\t\tcase 'layoutform' /*case 'LayoutForm'*/: break;\n\t\t\t\t\tcase 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/: break;\n\t\t\t\t\tcase 'layoutcompactrow' /*case 'LayoutCompactRow'*/: break;\n\t\t\t\t\tcase 'position' /*case 'Position'*/: break;\n\t\t\t\t\tcase 'pivotitem' /*case 'PivotItem'*/: break;\n\t\t\t\t\tcase 'datatype' /*case 'DataType'*/: break;\n\t\t\t\t\tcase 'datafield' /*case 'DataField'*/: break;\n\t\t\t\t\tcase 'sourcename' /*case 'SourceName'*/: break;\n\t\t\t\t\tcase 'parentfield' /*case 'ParentField'*/: break;\n\t\t\t\t\tcase 'ptlineitems' /*case 'PTLineItems'*/: break;\n\t\t\t\t\tcase 'ptlineitem' /*case 'PTLineItem'*/: break;\n\t\t\t\t\tcase 'countofsameitems' /*case 'CountOfSameItems'*/: break;\n\t\t\t\t\tcase 'item' /*case 'Item'*/: break;\n\t\t\t\t\tcase 'itemtype' /*case 'ItemType'*/: break;\n\t\t\t\t\tcase 'ptsource' /*case 'PTSource'*/: break;\n\t\t\t\t\tcase 'cacheindex' /*case 'CacheIndex'*/: break;\n\t\t\t\t\tcase 'consolidationreference' /*case 'ConsolidationReference'*/: break;\n\t\t\t\t\tcase 'filename' /*case 'FileName'*/: break;\n\t\t\t\t\tcase 'reference' /*case 'Reference'*/: break;\n\t\t\t\t\tcase 'nocolumngrand' /*case 'NoColumnGrand'*/: break;\n\t\t\t\t\tcase 'norowgrand' /*case 'NoRowGrand'*/: break;\n\t\t\t\t\tcase 'blanklineafteritems' /*case 'BlankLineAfterItems'*/: break;\n\t\t\t\t\tcase 'hidden' /*case 'Hidden'*/: break;\n\t\t\t\t\tcase 'subtotal' /*case 'Subtotal'*/: break;\n\t\t\t\t\tcase 'basefield' /*case 'BaseField'*/: break;\n\t\t\t\t\tcase 'mapchilditems' /*case 'MapChildItems'*/: break;\n\t\t\t\t\tcase 'function' /*case 'Function'*/: break;\n\t\t\t\t\tcase 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/: break;\n\t\t\t\t\tcase 'printsettitles' /*case 'PrintSetTitles'*/: break;\n\t\t\t\t\tcase 'mergelabels' /*case 'MergeLabels'*/: break;\n\t\t\t\t\tcase 'defaultversion' /*case 'DefaultVersion'*/: break;\n\t\t\t\t\tcase 'refreshname' /*case 'RefreshName'*/: break;\n\t\t\t\t\tcase 'refreshdate' /*case 'RefreshDate'*/: break;\n\t\t\t\t\tcase 'refreshdatecopy' /*case 'RefreshDateCopy'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tcase 'versionlastupdate' /*case 'VersionLastUpdate'*/: break;\n\t\t\t\t\tcase 'versionupdateablemin' /*case 'VersionUpdateableMin'*/: break;\n\t\t\t\t\tcase 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PageBreaks */\n\t\t\t\tcase 'pagebreaks' /*case 'PageBreaks'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'colbreaks' /*case 'ColBreaks'*/: break;\n\t\t\t\t\tcase 'colbreak' /*case 'ColBreak'*/: break;\n\t\t\t\t\tcase 'rowbreaks' /*case 'RowBreaks'*/: break;\n\t\t\t\t\tcase 'rowbreak' /*case 'RowBreak'*/: break;\n\t\t\t\t\tcase 'colstart' /*case 'ColStart'*/: break;\n\t\t\t\t\tcase 'colend' /*case 'ColEnd'*/: break;\n\t\t\t\t\tcase 'rowend' /*case 'RowEnd'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* AutoFilter */\n\t\t\t\tcase 'autofilter' /*case 'AutoFilter'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'autofiltercolumn' /*case 'AutoFilterColumn'*/: break;\n\t\t\t\t\tcase 'autofiltercondition' /*case 'AutoFilterCondition'*/: break;\n\t\t\t\t\tcase 'autofilterand' /*case 'AutoFilterAnd'*/: break;\n\t\t\t\t\tcase 'autofilteror' /*case 'AutoFilterOr'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* QueryTable */\n\t\t\t\tcase 'querytable' /*case 'QueryTable'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'id' /*case 'Id'*/: break;\n\t\t\t\t\tcase 'autoformatfont' /*case 'AutoFormatFont'*/: break;\n\t\t\t\t\tcase 'autoformatpattern' /*case 'AutoFormatPattern'*/: break;\n\t\t\t\t\tcase 'querysource' /*case 'QuerySource'*/: break;\n\t\t\t\t\tcase 'querytype' /*case 'QueryType'*/: break;\n\t\t\t\t\tcase 'enableredirections' /*case 'EnableRedirections'*/: break;\n\t\t\t\t\tcase 'refreshedinxl9' /*case 'RefreshedInXl9'*/: break;\n\t\t\t\t\tcase 'urlstring' /*case 'URLString'*/: break;\n\t\t\t\t\tcase 'htmltables' /*case 'HTMLTables'*/: break;\n\t\t\t\t\tcase 'connection' /*case 'Connection'*/: break;\n\t\t\t\t\tcase 'commandtext' /*case 'CommandText'*/: break;\n\t\t\t\t\tcase 'refreshinfo' /*case 'RefreshInfo'*/: break;\n\t\t\t\t\tcase 'notitles' /*case 'NoTitles'*/: break;\n\t\t\t\t\tcase 'nextid' /*case 'NextId'*/: break;\n\t\t\t\t\tcase 'columninfo' /*case 'ColumnInfo'*/: break;\n\t\t\t\t\tcase 'overwritecells' /*case 'OverwriteCells'*/: break;\n\t\t\t\t\tcase 'donotpromptforfile' /*case 'DoNotPromptForFile'*/: break;\n\t\t\t\t\tcase 'textwizardsettings' /*case 'TextWizardSettings'*/: break;\n\t\t\t\t\tcase 'source' /*case 'Source'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'decimal' /*case 'Decimal'*/: break;\n\t\t\t\t\tcase 'thousandseparator' /*case 'ThousandSeparator'*/: break;\n\t\t\t\t\tcase 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/: break;\n\t\t\t\t\tcase 'formatsettings' /*case 'FormatSettings'*/: break;\n\t\t\t\t\tcase 'fieldtype' /*case 'FieldType'*/: break;\n\t\t\t\t\tcase 'delimiters' /*case 'Delimiters'*/: break;\n\t\t\t\t\tcase 'tab' /*case 'Tab'*/: break;\n\t\t\t\t\tcase 'comma' /*case 'Comma'*/: break;\n\t\t\t\t\tcase 'autoformatname' /*case 'AutoFormatName'*/: break;\n\t\t\t\t\tcase 'versionlastedit' /*case 'VersionLastEdit'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\t\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* MapInfo (schema) */\n\t\t\t\tcase 'mapinfo' /*case 'MapInfo'*/: case 'schema' /*case 'Schema'*/: case 'data' /*case 'data'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'map' /*case 'Map'*/: break;\n\t\t\t\t\tcase 'entry' /*case 'Entry'*/: break;\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'xpath' /*case 'XPath'*/: break;\n\t\t\t\t\tcase 'field' /*case 'Field'*/: break;\n\t\t\t\t\tcase 'xsdtype' /*case 'XSDType'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'aggregate' /*case 'Aggregate'*/: break;\n\t\t\t\t\tcase 'elementtype' /*case 'ElementType'*/: break;\n\t\t\t\t\tcase 'attributetype' /*case 'AttributeType'*/: break;\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\n\t\t\t\t\tcase 'schema' /*case 'schema'*/:\n\t\t\t\t\tcase 'element' /*case 'element'*/:\n\t\t\t\t\tcase 'complextype' /*case 'complexType'*/:\n\t\t\t\t\tcase 'datatype' /*case 'datatype'*/:\n\t\t\t\t\tcase 'all' /*case 'all'*/:\n\t\t\t\t\tcase 'attribute' /*case 'attribute'*/:\n\t\t\t\t\tcase 'extends' /*case 'extends'*/: break;\n\n\t\t\t\t\tcase 'row' /*case 'row'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* SmartTags (can be anything) */\n\t\t\t\tcase 'smarttags' /*case 'SmartTags'*/: break;\n\n\t\t\t\tdefault: seen = false; break;\n\t\t\t}\n\t\t\tif(seen) break;\n\t\t\t/* CustomDocumentProperties */\n\t\t\tif(Rn[3].match(/!\\[CDATA/)) break;\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t\t\tif(state[state.length-1][0]===/*'CustomDocumentProperties'*/'customdocumentproperties') {\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t}\n\tvar out = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n\tout.SheetNames = sheetnames;\n\tout.Workbook = Workbook;\n\tout.SSF = SSF.get_table();\n\tout.Props = Props;\n\tout.Custprops = Custprops;\n\treturn out;\n}\n\nfunction parse_xlml(data/*:RawBytes|string*/, opts)/*:Workbook*/ {\n\tfix_read_opts(opts=opts||{});\n\tswitch(opts.type||\"base64\") {\n\t\tcase \"base64\": return parse_xlml_xml(Base64.decode(data), opts);\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\n\t}\n\t/*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\t/* DocumentProperties */\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n\t/* CustomDocumentProperties */\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n\treturn o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(/*::wb, opts*/)/*:string*/ {\n\t/* OfficeDocumentSettings */\n\t/* ExcelWorkbook */\n\treturn \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts)/*:string*/ {\n\t/* Styles */\n\tvar styles/*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n\topts.cellXfs.forEach(function(xf, id) {\n\t\tvar payload/*:Array<string>*/ = [];\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(SSF._table[xf.numFmtId])}));\n\n\t\tvar o = /*::(*/{\"ss:ID\": \"s\" + (21+id)}/*:: :any)*/;\n\t\tstyles.push(writextag('Style', payload.join(\"\"), o));\n\t});\n\treturn writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\nfunction write_names_xlml(wb/*::, opts*/)/*:string*/ {\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != null) continue;\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != idx) continue;\n\t\t/*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tvar o/*:Array<string>*/ = [];\n\t/* NOTE: spec technically allows any order, but stick with implied order */\n\n\t/* FitToPage */\n\t/* DoNotDisplayColHeaders */\n\t/* DoNotDisplayRowHeaders */\n\t/* ViewableRange */\n\t/* Selection */\n\t/* GridlineColor */\n\t/* Name */\n\t/* ExcelWorksheetType */\n\t/* IntlMacro */\n\t/* Unsynced */\n\t/* Selected */\n\t/* CodeName */\n\n\tif(ws['!margins']) {\n\t\to.push(\"<PageSetup>\");\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n\t\to.push(writextag(\"PageMargins\", null, {\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\n\t\t}));\n\t\to.push(\"</PageSetup>\");\n\t}\n\n\t/* PageSetup */\n\t/* DisplayPageBreak */\n\t/* TransitionExpressionEvaluation */\n\t/* TransitionFormulaEntry */\n\t/* Print */\n\t/* Zoom */\n\t/* PageLayoutZoom */\n\t/* PageBreakZoom */\n\t/* ShowPageBreakZoom */\n\t/* DefaultRowHeight */\n\t/* DefaultColumnWidth */\n\t/* StandardWidth */\n\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n\t\t/* Visible */\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n\t\telse {\n\t\t\t/* Selected */\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\n\t\t}\n\t}\n\n\t/* LeftColumnVisible */\n\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n\t/* GridlineColorIndex */\n\t/* DisplayFormulas */\n\t/* DoNotDisplayGridlines */\n\t/* DoNotDisplayHeadings */\n\t/* DoNotDisplayOutline */\n\t/* ApplyAutomaticOutlineStyles */\n\t/* NoSummaryRowsBelowDetail */\n\t/* NoSummaryColumnsRightDetail */\n\t/* DoNotDisplayZeros */\n\t/* ActiveRow */\n\t/* ActiveColumn */\n\t/* FilterOn */\n\t/* RangeSelection */\n\t/* TopRowVisible */\n\t/* TopRowBottomPane */\n\t/* LeftColumnRightPane */\n\t/* ActivePane */\n\t/* SplitHorizontal */\n\t/* SplitVertical */\n\t/* FreezePanes */\n\t/* FrozenNoSplit */\n\t/* TabColorIndex */\n\t/* Panes */\n\n\t/* NOTE: Password not supported in XLML Format */\n\tif(ws['!protect']) {\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n\t[\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\n\t\t[ \"sort\", \"AllowSort\" ],\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n\t}\n\n\tif(o.length == 0) return \"\";\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n}\nfunction write_ws_xlml_comment(comments/*:Array<any>*/)/*:string*/ {\n\treturn comments.map(function(c) {\n\t\t// TODO: formatted text\n\t\tvar t = xlml_unfixstr(c.t||\"\");\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n\t\treturn writextag(\"Comment\", d, {\"ss:Author\":c.a});\n\t}).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref/*:string*/, ws, opts, idx/*:number*/, wb, addr)/*:string*/{\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n\tvar attr = {};\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n\t}\n\n\tif(cell.l && cell.l.Target) {\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n\t}\n\n\tif(ws['!merges']) {\n\t\tvar marr = ws['!merges'];\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n\t\t}\n\t}\n\n\tvar t = \"\", p = \"\";\n\tswitch(cell.t) {\n\t\tcase 'z': if(!opts.sheetStubs) return \"\"; break;\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || SSF._table[14]; break;\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n\t}\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\n\tattr[\"ss:Index\"] = addr.c + 1;\n\tvar _v = (cell.v != null ? p : \"\");\n\tvar m = cell.t == 'z' ? \"\" : ('<Data ss:Type=\"' + t + '\">' + _v + '</Data>');\n\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n\treturn writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R/*:number*/, row)/*:string*/ {\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\n\tif(row) {\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\n\t}\n\treturn o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws['!ref']) return \"\";\n\tvar range/*:Range*/ = safe_decode_range(ws['!ref']);\n\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\tvar o/*:Array<string>*/ = [];\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n\t\tprocess_col(n);\n\t\tvar w = !!n.width;\n\t\tvar p = col_obj_w(i, n);\n\t\tvar k/*:any*/ = {\"ss:Index\":i+1};\n\t\tif(w) k['ss:Width'] = width2px(p.width);\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\n\t\to.push(writextag(\"Column\",null,k));\n\t});\n\tvar dense = Array.isArray(ws);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar skip = false;\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(skip) continue;\n\t\t\tvar addr = {r:R,c:C};\n\t\t\tvar ref = encode_cell(addr), cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n\t\t}\n\t\trow.push(\"</Row>\");\n\t\tif(row.length > 2) o.push(row.join(\"\"));\n\t}\n\treturn o.join(\"\");\n}\nfunction write_ws_xlml(idx/*:number*/, opts, wb/*:Workbook*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tvar s = wb.SheetNames[idx];\n\tvar ws = wb.Sheets[s];\n\n\tvar t/*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n\t/* Table */\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n\t/* WorksheetOptions */\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n\treturn o.join(\"\");\n}\nfunction write_xlml(wb, opts)/*:string*/ {\n\tif(!opts) opts = {};\n\tif(!wb.SSF) wb.SSF = SSF.get_table();\n\tif(wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t\topts.cellXfs = [];\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\t}\n\tvar d/*:Array<string>*/ = [];\n\td.push(write_props_xlml(wb, opts));\n\td.push(write_wb_xlml(wb, opts));\n\td.push(\"\");\n\td.push(\"\");\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n\td[2] = write_sty_xlml(wb, opts);\n\td[3] = write_names_xlml(wb, opts);\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n\t\t'xmlns':      XLMLNS.ss,\n\t\t'xmlns:o':    XLMLNS.o,\n\t\t'xmlns:x':    XLMLNS.x,\n\t\t'xmlns:ss':   XLMLNS.ss,\n\t\t'xmlns:dt':   XLMLNS.dt,\n\t\t'xmlns:html': XLMLNS.html\n\t});\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj/*:CFBEntry*/) {\n\tvar v = {};\n\tvar o = obj.content;\n\t/*:: if(o == null) return; */\n\n\t/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n\to.l = 28;\n\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n\tif(o.length - o.l <= 4) return v;\n\n\tvar m/*:number*/ = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n\tif(o.length - o.l <= 4) return v;\n\tm = o.read_shift(4);\n\tif(m !== 0x71b239f4) return v;\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n\tm = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue\n\t- 2.4.59 ContinueBigName\n\t- 2.4.60 ContinueFrt\n\t- 2.4.61 ContinueFrt11\n\t- 2.4.62 ContinueFrt12\n*/\nfunction slurp(R, blob, length/*:number*/, opts)/*:any*/ {\n\tvar l = length;\n\tvar bufs = [];\n\tvar d = blob.slice(blob.l,blob.l+l);\n\tif(opts && opts.enc && opts.enc.insitu && d.length > 0) switch(R.n) {\n\tcase 'BOF': case 'FilePass': case 'FileLock': case 'InterfaceHdr': case 'RRDInfo': case 'RRDHead': case 'UsrExcl': case 'EOF':\n\t\tbreak;\n\tcase 'BoundSheet8':\n\t\tbreak;\n\tdefault:\n\t\topts.enc.insitu(d);\n\t}\n\tbufs.push(d);\n\tblob.l += l;\n\tvar next = (XLSRecordEnum[__readUInt16LE(blob,blob.l)]);\n\tvar start = 0;\n\twhile(next != null && next.n.slice(0,8) === 'Continue') {\n\t\tl = __readUInt16LE(blob,blob.l+2);\n\t\tstart = blob.l + 4;\n\t\tif(next.n == 'ContinueFrt') start += 4;\n\t\telse if(next.n.slice(0,11) == 'ContinueFrt') {\n\t\t\tstart += 12;\n\t\t}\n\t\td = blob.slice(start,blob.l+4+l);\n\t\tbufs.push(d);\n\t\tblob.l += 4+l;\n\t\tnext = (XLSRecordEnum[__readUInt16LE(blob, blob.l)]);\n\t}\n\tvar b = (bconcat(bufs)/*:any*/);\n\tprep_blob(b, 0);\n\tvar ll = 0; b.lens = [];\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n\tif(b.length < length) throw \"XLS Record \" + (R && R.n || \"??\") + \" Truncated: \" + b.length + \" < \" + length;\n\treturn R.f(b, b.length, opts);\n}\n\nfunction safe_format_xf(p/*:any*/, opts/*:ParseOpts*/, date1904/*:?boolean*/) {\n\tif(p.t === 'z') return;\n\tif(!p.XF) return;\n\tvar fmtid = 0;\n\ttry {\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\n\t\tif(opts.cellNF) p.z = SSF._table[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = SSF._general_int(p.v);\n\t\t\t\telse p.w = SSF._general_num(p.v);\n\t\t\t}\n\t\t\telse p.w = SSF._general(p.v);\n\t\t}\n\t\telse p.w = SSF.format(fmtid,p.v, {date1904:!!date1904, dateNF: opts && opts.dateNF});\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(opts.cellDates && fmtid && p.t == 'n' && SSF.is_date(SSF._table[fmtid] || String(fmtid))) {\n\t\tvar _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t}\n}\n\nfunction make_cell(val, ixfe, t)/*:Cell*/ {\n\treturn ({v:val, ixfe:ixfe, t:t}/*:any*/);\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options/*:ParseOpts*/)/*:Workbook*/ {\n\tvar wb = ({opts:{}}/*:any*/);\n\tvar Sheets = {};\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\n\tvar out/*:Worksheet*/ = ((options.dense ? [] : {})/*:any*/);\n\tvar Directory = {};\n\tvar range/*:Range*/ = ({}/*:any*/);\n\tvar last_formula = null;\n\tvar sst/*:SST*/ = ([]/*:any*/);\n\tvar cur_sheet = \"\";\n\tvar Preamble = {};\n\tvar lastcell, last_cell = \"\", cc/*:Cell*/, cmnt, rngC, rngR;\n\tvar sharedf = {};\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar temp_val/*:Cell*/;\n\tvar country;\n\tvar XFs = []; /* XF records */\n\tvar palette/*:Array<[number, number, number]>*/ = [];\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }/*:any*/), wsprops = {};\n\tvar get_rgb = function getrgb(icv/*:number*/)/*:[number, number, number]*/ {\n\t\tif(icv < 8) return XLSIcv[icv];\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\n\t\treturn XLSIcv[icv];\n\t};\n\tvar process_cell_style = function pcs(cell, line/*:any*/, options) {\n\t\tvar xfd = line.XF.data;\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n\t\tline.s = ({}/*:any*/);\n\t\tline.s.patternType = xfd.patternType;\n\t\tvar t;\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n\t};\n\tvar addcell = function addcell(cell/*:any*/, line/*:any*/, options/*:any*/) {\n\t\tif(file_depth > 1) return;\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) return;\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n\t\tdelete line.ixfe; delete line.XF;\n\t\tlastcell = cell;\n\t\tlast_cell = encode_cell(cell);\n\t\tif(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tif(cell.r < range.s.r) range.s.r = cell.r;\n\t\tif(cell.c < range.s.c) range.s.c = cell.c;\n\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n\t\tif(options.cellFormula && line.f) {\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tif(options.dense) {\n\t\t\t\tif(!out[cell.r]) out[cell.r] = [];\n\t\t\t\tout[cell.r][cell.c] = line;\n\t\t\t} else out[last_cell] = line;\n\t\t}\n\t};\n\tvar opts = ({\n\t\tenc: false, // encrypted\n\t\tsbcch: 0, // cch in the preceding SupBook\n\t\tsnames: [], // sheetnames\n\t\tsharedf: sharedf, // shared formulae by address\n\t\tarrayf: arrayf, // array formulae array\n\t\trrtabid: [], // RRTabId\n\t\tlastuser: \"\", // Last User from WriteAccess\n\t\tbiff: 8, // BIFF version\n\t\tcodepage: 0, // CP from CodePage record\n\t\twinlocked: 0, // fLockWn from WinProtect\n\t\tcellStyles: !!options && !!options.cellStyles,\n\t\tWTF: !!options && !!options.wtf\n\t}/*:any*/);\n\tif(options.password) opts.password = options.password;\n\tvar themes;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar objects = [];\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\t// eslint-disable-next-line no-unused-vars\n\tvar defwidth = 0, defheight = 0; // twips / MDW respectively\n\tvar seencol = false;\n\tvar supbooks = ([]/*:any*/); // 1-indexed, will hold extern names\n\tsupbooks.SheetNames = opts.snames;\n\tsupbooks.sharedf = opts.sharedf;\n\tsupbooks.arrayf = opts.arrayf;\n\tsupbooks.names = [];\n\tsupbooks.XTI = [];\n\tvar last_Rn = '';\n\tvar file_depth = 0; /* TODO: make a real stack */\n\tvar BIFF2Fmt = 0, BIFF2FmtTable/*:Array<string>*/ = [];\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n\tvar last_lbl/*:?DefinedName*/;\n\n\t/* explicit override for some broken writers */\n\topts.codepage = 1200;\n\tset_cp(1200);\n\tvar seen_codepage = false;\n\twhile(blob.l < blob.length - 1) {\n\t\tvar s = blob.l;\n\t\tvar RecordType = blob.read_shift(2);\n\t\tif(RecordType === 0 && last_Rn === 'EOF') break;\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n\t\tvar R = XLSRecordEnum[RecordType];\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\n\t\tif(R && R.f) {\n\t\t\tif(options.bookSheets) {\n\t\t\t\tif(last_Rn === 'BoundSheet8' && R.n !== 'BoundSheet8') break;\n\t\t\t}\n\t\t\tlast_Rn = R.n;\n\t\t\tif(R.r === 2 || R.r == 12) {\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n\t\t\t\tif(R.r == 12){\n\t\t\t\t\tblob.l += 10; length -= 10;\n\t\t\t\t} // skip FRT\n\t\t\t}\n\t\t\t//console.error(R,blob.l,length,blob.length);\n\t\t\tvar val/*:any*/ = ({}/*:any*/);\n\t\t\tif(R.n === 'EOF') val = /*::(*/R.f(blob, length, opts)/*:: :any)*/;\n\t\t\telse val = /*::(*/slurp(R, blob, length, opts)/*:: :any)*/;\n\t\t\tvar Rn = R.n;\n\t\t\t/*:: val = (val:any); */\n\t\t\tif(file_depth == 0 && Rn != 'BOF') continue;\n\t\t\t/* nested switch statements to workaround V8 128 limit */\n\t\t\tswitch(Rn) {\n\t\t\t\t/* Workbook Options */\n\t\t\t\tcase 'Date1904':\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\twb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n\t\t\t\tcase 'WriteProtect': wb.opts.WriteProtect = true; break;\n\t\t\t\tcase 'FilePass':\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\n\t\t\t\t\topts.enc = val;\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'WriteAccess': opts.lastuser = val; break;\n\t\t\t\tcase 'FileSharing': break; //TODO\n\t\t\t\tcase 'CodePage':\n\t\t\t\t\tvar cpval = Number(val);\n\t\t\t\t\t/* overrides based on test cases */\n\t\t\t\t\tswitch(cpval) {\n\t\t\t\t\t\tcase 0x5212: cpval =  1200; break;\n\t\t\t\t\t\tcase 0x8000: cpval = 10000; break;\n\t\t\t\t\t\tcase 0x8001: cpval =  1252; break;\n\t\t\t\t\t}\n\t\t\t\t\tset_cp(opts.codepage = cpval);\n\t\t\t\t\tseen_codepage = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RRTabId': opts.rrtabid = val; break;\n\t\t\t\tcase 'WinProtect': opts.winlocked = val; break;\n\t\t\t\tcase 'Template': break; // TODO\n\t\t\t\tcase 'BookBool': break; // TODO\n\t\t\t\tcase 'UsesELFs': break;\n\t\t\t\tcase 'MTRSettings': break;\n\t\t\t\tcase 'RefreshAll':\n\t\t\t\tcase 'CalcCount':\n\t\t\t\tcase 'CalcDelta':\n\t\t\t\tcase 'CalcIter':\n\t\t\t\tcase 'CalcMode':\n\t\t\t\tcase 'CalcPrecision':\n\t\t\t\tcase 'CalcSaveRecalc':\n\t\t\t\t\twb.opts[Rn] = val; break;\n\t\t\t\tcase 'CalcRefMode': opts.CalcRefMode = val; break; // TODO: implement R1C1\n\t\t\t\tcase 'Uncalced': break;\n\t\t\t\tcase 'ForceFullCalculation': wb.opts.FullCalc = val; break;\n\t\t\t\tcase 'WsBool':\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\n\t\t\t\t\tif(!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n\t\t\t\t\tif(!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n\t\t\t\t\tbreak; // TODO\n\t\t\t\tcase 'XF':\n\t\t\t\t\tXFs.push(val); break;\n\t\t\t\tcase 'ExtSST': break; // TODO\n\t\t\t\tcase 'BookExt': break; // TODO\n\t\t\t\tcase 'RichTextStream': break;\n\t\t\t\tcase 'BkHim': break;\n\n\t\t\t\tcase 'SupBook':\n\t\t\t\t\tsupbooks.push([val]);\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExternName':\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Index': break; // TODO\n\t\t\t\tcase 'Lbl':\n\t\t\t\t\tlast_lbl = ({\n\t\t\t\t\t\tName: val.Name,\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\n\t\t\t\t\t}/*:DefinedName*/);\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n\t\t\t\t\tsupbooks.names.push(last_lbl);\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExternCount': opts.ExternCount = val; break;\n\t\t\t\tcase 'ExternSheet':\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n\t\t\t\tcase 'NameCmt':\n\t\t\t\t\t/* TODO: search for correct name */\n\t\t\t\t\tif(opts.biff < 8) break;\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Protect': out[\"!protect\"] = val; break; /* for sheet or book */\n\t\t\t\tcase 'Password': if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n\t\t\t\tcase 'Prot4Rev': case 'Prot4RevPass': break; /*TODO: Revision Control*/\n\n\t\t\t\tcase 'BoundSheet8': {\n\t\t\t\t\tDirectory[val.pos] = val;\n\t\t\t\t\topts.snames.push(val.name);\n\t\t\t\t} break;\n\t\t\t\tcase 'EOF': {\n\t\t\t\t\tif(--file_depth) break;\n\t\t\t\t\tif(range.e) {\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t\t\t}\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n\t\t\t\t\tout = ((options.dense ? [] : {})/*:any*/);\n\t\t\t\t} break;\n\t\t\t\tcase 'BOF': {\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\n\t\t\t\t\t\t/*::[*/0x0009/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0209/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0409/*::]*/:4\n\t\t\t\t\t}[RecordType] || {\n\t\t\t\t\t\t/*::[*/0x0200/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0300/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0400/*::]*/:4,\n\t\t\t\t\t\t/*::[*/0x0500/*::]*/:5,\n\t\t\t\t\t\t/*::[*/0x0600/*::]*/:8,\n\t\t\t\t\t\t/*::[*/0x0002/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0007/*::]*/:2\n\t\t\t\t\t}[val.BIFFVer] || 8;\n\t\t\t\t\topts.biffguess = val.BIFFVer == 0;\n\t\t\t\t\tif(val.BIFFVer == 0 && val.dt == 0x1000) { opts.biff = 5; seen_codepage = true; set_cp(opts.codepage = 28591); }\n\t\t\t\t\tif(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n\t\t\t\t\tif(file_depth++) break;\n\t\t\t\t\tout = ((options.dense ? [] : {})/*:any*/);\n\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n\n\t\t\t\t\tif(opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\t\t\t\t\t/* fake BoundSheet8 */\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\n\t\t\t\t\t\topts.snames.push(cur_sheet);\n\t\t\t\t\t}\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\n\t\t\t\t\tmerges = [];\n\t\t\t\t\tobjects = [];\n\t\t\t\t\topts.arrayf = arrayf = [];\n\t\t\t\t\tcolinfo = []; rowinfo = [];\n\t\t\t\t\tdefwidth = defheight = 0;\n\t\t\t\t\tseencol = false;\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n\t\t\t\t} break;\n\n\t\t\t\tcase 'Number': case 'BIFF2NUM': case 'BIFF2INT': {\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'BoolErr': {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'RK': {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'MulRk': {\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'Formula': {\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\tvar _f = val.formula;\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell(val.cell, temp_val, options);\n\t\t\t\t\tlast_formula = val;\n\t\t\t\t} break;\n\t\t\t\tcase 'String': {\n\t\t\t\t\tif(last_formula) { /* technically always true */\n\t\t\t\t\t\tlast_formula.val = val;\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\n\t\t\t\t\t\tlast_formula = null;\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\n\t\t\t\t} break;\n\t\t\t\tcase 'Array': {\n\t\t\t\t\tarrayf.push(val);\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\n\t\t\t\t\tcc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n\t\t\t\t\tif(options.cellFormula && cc) {\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'ShrFmla': {\n\t\t\t\t\tif(!options.cellFormula) break;\n\t\t\t\t\tif(last_cell) {\n\t\t\t\t\t\t/* TODO: capture range */\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\n\t\t\t\t\t\tcc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'LabelSst':\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n\t\t\t\t\tif(sst[val.isst].h) temp_val.h = sst[val.isst].h;\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Blank': if(options.sheetStubs) {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'MulBlank': if(options.sheetStubs) {\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'RString':\n\t\t\t\tcase 'Label': case 'BIFF2STR':\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Dimensions': {\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\n\t\t\t\t} break;\n\t\t\t\tcase 'SST': {\n\t\t\t\t\tsst = val;\n\t\t\t\t} break;\n\t\t\t\tcase 'Format': { /* val = [id, fmt] */\n\t\t\t\t\tif(opts.biff == 4) {\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(SSF._table[b4idx] == val[1]) break;\n\t\t\t\t\t\tif(b4idx >= 163) SSF.load(val[1], BIFF2Fmt + 163);\n\t\t\t\t\t}\n\t\t\t\t\telse SSF.load(val[1], val[0]);\n\t\t\t\t} break;\n\t\t\t\tcase 'BIFF2FORMAT': {\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(SSF._table[b2idx] == val) break;\n\t\t\t\t\tif(b2idx >= 163) SSF.load(val, BIFF2Fmt + 163);\n\t\t\t\t} break;\n\n\t\t\t\tcase 'MergeCells': merges = merges.concat(val); break;\n\n\t\t\t\tcase 'Obj': objects[val.cmo[0]] = opts.lastobj = val; break;\n\t\t\t\tcase 'TxO': opts.lastobj.TxO = val; break;\n\t\t\t\tcase 'ImData': opts.lastobj.ImData = val; break;\n\n\t\t\t\tcase 'HLink': {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'HLinkTooltip': {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\t/* Comments */\n\t\t\t\tcase 'Note': {\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n\t\t\t\t\tcc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n\t\t\t\t\tvar noteobj = objects[val[2]];\n\t\t\t\t\tif(!cc) {\n\t\t\t\t\t\tif(options.dense) {\n\t\t\t\t\t\t\tif(!out[val[0].r]) out[val[0].r] = [];\n\t\t\t\t\t\t\tcc = out[val[0].r][val[0].c] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcc = out[encode_cell(val[0])] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trange.e.r = Math.max(range.e.r, val[0].r);\n\t\t\t\t\t\trange.s.r = Math.min(range.s.r, val[0].r);\n\t\t\t\t\t\trange.e.c = Math.max(range.e.c, val[0].c);\n\t\t\t\t\t\trange.s.c = Math.min(range.s.c, val[0].c);\n\t\t\t\t\t}\n\t\t\t\t\tif(!cc.c) cc.c = [];\n\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\n\t\t\t\t\tcc.c.push(cmnt);\n\t\t\t\t} break;\n\n\t\t\t\tdefault: switch(R.n) { /* nested */\n\t\t\t\tcase 'ClrtClient': break;\n\t\t\t\tcase 'XFExt': update_xfext(XFs[val.ixfe], val.ext); break;\n\n\t\t\t\tcase 'DefColWidth': defwidth = val; break;\n\t\t\t\tcase 'DefaultRowHeight': defheight = val[1]; break; // TODO: flags\n\n\t\t\t\tcase 'ColInfo': {\n\t\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, level: (val.level || 0), hidden: !!(val.flags & 1) };\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'Row': {\n\t\t\t\t\tvar rowobj = {};\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n\t\t\t\t\tif(val.hpt) {\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\tcase 'LeftMargin':\n\t\t\t\tcase 'RightMargin':\n\t\t\t\tcase 'TopMargin':\n\t\t\t\tcase 'BottomMargin':\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'][Rn.slice(0,-6).toLowerCase()] = val;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Selection': break;\n\n\t\t\t\tcase 'Setup': // TODO\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'].header = val.header;\n\t\t\t\t\tout['!margins'].footer = val.footer;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Window2': // TODO\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Header': break; // TODO\n\t\t\t\tcase 'Footer': break; // TODO\n\t\t\t\tcase 'HCenter': break; // TODO\n\t\t\t\tcase 'VCenter': break; // TODO\n\t\t\t\tcase 'Pls': break; // TODO\n\t\t\t\tcase 'GCW': break;\n\t\t\t\tcase 'LHRecord': break;\n\t\t\t\tcase 'DBCell': break; // TODO\n\t\t\t\tcase 'EntExU2': break; // TODO\n\t\t\t\tcase 'SxView': break; // TODO\n\t\t\t\tcase 'Sxvd': break; // TODO\n\t\t\t\tcase 'SXVI': break; // TODO\n\t\t\t\tcase 'SXVDEx': break; // TODO\n\t\t\t\tcase 'SxIvd': break; // TODO\n\t\t\t\tcase 'SXString': break; // TODO\n\t\t\t\tcase 'Sync': break;\n\t\t\t\tcase 'Addin': break;\n\t\t\t\tcase 'SXDI': break; // TODO\n\t\t\t\tcase 'SXLI': break; // TODO\n\t\t\t\tcase 'SXEx': break; // TODO\n\t\t\t\tcase 'QsiSXTag': break; // TODO\n\t\t\t\tcase 'Feat': break;\n\t\t\t\tcase 'FeatHdr': case 'FeatHdr11': break;\n\t\t\t\tcase 'Feature11': case 'Feature12': case 'List12': break;\n\t\t\t\tcase 'Country': country = val; break;\n\t\t\t\tcase 'RecalcId': break;\n\t\t\t\tcase 'DxGCol': break; // TODO: htmlify\n\t\t\t\tcase 'Fbi': case 'Fbi2': case 'GelFrame': break;\n\t\t\t\tcase 'Font': break; // TODO\n\t\t\t\tcase 'XFCRC': break; // TODO\n\t\t\t\tcase 'Style': break; // TODO\n\t\t\t\tcase 'StyleExt': break; // TODO\n\t\t\t\tcase 'Palette': palette = val; break;\n\t\t\t\tcase 'Theme': themes = val; break;\n\t\t\t\t/* Protection */\n\t\t\t\tcase 'ScenarioProtect': break;\n\t\t\t\tcase 'ObjProtect': break;\n\n\t\t\t\t/* Conditional Formatting */\n\t\t\t\tcase 'CondFmt12': break;\n\n\t\t\t\t/* Table */\n\t\t\t\tcase 'Table': break; // TODO\n\t\t\t\tcase 'TableStyles': break; // TODO\n\t\t\t\tcase 'TableStyle': break; // TODO\n\t\t\t\tcase 'TableStyleElement': break; // TODO\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'SXStreamID': break; // TODO\n\t\t\t\tcase 'SXVS': break; // TODO\n\t\t\t\tcase 'DConRef': break; // TODO\n\t\t\t\tcase 'SXAddl': break; // TODO\n\t\t\t\tcase 'DConBin': break; // TODO\n\t\t\t\tcase 'DConName': break; // TODO\n\t\t\t\tcase 'SXPI': break; // TODO\n\t\t\t\tcase 'SxFormat': break; // TODO\n\t\t\t\tcase 'SxSelect': break; // TODO\n\t\t\t\tcase 'SxRule': break; // TODO\n\t\t\t\tcase 'SxFilt': break; // TODO\n\t\t\t\tcase 'SxItm': break; // TODO\n\t\t\t\tcase 'SxDXF': break; // TODO\n\n\t\t\t\t/* Scenario Manager */\n\t\t\t\tcase 'ScenMan': break;\n\n\t\t\t\t/* Data Consolidation */\n\t\t\t\tcase 'DCon': break;\n\n\t\t\t\t/* Watched Cell */\n\t\t\t\tcase 'CellWatch': break;\n\n\t\t\t\t/* Print Settings */\n\t\t\t\tcase 'PrintRowCol': break;\n\t\t\t\tcase 'PrintGrid': break;\n\t\t\t\tcase 'PrintSize': break;\n\n\t\t\t\tcase 'XCT': break;\n\t\t\t\tcase 'CRN': break;\n\n\t\t\t\tcase 'Scl': {\n\t\t\t\t\t//console.log(\"Zoom Level:\", val[0]/val[1],val);\n\t\t\t\t} break;\n\t\t\t\tcase 'SheetExt': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\t\t\t\tcase 'SheetExtOptional': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\n\t\t\t\t/* VBA */\n\t\t\t\tcase 'ObNoMacros': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\t\t\t\tcase 'ObProj': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\t\t\t\tcase 'CodeName': {\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\tif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\n\t\t\t\t} break;\n\t\t\t\tcase 'GUIDTypeLib': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\n\t\t\t\tcase 'WOpt': break; // TODO: WTF?\n\t\t\t\tcase 'PhoneticInfo': break;\n\n\t\t\t\tcase 'OleObjectSize': break;\n\n\t\t\t\t/* Differential Formatting */\n\t\t\t\tcase 'DXF': case 'DXFN': case 'DXFN12': case 'DXFN12List': case 'DXFN12NoCB': break;\n\n\t\t\t\t/* Data Validation */\n\t\t\t\tcase 'Dv': case 'DVal': break;\n\n\t\t\t\t/* Data Series */\n\t\t\t\tcase 'BRAI': case 'Series': case 'SeriesText': break;\n\n\t\t\t\t/* Data Connection */\n\t\t\t\tcase 'DConn': break;\n\t\t\t\tcase 'DbOrParamQry': break;\n\t\t\t\tcase 'DBQueryExt': break;\n\n\t\t\t\tcase 'OleDbConn': break;\n\t\t\t\tcase 'ExtString': break;\n\n\t\t\t\t/* Formatting */\n\t\t\t\tcase 'IFmtRecord': break;\n\t\t\t\tcase 'CondFmt': case 'CF': case 'CF12': case 'CFEx': break;\n\n\t\t\t\t/* Explicitly Ignored */\n\t\t\t\tcase 'Excel9File': break;\n\t\t\t\tcase 'Units': break;\n\t\t\t\tcase 'InterfaceHdr': case 'Mms': case 'InterfaceEnd': case 'DSF': break;\n\t\t\t\tcase 'BuiltInFnGroupCount': /* 2.4.30 0x0E or 0x10 but excel 2011 generates 0x11? */ break;\n\t\t\t\t/* View Stuff */\n\t\t\t\tcase 'Window1': case 'HideObj': case 'GridSet': case 'Guts':\n\t\t\t\tcase 'UserBView': case 'UserSViewBegin': case 'UserSViewEnd': break;\n\t\t\t\tcase 'Pane': break;\n\t\t\t\tdefault: switch(R.n) { /* nested */\n\t\t\t\t/* Chart */\n\t\t\t\tcase 'Dat':\n\t\t\t\tcase 'Begin': case 'End':\n\t\t\t\tcase 'StartBlock': case 'EndBlock':\n\t\t\t\tcase 'Frame': case 'Area':\n\t\t\t\tcase 'Axis': case 'AxisLine': case 'Tick': break;\n\t\t\t\tcase 'AxesUsed':\n\t\t\t\tcase 'CrtLayout12': case 'CrtLayout12A': case 'CrtLink': case 'CrtLine': case 'CrtMlFrt': case 'CrtMlFrtContinue': break;\n\t\t\t\tcase 'LineFormat': case 'AreaFormat':\n\t\t\t\tcase 'Chart': case 'Chart3d': case 'Chart3DBarShape': case 'ChartFormat': case 'ChartFrtInfo': break;\n\t\t\t\tcase 'PlotArea': case 'PlotGrowth': break;\n\t\t\t\tcase 'SeriesList': case 'SerParent': case 'SerAuxTrend': break;\n\t\t\t\tcase 'DataFormat': case 'SerToCrt': case 'FontX': break;\n\t\t\t\tcase 'CatSerRange': case 'AxcExt': case 'SerFmt': break;\n\t\t\t\tcase 'ShtProps': break;\n\t\t\t\tcase 'DefaultText': case 'Text': case 'CatLab': break;\n\t\t\t\tcase 'DataLabExtContents': break;\n\t\t\t\tcase 'Legend': case 'LegendException': break;\n\t\t\t\tcase 'Pie': case 'Scatter': break;\n\t\t\t\tcase 'PieFormat': case 'MarkerFormat': break;\n\t\t\t\tcase 'StartObject': case 'EndObject': break;\n\t\t\t\tcase 'AlRuns': case 'ObjectLink': break;\n\t\t\t\tcase 'SIIndex': break;\n\t\t\t\tcase 'AttachedLabel': case 'YMult': break;\n\n\t\t\t\t/* Chart Group */\n\t\t\t\tcase 'Line': case 'Bar': break;\n\t\t\t\tcase 'Surf': break;\n\n\t\t\t\t/* Axis Group */\n\t\t\t\tcase 'AxisParent': break;\n\t\t\t\tcase 'Pos': break;\n\t\t\t\tcase 'ValueRange': break;\n\n\t\t\t\t/* Pivot Chart */\n\t\t\t\tcase 'SXViewEx9': break; // TODO\n\t\t\t\tcase 'SXViewLink': break;\n\t\t\t\tcase 'PivotChartBits': break;\n\t\t\t\tcase 'SBaseRef': break;\n\t\t\t\tcase 'TextPropsStream': break;\n\n\t\t\t\t/* Chart Misc */\n\t\t\t\tcase 'LnExt': break;\n\t\t\t\tcase 'MkrExt': break;\n\t\t\t\tcase 'CrtCoopt': break;\n\n\t\t\t\t/* Query Table */\n\t\t\t\tcase 'Qsi': case 'Qsif': case 'Qsir': case 'QsiSXTag': break;\n\t\t\t\tcase 'TxtQry': break;\n\n\t\t\t\t/* Filter */\n\t\t\t\tcase 'FilterMode': break;\n\t\t\t\tcase 'AutoFilter': case 'AutoFilterInfo': break;\n\t\t\t\tcase 'AutoFilter12': break;\n\t\t\t\tcase 'DropDownObjIds': break;\n\t\t\t\tcase 'Sort': break;\n\t\t\t\tcase 'SortData': break;\n\n\t\t\t\t/* Drawing */\n\t\t\t\tcase 'ShapePropsStream': break;\n\t\t\t\tcase 'MsoDrawing': case 'MsoDrawingGroup': case 'MsoDrawingSelection': break;\n\t\t\t\t/* Pub Stuff */\n\t\t\t\tcase 'WebPub': case 'AutoWebPub': break;\n\n\t\t\t\t/* Print Stuff */\n\t\t\t\tcase 'HeaderFooter': case 'HFPicture': case 'PLV':\n\t\t\t\tcase 'HorizontalPageBreaks': case 'VerticalPageBreaks': break;\n\t\t\t\t/* Behavioral */\n\t\t\t\tcase 'Backup': case 'CompressPictures': case 'Compat12': break;\n\n\t\t\t\t/* Should not Happen */\n\t\t\t\tcase 'Continue': case 'ContinueFrt12': break;\n\n\t\t\t\t/* Future Records */\n\t\t\t\tcase 'FrtFontList': case 'FrtWrapper': break;\n\n\t\t\t\tdefault: switch(R.n) { /* nested */\n\t\t\t\t/* BIFF5 records */\n\t\t\t\tcase 'TabIdConf': case 'Radar': case 'RadarArea': case 'DropBar': case 'Intl': case 'CoordList': case 'SerAuxErrBar': break;\n\n\t\t\t\t/* BIFF2-4 records */\n\t\t\t\tcase 'BIFF2FONTCLR': case 'BIFF2FMTCNT': case 'BIFF2FONTXTRA': break;\n\t\t\t\tcase 'BIFF2XF': case 'BIFF3XF': case 'BIFF4XF': break;\n\t\t\t\tcase 'BIFF2XFINDEX': break;\n\t\t\t\tcase 'BIFF4FMTCNT': case 'BIFF2ROW': case 'BIFF2WINDOW2': break;\n\n\t\t\t\t/* Miscellaneous */\n\t\t\t\tcase 'SCENARIO': case 'DConBin': case 'PicF': case 'DataLabExt':\n\t\t\t\tcase 'Lel': case 'BopPop': case 'BopPopCustom': case 'RealTimeData':\n\t\t\t\tcase 'Name': break;\n\t\t\t\tcase 'LHNGraph': case 'FnGroupName': case 'AddMenu': case 'LPr': break;\n\t\t\t\tcase 'ListObj': case 'ListField': break;\n\t\t\t\tcase 'RRSort': break;\n\t\t\t\tcase 'BigName': break;\n\t\t\t\tcase 'ToolbarHdr': case 'ToolbarEnd': break;\n\t\t\t\tcase 'DDEObjName': break;\n\t\t\t\tcase 'FRTArchId$': break;\n\t\t\t\tdefault: if(options.WTF) throw 'Unrecognized Record ' + R.n;\n\t\t\t}}}}\n\t\t} else blob.l += length;\n\t}\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n\tif(!options.bookSheets) wb.Sheets=Sheets;\n\tif(!wb.SheetNames.length && Preamble[\"!ref\"]) {\n\t\twb.SheetNames.push(\"Sheet1\");\n\t\t/*jshint -W069 */\n\t\tif(wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n\t\t/*jshint +W069 */\n\t} else wb.Preamble=Preamble;\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n\twb.Strings = sst;\n\twb.SSF = SSF.get_table();\n\tif(opts.enc) wb.Encryption = opts.enc;\n\tif(themes) wb.Themes = themes;\n\twb.Metadata = {};\n\tif(country !== undefined) wb.Metadata.Country = country;\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n\twb.Workbook = Workbook;\n\treturn wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n\tSI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n\tDSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n\tUDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb/*:CFBContainer*/, props, o) {\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n\tvar DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n\tif(DSI && DSI.size > 0) try {\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n\tvar SI = CFB.find(cfb, '/!SummaryInformation');\n\tif(SI && SI.size > 0) try {\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\tif(props.HeadingPairs && props.TitlesOfParts) {\n\t\tload_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n\t\tdelete props.HeadingPairs; delete props.TitlesOfParts;\n\t}\n}\nfunction write_xls_props(wb/*:Workbook*/, cfb/*:CFBContainer*/) {\n\tvar DSEntries = [], SEntries = [], CEntries = [];\n\tvar i = 0, Keys;\n\tif(wb.Props) {\n\t\tKeys = keys(wb.Props);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n\t}\n\tif(wb.Custprops) {\n\t\tKeys = keys(wb.Custprops);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) if(!Object.prototype.hasOwnProperty.call((wb.Props||{}), Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n\t}\n\tvar CEntries2 = [];\n\tfor(i = 0; i < CEntries.length; ++i) {\n\t\tif(XLSPSSkip.indexOf(CEntries[i][0]) > -1) continue;\n\t\tif(CEntries[i][1] == null) continue;\n\t\tCEntries2.push(CEntries[i]);\n\t}\n\tif(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n\tif(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\n\nfunction parse_xlscfb(cfb/*:any*/, options/*:?ParseOpts*/)/*:Workbook*/ {\nif(!options) options = {};\nfix_read_opts(options);\nreset_cp();\nif(options.codepage) set_ansi(options.codepage);\nvar CompObj/*:?CFBEntry*/, WB/*:?any*/;\nif(cfb.FullPaths) {\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n\tCompObj = CFB.find(cfb, '!CompObj');\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n} else {\n\tswitch(options.type) {\n\t\tcase 'base64': cfb = s2a(Base64.decode(cfb)); break;\n\t\tcase 'binary': cfb = s2a(cfb); break;\n\t\tcase 'buffer': break;\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n\t}\n\tprep_blob(cfb, 0);\n\tWB = ({content: cfb}/*:any*/);\n}\nvar /*::CompObjP, */WorkbookP/*:: :Workbook = XLSX.utils.book_new(); */;\n\nvar _data/*:?any*/;\nif(CompObj) /*::CompObjP = */parse_compobj(CompObj);\nif(options.bookProps && !options.bookSheets) WorkbookP = ({}/*:any*/);\nelse/*:: if(cfb instanceof CFBContainer) */ {\n\tvar T = has_buf ? 'buffer' : 'array';\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n\t/* Quattro Pro 7-8 */\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Quattro Pro 9 */\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Works 4 for Mac */\n\telse if((_data=CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");\n\telse throw new Error(\"Cannot find Workbook stream\");\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n}\n\nvar props = {};\nif(cfb.FullPaths) parse_xls_props(/*::((*/cfb/*:: :any):CFBContainer)*/, props, options);\n\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\nif(options.bookFiles) WorkbookP.cfb = cfb;\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\nreturn WorkbookP;\n}\n\n\nfunction write_xlscfb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:CFBContainer*/ {\n\tvar o = opts || {};\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\n\tvar wbpath = \"/Workbook\";\n\tswitch(o.bookType || \"xls\") {\n\t\tcase \"xls\": o.bookType = \"biff8\";\n\t\t/* falls through */\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\n\t\t/* falls through */\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n\t}\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n\tif(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n\t// TODO: SI, DSI, CO\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n\treturn cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n\t/*::[*/0x0000/*::]*/: { n:\"BrtRowHdr\", f:parse_BrtRowHdr },\n\t/*::[*/0x0001/*::]*/: { n:\"BrtCellBlank\", f:parse_BrtCellBlank },\n\t/*::[*/0x0002/*::]*/: { n:\"BrtCellRk\", f:parse_BrtCellRk },\n\t/*::[*/0x0003/*::]*/: { n:\"BrtCellError\", f:parse_BrtCellError },\n\t/*::[*/0x0004/*::]*/: { n:\"BrtCellBool\", f:parse_BrtCellBool },\n\t/*::[*/0x0005/*::]*/: { n:\"BrtCellReal\", f:parse_BrtCellReal },\n\t/*::[*/0x0006/*::]*/: { n:\"BrtCellSt\", f:parse_BrtCellSt },\n\t/*::[*/0x0007/*::]*/: { n:\"BrtCellIsst\", f:parse_BrtCellIsst },\n\t/*::[*/0x0008/*::]*/: { n:\"BrtFmlaString\", f:parse_BrtFmlaString },\n\t/*::[*/0x0009/*::]*/: { n:\"BrtFmlaNum\", f:parse_BrtFmlaNum },\n\t/*::[*/0x000A/*::]*/: { n:\"BrtFmlaBool\", f:parse_BrtFmlaBool },\n\t/*::[*/0x000B/*::]*/: { n:\"BrtFmlaError\", f:parse_BrtFmlaError },\n\t/*::[*/0x000C/*::]*/: { n:\"BrtShortBlank\", f:parse_BrtShortBlank },\n\t/*::[*/0x000D/*::]*/: { n:\"BrtShortRk\", f:parse_BrtShortRk },\n\t/*::[*/0x000E/*::]*/: { n:\"BrtShortError\", f:parse_BrtShortError },\n\t/*::[*/0x000F/*::]*/: { n:\"BrtShortBool\", f:parse_BrtShortBool },\n\t/*::[*/0x0010/*::]*/: { n:\"BrtShortReal\", f:parse_BrtShortReal },\n\t/*::[*/0x0011/*::]*/: { n:\"BrtShortSt\", f:parse_BrtShortSt },\n\t/*::[*/0x0012/*::]*/: { n:\"BrtShortIsst\", f:parse_BrtShortIsst },\n\t/*::[*/0x0013/*::]*/: { n:\"BrtSSTItem\", f:parse_RichStr },\n\t/*::[*/0x0014/*::]*/: { n:\"BrtPCDIMissing\" },\n\t/*::[*/0x0015/*::]*/: { n:\"BrtPCDINumber\" },\n\t/*::[*/0x0016/*::]*/: { n:\"BrtPCDIBoolean\" },\n\t/*::[*/0x0017/*::]*/: { n:\"BrtPCDIError\" },\n\t/*::[*/0x0018/*::]*/: { n:\"BrtPCDIString\" },\n\t/*::[*/0x0019/*::]*/: { n:\"BrtPCDIDatetime\" },\n\t/*::[*/0x001A/*::]*/: { n:\"BrtPCDIIndex\" },\n\t/*::[*/0x001B/*::]*/: { n:\"BrtPCDIAMissing\" },\n\t/*::[*/0x001C/*::]*/: { n:\"BrtPCDIANumber\" },\n\t/*::[*/0x001D/*::]*/: { n:\"BrtPCDIABoolean\" },\n\t/*::[*/0x001E/*::]*/: { n:\"BrtPCDIAError\" },\n\t/*::[*/0x001F/*::]*/: { n:\"BrtPCDIAString\" },\n\t/*::[*/0x0020/*::]*/: { n:\"BrtPCDIADatetime\" },\n\t/*::[*/0x0021/*::]*/: { n:\"BrtPCRRecord\" },\n\t/*::[*/0x0022/*::]*/: { n:\"BrtPCRRecordDt\" },\n\t/*::[*/0x0023/*::]*/: { n:\"BrtFRTBegin\" },\n\t/*::[*/0x0024/*::]*/: { n:\"BrtFRTEnd\" },\n\t/*::[*/0x0025/*::]*/: { n:\"BrtACBegin\" },\n\t/*::[*/0x0026/*::]*/: { n:\"BrtACEnd\" },\n\t/*::[*/0x0027/*::]*/: { n:\"BrtName\", f:parse_BrtName },\n\t/*::[*/0x0028/*::]*/: { n:\"BrtIndexRowBlock\" },\n\t/*::[*/0x002A/*::]*/: { n:\"BrtIndexBlock\" },\n\t/*::[*/0x002B/*::]*/: { n:\"BrtFont\", f:parse_BrtFont },\n\t/*::[*/0x002C/*::]*/: { n:\"BrtFmt\", f:parse_BrtFmt },\n\t/*::[*/0x002D/*::]*/: { n:\"BrtFill\", f:parse_BrtFill },\n\t/*::[*/0x002E/*::]*/: { n:\"BrtBorder\", f:parse_BrtBorder },\n\t/*::[*/0x002F/*::]*/: { n:\"BrtXF\", f:parse_BrtXF },\n\t/*::[*/0x0030/*::]*/: { n:\"BrtStyle\" },\n\t/*::[*/0x0031/*::]*/: { n:\"BrtCellMeta\", f:parse_Int32LE },\n\t/*::[*/0x0032/*::]*/: { n:\"BrtValueMeta\" },\n\t/*::[*/0x0033/*::]*/: { n:\"BrtMdb\" },\n\t/*::[*/0x0034/*::]*/: { n:\"BrtBeginFmd\" },\n\t/*::[*/0x0035/*::]*/: { n:\"BrtEndFmd\" },\n\t/*::[*/0x0036/*::]*/: { n:\"BrtBeginMdx\" },\n\t/*::[*/0x0037/*::]*/: { n:\"BrtEndMdx\" },\n\t/*::[*/0x0038/*::]*/: { n:\"BrtBeginMdxTuple\" },\n\t/*::[*/0x0039/*::]*/: { n:\"BrtEndMdxTuple\" },\n\t/*::[*/0x003A/*::]*/: { n:\"BrtMdxMbrIstr\" },\n\t/*::[*/0x003B/*::]*/: { n:\"BrtStr\" },\n\t/*::[*/0x003C/*::]*/: { n:\"BrtColInfo\", f:parse_ColInfo },\n\t/*::[*/0x003E/*::]*/: { n:\"BrtCellRString\", f:parse_BrtCellRString },\n\t/*::[*/0x003F/*::]*/: { n:\"BrtCalcChainItem$\", f:parse_BrtCalcChainItem$ },\n\t/*::[*/0x0040/*::]*/: { n:\"BrtDVal\", f:parse_BrtDVal },\n\t/*::[*/0x0041/*::]*/: { n:\"BrtSxvcellNum\" },\n\t/*::[*/0x0042/*::]*/: { n:\"BrtSxvcellStr\" },\n\t/*::[*/0x0043/*::]*/: { n:\"BrtSxvcellBool\" },\n\t/*::[*/0x0044/*::]*/: { n:\"BrtSxvcellErr\" },\n\t/*::[*/0x0045/*::]*/: { n:\"BrtSxvcellDate\" },\n\t/*::[*/0x0046/*::]*/: { n:\"BrtSxvcellNil\" },\n\t/*::[*/0x0080/*::]*/: { n:\"BrtFileVersion\" },\n\t/*::[*/0x0081/*::]*/: { n:\"BrtBeginSheet\" },\n\t/*::[*/0x0082/*::]*/: { n:\"BrtEndSheet\" },\n\t/*::[*/0x0083/*::]*/: { n:\"BrtBeginBook\", f:parsenoop, p:0 },\n\t/*::[*/0x0084/*::]*/: { n:\"BrtEndBook\" },\n\t/*::[*/0x0085/*::]*/: { n:\"BrtBeginWsViews\" },\n\t/*::[*/0x0086/*::]*/: { n:\"BrtEndWsViews\" },\n\t/*::[*/0x0087/*::]*/: { n:\"BrtBeginBookViews\" },\n\t/*::[*/0x0088/*::]*/: { n:\"BrtEndBookViews\" },\n\t/*::[*/0x0089/*::]*/: { n:\"BrtBeginWsView\", f:parse_BrtBeginWsView },\n\t/*::[*/0x008A/*::]*/: { n:\"BrtEndWsView\" },\n\t/*::[*/0x008B/*::]*/: { n:\"BrtBeginCsViews\" },\n\t/*::[*/0x008C/*::]*/: { n:\"BrtEndCsViews\" },\n\t/*::[*/0x008D/*::]*/: { n:\"BrtBeginCsView\" },\n\t/*::[*/0x008E/*::]*/: { n:\"BrtEndCsView\" },\n\t/*::[*/0x008F/*::]*/: { n:\"BrtBeginBundleShs\" },\n\t/*::[*/0x0090/*::]*/: { n:\"BrtEndBundleShs\" },\n\t/*::[*/0x0091/*::]*/: { n:\"BrtBeginSheetData\" },\n\t/*::[*/0x0092/*::]*/: { n:\"BrtEndSheetData\" },\n\t/*::[*/0x0093/*::]*/: { n:\"BrtWsProp\", f:parse_BrtWsProp },\n\t/*::[*/0x0094/*::]*/: { n:\"BrtWsDim\", f:parse_BrtWsDim, p:16 },\n\t/*::[*/0x0097/*::]*/: { n:\"BrtPane\", f:parse_BrtPane },\n\t/*::[*/0x0098/*::]*/: { n:\"BrtSel\" },\n\t/*::[*/0x0099/*::]*/: { n:\"BrtWbProp\", f:parse_BrtWbProp },\n\t/*::[*/0x009A/*::]*/: { n:\"BrtWbFactoid\" },\n\t/*::[*/0x009B/*::]*/: { n:\"BrtFileRecover\" },\n\t/*::[*/0x009C/*::]*/: { n:\"BrtBundleSh\", f:parse_BrtBundleSh },\n\t/*::[*/0x009D/*::]*/: { n:\"BrtCalcProp\" },\n\t/*::[*/0x009E/*::]*/: { n:\"BrtBookView\" },\n\t/*::[*/0x009F/*::]*/: { n:\"BrtBeginSst\", f:parse_BrtBeginSst },\n\t/*::[*/0x00A0/*::]*/: { n:\"BrtEndSst\" },\n\t/*::[*/0x00A1/*::]*/: { n:\"BrtBeginAFilter\", f:parse_UncheckedRfX },\n\t/*::[*/0x00A2/*::]*/: { n:\"BrtEndAFilter\" },\n\t/*::[*/0x00A3/*::]*/: { n:\"BrtBeginFilterColumn\" },\n\t/*::[*/0x00A4/*::]*/: { n:\"BrtEndFilterColumn\" },\n\t/*::[*/0x00A5/*::]*/: { n:\"BrtBeginFilters\" },\n\t/*::[*/0x00A6/*::]*/: { n:\"BrtEndFilters\" },\n\t/*::[*/0x00A7/*::]*/: { n:\"BrtFilter\" },\n\t/*::[*/0x00A8/*::]*/: { n:\"BrtColorFilter\" },\n\t/*::[*/0x00A9/*::]*/: { n:\"BrtIconFilter\" },\n\t/*::[*/0x00AA/*::]*/: { n:\"BrtTop10Filter\" },\n\t/*::[*/0x00AB/*::]*/: { n:\"BrtDynamicFilter\" },\n\t/*::[*/0x00AC/*::]*/: { n:\"BrtBeginCustomFilters\" },\n\t/*::[*/0x00AD/*::]*/: { n:\"BrtEndCustomFilters\" },\n\t/*::[*/0x00AE/*::]*/: { n:\"BrtCustomFilter\" },\n\t/*::[*/0x00AF/*::]*/: { n:\"BrtAFilterDateGroupItem\" },\n\t/*::[*/0x00B0/*::]*/: { n:\"BrtMergeCell\", f:parse_BrtMergeCell },\n\t/*::[*/0x00B1/*::]*/: { n:\"BrtBeginMergeCells\" },\n\t/*::[*/0x00B2/*::]*/: { n:\"BrtEndMergeCells\" },\n\t/*::[*/0x00B3/*::]*/: { n:\"BrtBeginPivotCacheDef\" },\n\t/*::[*/0x00B4/*::]*/: { n:\"BrtEndPivotCacheDef\" },\n\t/*::[*/0x00B5/*::]*/: { n:\"BrtBeginPCDFields\" },\n\t/*::[*/0x00B6/*::]*/: { n:\"BrtEndPCDFields\" },\n\t/*::[*/0x00B7/*::]*/: { n:\"BrtBeginPCDField\" },\n\t/*::[*/0x00B8/*::]*/: { n:\"BrtEndPCDField\" },\n\t/*::[*/0x00B9/*::]*/: { n:\"BrtBeginPCDSource\" },\n\t/*::[*/0x00BA/*::]*/: { n:\"BrtEndPCDSource\" },\n\t/*::[*/0x00BB/*::]*/: { n:\"BrtBeginPCDSRange\" },\n\t/*::[*/0x00BC/*::]*/: { n:\"BrtEndPCDSRange\" },\n\t/*::[*/0x00BD/*::]*/: { n:\"BrtBeginPCDFAtbl\" },\n\t/*::[*/0x00BE/*::]*/: { n:\"BrtEndPCDFAtbl\" },\n\t/*::[*/0x00BF/*::]*/: { n:\"BrtBeginPCDIRun\" },\n\t/*::[*/0x00C0/*::]*/: { n:\"BrtEndPCDIRun\" },\n\t/*::[*/0x00C1/*::]*/: { n:\"BrtBeginPivotCacheRecords\" },\n\t/*::[*/0x00C2/*::]*/: { n:\"BrtEndPivotCacheRecords\" },\n\t/*::[*/0x00C3/*::]*/: { n:\"BrtBeginPCDHierarchies\" },\n\t/*::[*/0x00C4/*::]*/: { n:\"BrtEndPCDHierarchies\" },\n\t/*::[*/0x00C5/*::]*/: { n:\"BrtBeginPCDHierarchy\" },\n\t/*::[*/0x00C6/*::]*/: { n:\"BrtEndPCDHierarchy\" },\n\t/*::[*/0x00C7/*::]*/: { n:\"BrtBeginPCDHFieldsUsage\" },\n\t/*::[*/0x00C8/*::]*/: { n:\"BrtEndPCDHFieldsUsage\" },\n\t/*::[*/0x00C9/*::]*/: { n:\"BrtBeginExtConnection\" },\n\t/*::[*/0x00CA/*::]*/: { n:\"BrtEndExtConnection\" },\n\t/*::[*/0x00CB/*::]*/: { n:\"BrtBeginECDbProps\" },\n\t/*::[*/0x00CC/*::]*/: { n:\"BrtEndECDbProps\" },\n\t/*::[*/0x00CD/*::]*/: { n:\"BrtBeginECOlapProps\" },\n\t/*::[*/0x00CE/*::]*/: { n:\"BrtEndECOlapProps\" },\n\t/*::[*/0x00CF/*::]*/: { n:\"BrtBeginPCDSConsol\" },\n\t/*::[*/0x00D0/*::]*/: { n:\"BrtEndPCDSConsol\" },\n\t/*::[*/0x00D1/*::]*/: { n:\"BrtBeginPCDSCPages\" },\n\t/*::[*/0x00D2/*::]*/: { n:\"BrtEndPCDSCPages\" },\n\t/*::[*/0x00D3/*::]*/: { n:\"BrtBeginPCDSCPage\" },\n\t/*::[*/0x00D4/*::]*/: { n:\"BrtEndPCDSCPage\" },\n\t/*::[*/0x00D5/*::]*/: { n:\"BrtBeginPCDSCPItem\" },\n\t/*::[*/0x00D6/*::]*/: { n:\"BrtEndPCDSCPItem\" },\n\t/*::[*/0x00D7/*::]*/: { n:\"BrtBeginPCDSCSets\" },\n\t/*::[*/0x00D8/*::]*/: { n:\"BrtEndPCDSCSets\" },\n\t/*::[*/0x00D9/*::]*/: { n:\"BrtBeginPCDSCSet\" },\n\t/*::[*/0x00DA/*::]*/: { n:\"BrtEndPCDSCSet\" },\n\t/*::[*/0x00DB/*::]*/: { n:\"BrtBeginPCDFGroup\" },\n\t/*::[*/0x00DC/*::]*/: { n:\"BrtEndPCDFGroup\" },\n\t/*::[*/0x00DD/*::]*/: { n:\"BrtBeginPCDFGItems\" },\n\t/*::[*/0x00DE/*::]*/: { n:\"BrtEndPCDFGItems\" },\n\t/*::[*/0x00DF/*::]*/: { n:\"BrtBeginPCDFGRange\" },\n\t/*::[*/0x00E0/*::]*/: { n:\"BrtEndPCDFGRange\" },\n\t/*::[*/0x00E1/*::]*/: { n:\"BrtBeginPCDFGDiscrete\" },\n\t/*::[*/0x00E2/*::]*/: { n:\"BrtEndPCDFGDiscrete\" },\n\t/*::[*/0x00E3/*::]*/: { n:\"BrtBeginPCDSDTupleCache\" },\n\t/*::[*/0x00E4/*::]*/: { n:\"BrtEndPCDSDTupleCache\" },\n\t/*::[*/0x00E5/*::]*/: { n:\"BrtBeginPCDSDTCEntries\" },\n\t/*::[*/0x00E6/*::]*/: { n:\"BrtEndPCDSDTCEntries\" },\n\t/*::[*/0x00E7/*::]*/: { n:\"BrtBeginPCDSDTCEMembers\" },\n\t/*::[*/0x00E8/*::]*/: { n:\"BrtEndPCDSDTCEMembers\" },\n\t/*::[*/0x00E9/*::]*/: { n:\"BrtBeginPCDSDTCEMember\" },\n\t/*::[*/0x00EA/*::]*/: { n:\"BrtEndPCDSDTCEMember\" },\n\t/*::[*/0x00EB/*::]*/: { n:\"BrtBeginPCDSDTCQueries\" },\n\t/*::[*/0x00EC/*::]*/: { n:\"BrtEndPCDSDTCQueries\" },\n\t/*::[*/0x00ED/*::]*/: { n:\"BrtBeginPCDSDTCQuery\" },\n\t/*::[*/0x00EE/*::]*/: { n:\"BrtEndPCDSDTCQuery\" },\n\t/*::[*/0x00EF/*::]*/: { n:\"BrtBeginPCDSDTCSets\" },\n\t/*::[*/0x00F0/*::]*/: { n:\"BrtEndPCDSDTCSets\" },\n\t/*::[*/0x00F1/*::]*/: { n:\"BrtBeginPCDSDTCSet\" },\n\t/*::[*/0x00F2/*::]*/: { n:\"BrtEndPCDSDTCSet\" },\n\t/*::[*/0x00F3/*::]*/: { n:\"BrtBeginPCDCalcItems\" },\n\t/*::[*/0x00F4/*::]*/: { n:\"BrtEndPCDCalcItems\" },\n\t/*::[*/0x00F5/*::]*/: { n:\"BrtBeginPCDCalcItem\" },\n\t/*::[*/0x00F6/*::]*/: { n:\"BrtEndPCDCalcItem\" },\n\t/*::[*/0x00F7/*::]*/: { n:\"BrtBeginPRule\" },\n\t/*::[*/0x00F8/*::]*/: { n:\"BrtEndPRule\" },\n\t/*::[*/0x00F9/*::]*/: { n:\"BrtBeginPRFilters\" },\n\t/*::[*/0x00FA/*::]*/: { n:\"BrtEndPRFilters\" },\n\t/*::[*/0x00FB/*::]*/: { n:\"BrtBeginPRFilter\" },\n\t/*::[*/0x00FC/*::]*/: { n:\"BrtEndPRFilter\" },\n\t/*::[*/0x00FD/*::]*/: { n:\"BrtBeginPNames\" },\n\t/*::[*/0x00FE/*::]*/: { n:\"BrtEndPNames\" },\n\t/*::[*/0x00FF/*::]*/: { n:\"BrtBeginPName\" },\n\t/*::[*/0x0100/*::]*/: { n:\"BrtEndPName\" },\n\t/*::[*/0x0101/*::]*/: { n:\"BrtBeginPNPairs\" },\n\t/*::[*/0x0102/*::]*/: { n:\"BrtEndPNPairs\" },\n\t/*::[*/0x0103/*::]*/: { n:\"BrtBeginPNPair\" },\n\t/*::[*/0x0104/*::]*/: { n:\"BrtEndPNPair\" },\n\t/*::[*/0x0105/*::]*/: { n:\"BrtBeginECWebProps\" },\n\t/*::[*/0x0106/*::]*/: { n:\"BrtEndECWebProps\" },\n\t/*::[*/0x0107/*::]*/: { n:\"BrtBeginEcWpTables\" },\n\t/*::[*/0x0108/*::]*/: { n:\"BrtEndECWPTables\" },\n\t/*::[*/0x0109/*::]*/: { n:\"BrtBeginECParams\" },\n\t/*::[*/0x010A/*::]*/: { n:\"BrtEndECParams\" },\n\t/*::[*/0x010B/*::]*/: { n:\"BrtBeginECParam\" },\n\t/*::[*/0x010C/*::]*/: { n:\"BrtEndECParam\" },\n\t/*::[*/0x010D/*::]*/: { n:\"BrtBeginPCDKPIs\" },\n\t/*::[*/0x010E/*::]*/: { n:\"BrtEndPCDKPIs\" },\n\t/*::[*/0x010F/*::]*/: { n:\"BrtBeginPCDKPI\" },\n\t/*::[*/0x0110/*::]*/: { n:\"BrtEndPCDKPI\" },\n\t/*::[*/0x0111/*::]*/: { n:\"BrtBeginDims\" },\n\t/*::[*/0x0112/*::]*/: { n:\"BrtEndDims\" },\n\t/*::[*/0x0113/*::]*/: { n:\"BrtBeginDim\" },\n\t/*::[*/0x0114/*::]*/: { n:\"BrtEndDim\" },\n\t/*::[*/0x0115/*::]*/: { n:\"BrtIndexPartEnd\" },\n\t/*::[*/0x0116/*::]*/: { n:\"BrtBeginStyleSheet\" },\n\t/*::[*/0x0117/*::]*/: { n:\"BrtEndStyleSheet\" },\n\t/*::[*/0x0118/*::]*/: { n:\"BrtBeginSXView\" },\n\t/*::[*/0x0119/*::]*/: { n:\"BrtEndSXVI\" },\n\t/*::[*/0x011A/*::]*/: { n:\"BrtBeginSXVI\" },\n\t/*::[*/0x011B/*::]*/: { n:\"BrtBeginSXVIs\" },\n\t/*::[*/0x011C/*::]*/: { n:\"BrtEndSXVIs\" },\n\t/*::[*/0x011D/*::]*/: { n:\"BrtBeginSXVD\" },\n\t/*::[*/0x011E/*::]*/: { n:\"BrtEndSXVD\" },\n\t/*::[*/0x011F/*::]*/: { n:\"BrtBeginSXVDs\" },\n\t/*::[*/0x0120/*::]*/: { n:\"BrtEndSXVDs\" },\n\t/*::[*/0x0121/*::]*/: { n:\"BrtBeginSXPI\" },\n\t/*::[*/0x0122/*::]*/: { n:\"BrtEndSXPI\" },\n\t/*::[*/0x0123/*::]*/: { n:\"BrtBeginSXPIs\" },\n\t/*::[*/0x0124/*::]*/: { n:\"BrtEndSXPIs\" },\n\t/*::[*/0x0125/*::]*/: { n:\"BrtBeginSXDI\" },\n\t/*::[*/0x0126/*::]*/: { n:\"BrtEndSXDI\" },\n\t/*::[*/0x0127/*::]*/: { n:\"BrtBeginSXDIs\" },\n\t/*::[*/0x0128/*::]*/: { n:\"BrtEndSXDIs\" },\n\t/*::[*/0x0129/*::]*/: { n:\"BrtBeginSXLI\" },\n\t/*::[*/0x012A/*::]*/: { n:\"BrtEndSXLI\" },\n\t/*::[*/0x012B/*::]*/: { n:\"BrtBeginSXLIRws\" },\n\t/*::[*/0x012C/*::]*/: { n:\"BrtEndSXLIRws\" },\n\t/*::[*/0x012D/*::]*/: { n:\"BrtBeginSXLICols\" },\n\t/*::[*/0x012E/*::]*/: { n:\"BrtEndSXLICols\" },\n\t/*::[*/0x012F/*::]*/: { n:\"BrtBeginSXFormat\" },\n\t/*::[*/0x0130/*::]*/: { n:\"BrtEndSXFormat\" },\n\t/*::[*/0x0131/*::]*/: { n:\"BrtBeginSXFormats\" },\n\t/*::[*/0x0132/*::]*/: { n:\"BrtEndSxFormats\" },\n\t/*::[*/0x0133/*::]*/: { n:\"BrtBeginSxSelect\" },\n\t/*::[*/0x0134/*::]*/: { n:\"BrtEndSxSelect\" },\n\t/*::[*/0x0135/*::]*/: { n:\"BrtBeginISXVDRws\" },\n\t/*::[*/0x0136/*::]*/: { n:\"BrtEndISXVDRws\" },\n\t/*::[*/0x0137/*::]*/: { n:\"BrtBeginISXVDCols\" },\n\t/*::[*/0x0138/*::]*/: { n:\"BrtEndISXVDCols\" },\n\t/*::[*/0x0139/*::]*/: { n:\"BrtEndSXLocation\" },\n\t/*::[*/0x013A/*::]*/: { n:\"BrtBeginSXLocation\" },\n\t/*::[*/0x013B/*::]*/: { n:\"BrtEndSXView\" },\n\t/*::[*/0x013C/*::]*/: { n:\"BrtBeginSXTHs\" },\n\t/*::[*/0x013D/*::]*/: { n:\"BrtEndSXTHs\" },\n\t/*::[*/0x013E/*::]*/: { n:\"BrtBeginSXTH\" },\n\t/*::[*/0x013F/*::]*/: { n:\"BrtEndSXTH\" },\n\t/*::[*/0x0140/*::]*/: { n:\"BrtBeginISXTHRws\" },\n\t/*::[*/0x0141/*::]*/: { n:\"BrtEndISXTHRws\" },\n\t/*::[*/0x0142/*::]*/: { n:\"BrtBeginISXTHCols\" },\n\t/*::[*/0x0143/*::]*/: { n:\"BrtEndISXTHCols\" },\n\t/*::[*/0x0144/*::]*/: { n:\"BrtBeginSXTDMPS\" },\n\t/*::[*/0x0145/*::]*/: { n:\"BrtEndSXTDMPs\" },\n\t/*::[*/0x0146/*::]*/: { n:\"BrtBeginSXTDMP\" },\n\t/*::[*/0x0147/*::]*/: { n:\"BrtEndSXTDMP\" },\n\t/*::[*/0x0148/*::]*/: { n:\"BrtBeginSXTHItems\" },\n\t/*::[*/0x0149/*::]*/: { n:\"BrtEndSXTHItems\" },\n\t/*::[*/0x014A/*::]*/: { n:\"BrtBeginSXTHItem\" },\n\t/*::[*/0x014B/*::]*/: { n:\"BrtEndSXTHItem\" },\n\t/*::[*/0x014C/*::]*/: { n:\"BrtBeginMetadata\" },\n\t/*::[*/0x014D/*::]*/: { n:\"BrtEndMetadata\" },\n\t/*::[*/0x014E/*::]*/: { n:\"BrtBeginEsmdtinfo\" },\n\t/*::[*/0x014F/*::]*/: { n:\"BrtMdtinfo\", f:parse_BrtMdtinfo },\n\t/*::[*/0x0150/*::]*/: { n:\"BrtEndEsmdtinfo\" },\n\t/*::[*/0x0151/*::]*/: { n:\"BrtBeginEsmdb\" },\n\t/*::[*/0x0152/*::]*/: { n:\"BrtEndEsmdb\" },\n\t/*::[*/0x0153/*::]*/: { n:\"BrtBeginEsfmd\" },\n\t/*::[*/0x0154/*::]*/: { n:\"BrtEndEsfmd\" },\n\t/*::[*/0x0155/*::]*/: { n:\"BrtBeginSingleCells\" },\n\t/*::[*/0x0156/*::]*/: { n:\"BrtEndSingleCells\" },\n\t/*::[*/0x0157/*::]*/: { n:\"BrtBeginList\" },\n\t/*::[*/0x0158/*::]*/: { n:\"BrtEndList\" },\n\t/*::[*/0x0159/*::]*/: { n:\"BrtBeginListCols\" },\n\t/*::[*/0x015A/*::]*/: { n:\"BrtEndListCols\" },\n\t/*::[*/0x015B/*::]*/: { n:\"BrtBeginListCol\" },\n\t/*::[*/0x015C/*::]*/: { n:\"BrtEndListCol\" },\n\t/*::[*/0x015D/*::]*/: { n:\"BrtBeginListXmlCPr\" },\n\t/*::[*/0x015E/*::]*/: { n:\"BrtEndListXmlCPr\" },\n\t/*::[*/0x015F/*::]*/: { n:\"BrtListCCFmla\" },\n\t/*::[*/0x0160/*::]*/: { n:\"BrtListTrFmla\" },\n\t/*::[*/0x0161/*::]*/: { n:\"BrtBeginExternals\" },\n\t/*::[*/0x0162/*::]*/: { n:\"BrtEndExternals\" },\n\t/*::[*/0x0163/*::]*/: { n:\"BrtSupBookSrc\", f:parse_RelID},\n\t/*::[*/0x0165/*::]*/: { n:\"BrtSupSelf\" },\n\t/*::[*/0x0166/*::]*/: { n:\"BrtSupSame\" },\n\t/*::[*/0x0167/*::]*/: { n:\"BrtSupTabs\" },\n\t/*::[*/0x0168/*::]*/: { n:\"BrtBeginSupBook\" },\n\t/*::[*/0x0169/*::]*/: { n:\"BrtPlaceholderName\" },\n\t/*::[*/0x016A/*::]*/: { n:\"BrtExternSheet\", f:parse_ExternSheet },\n\t/*::[*/0x016B/*::]*/: { n:\"BrtExternTableStart\" },\n\t/*::[*/0x016C/*::]*/: { n:\"BrtExternTableEnd\" },\n\t/*::[*/0x016E/*::]*/: { n:\"BrtExternRowHdr\" },\n\t/*::[*/0x016F/*::]*/: { n:\"BrtExternCellBlank\" },\n\t/*::[*/0x0170/*::]*/: { n:\"BrtExternCellReal\" },\n\t/*::[*/0x0171/*::]*/: { n:\"BrtExternCellBool\" },\n\t/*::[*/0x0172/*::]*/: { n:\"BrtExternCellError\" },\n\t/*::[*/0x0173/*::]*/: { n:\"BrtExternCellString\" },\n\t/*::[*/0x0174/*::]*/: { n:\"BrtBeginEsmdx\" },\n\t/*::[*/0x0175/*::]*/: { n:\"BrtEndEsmdx\" },\n\t/*::[*/0x0176/*::]*/: { n:\"BrtBeginMdxSet\" },\n\t/*::[*/0x0177/*::]*/: { n:\"BrtEndMdxSet\" },\n\t/*::[*/0x0178/*::]*/: { n:\"BrtBeginMdxMbrProp\" },\n\t/*::[*/0x0179/*::]*/: { n:\"BrtEndMdxMbrProp\" },\n\t/*::[*/0x017A/*::]*/: { n:\"BrtBeginMdxKPI\" },\n\t/*::[*/0x017B/*::]*/: { n:\"BrtEndMdxKPI\" },\n\t/*::[*/0x017C/*::]*/: { n:\"BrtBeginEsstr\" },\n\t/*::[*/0x017D/*::]*/: { n:\"BrtEndEsstr\" },\n\t/*::[*/0x017E/*::]*/: { n:\"BrtBeginPRFItem\" },\n\t/*::[*/0x017F/*::]*/: { n:\"BrtEndPRFItem\" },\n\t/*::[*/0x0180/*::]*/: { n:\"BrtBeginPivotCacheIDs\" },\n\t/*::[*/0x0181/*::]*/: { n:\"BrtEndPivotCacheIDs\" },\n\t/*::[*/0x0182/*::]*/: { n:\"BrtBeginPivotCacheID\" },\n\t/*::[*/0x0183/*::]*/: { n:\"BrtEndPivotCacheID\" },\n\t/*::[*/0x0184/*::]*/: { n:\"BrtBeginISXVIs\" },\n\t/*::[*/0x0185/*::]*/: { n:\"BrtEndISXVIs\" },\n\t/*::[*/0x0186/*::]*/: { n:\"BrtBeginColInfos\" },\n\t/*::[*/0x0187/*::]*/: { n:\"BrtEndColInfos\" },\n\t/*::[*/0x0188/*::]*/: { n:\"BrtBeginRwBrk\" },\n\t/*::[*/0x0189/*::]*/: { n:\"BrtEndRwBrk\" },\n\t/*::[*/0x018A/*::]*/: { n:\"BrtBeginColBrk\" },\n\t/*::[*/0x018B/*::]*/: { n:\"BrtEndColBrk\" },\n\t/*::[*/0x018C/*::]*/: { n:\"BrtBrk\" },\n\t/*::[*/0x018D/*::]*/: { n:\"BrtUserBookView\" },\n\t/*::[*/0x018E/*::]*/: { n:\"BrtInfo\" },\n\t/*::[*/0x018F/*::]*/: { n:\"BrtCUsr\" },\n\t/*::[*/0x0190/*::]*/: { n:\"BrtUsr\" },\n\t/*::[*/0x0191/*::]*/: { n:\"BrtBeginUsers\" },\n\t/*::[*/0x0193/*::]*/: { n:\"BrtEOF\" },\n\t/*::[*/0x0194/*::]*/: { n:\"BrtUCR\" },\n\t/*::[*/0x0195/*::]*/: { n:\"BrtRRInsDel\" },\n\t/*::[*/0x0196/*::]*/: { n:\"BrtRREndInsDel\" },\n\t/*::[*/0x0197/*::]*/: { n:\"BrtRRMove\" },\n\t/*::[*/0x0198/*::]*/: { n:\"BrtRREndMove\" },\n\t/*::[*/0x0199/*::]*/: { n:\"BrtRRChgCell\" },\n\t/*::[*/0x019A/*::]*/: { n:\"BrtRREndChgCell\" },\n\t/*::[*/0x019B/*::]*/: { n:\"BrtRRHeader\" },\n\t/*::[*/0x019C/*::]*/: { n:\"BrtRRUserView\" },\n\t/*::[*/0x019D/*::]*/: { n:\"BrtRRRenSheet\" },\n\t/*::[*/0x019E/*::]*/: { n:\"BrtRRInsertSh\" },\n\t/*::[*/0x019F/*::]*/: { n:\"BrtRRDefName\" },\n\t/*::[*/0x01A0/*::]*/: { n:\"BrtRRNote\" },\n\t/*::[*/0x01A1/*::]*/: { n:\"BrtRRConflict\" },\n\t/*::[*/0x01A2/*::]*/: { n:\"BrtRRTQSIF\" },\n\t/*::[*/0x01A3/*::]*/: { n:\"BrtRRFormat\" },\n\t/*::[*/0x01A4/*::]*/: { n:\"BrtRREndFormat\" },\n\t/*::[*/0x01A5/*::]*/: { n:\"BrtRRAutoFmt\" },\n\t/*::[*/0x01A6/*::]*/: { n:\"BrtBeginUserShViews\" },\n\t/*::[*/0x01A7/*::]*/: { n:\"BrtBeginUserShView\" },\n\t/*::[*/0x01A8/*::]*/: { n:\"BrtEndUserShView\" },\n\t/*::[*/0x01A9/*::]*/: { n:\"BrtEndUserShViews\" },\n\t/*::[*/0x01AA/*::]*/: { n:\"BrtArrFmla\", f:parse_BrtArrFmla },\n\t/*::[*/0x01AB/*::]*/: { n:\"BrtShrFmla\", f:parse_BrtShrFmla },\n\t/*::[*/0x01AC/*::]*/: { n:\"BrtTable\" },\n\t/*::[*/0x01AD/*::]*/: { n:\"BrtBeginExtConnections\" },\n\t/*::[*/0x01AE/*::]*/: { n:\"BrtEndExtConnections\" },\n\t/*::[*/0x01AF/*::]*/: { n:\"BrtBeginPCDCalcMems\" },\n\t/*::[*/0x01B0/*::]*/: { n:\"BrtEndPCDCalcMems\" },\n\t/*::[*/0x01B1/*::]*/: { n:\"BrtBeginPCDCalcMem\" },\n\t/*::[*/0x01B2/*::]*/: { n:\"BrtEndPCDCalcMem\" },\n\t/*::[*/0x01B3/*::]*/: { n:\"BrtBeginPCDHGLevels\" },\n\t/*::[*/0x01B4/*::]*/: { n:\"BrtEndPCDHGLevels\" },\n\t/*::[*/0x01B5/*::]*/: { n:\"BrtBeginPCDHGLevel\" },\n\t/*::[*/0x01B6/*::]*/: { n:\"BrtEndPCDHGLevel\" },\n\t/*::[*/0x01B7/*::]*/: { n:\"BrtBeginPCDHGLGroups\" },\n\t/*::[*/0x01B8/*::]*/: { n:\"BrtEndPCDHGLGroups\" },\n\t/*::[*/0x01B9/*::]*/: { n:\"BrtBeginPCDHGLGroup\" },\n\t/*::[*/0x01BA/*::]*/: { n:\"BrtEndPCDHGLGroup\" },\n\t/*::[*/0x01BB/*::]*/: { n:\"BrtBeginPCDHGLGMembers\" },\n\t/*::[*/0x01BC/*::]*/: { n:\"BrtEndPCDHGLGMembers\" },\n\t/*::[*/0x01BD/*::]*/: { n:\"BrtBeginPCDHGLGMember\" },\n\t/*::[*/0x01BE/*::]*/: { n:\"BrtEndPCDHGLGMember\" },\n\t/*::[*/0x01BF/*::]*/: { n:\"BrtBeginQSI\" },\n\t/*::[*/0x01C0/*::]*/: { n:\"BrtEndQSI\" },\n\t/*::[*/0x01C1/*::]*/: { n:\"BrtBeginQSIR\" },\n\t/*::[*/0x01C2/*::]*/: { n:\"BrtEndQSIR\" },\n\t/*::[*/0x01C3/*::]*/: { n:\"BrtBeginDeletedNames\" },\n\t/*::[*/0x01C4/*::]*/: { n:\"BrtEndDeletedNames\" },\n\t/*::[*/0x01C5/*::]*/: { n:\"BrtBeginDeletedName\" },\n\t/*::[*/0x01C6/*::]*/: { n:\"BrtEndDeletedName\" },\n\t/*::[*/0x01C7/*::]*/: { n:\"BrtBeginQSIFs\" },\n\t/*::[*/0x01C8/*::]*/: { n:\"BrtEndQSIFs\" },\n\t/*::[*/0x01C9/*::]*/: { n:\"BrtBeginQSIF\" },\n\t/*::[*/0x01CA/*::]*/: { n:\"BrtEndQSIF\" },\n\t/*::[*/0x01CB/*::]*/: { n:\"BrtBeginAutoSortScope\" },\n\t/*::[*/0x01CC/*::]*/: { n:\"BrtEndAutoSortScope\" },\n\t/*::[*/0x01CD/*::]*/: { n:\"BrtBeginConditionalFormatting\" },\n\t/*::[*/0x01CE/*::]*/: { n:\"BrtEndConditionalFormatting\" },\n\t/*::[*/0x01CF/*::]*/: { n:\"BrtBeginCFRule\" },\n\t/*::[*/0x01D0/*::]*/: { n:\"BrtEndCFRule\" },\n\t/*::[*/0x01D1/*::]*/: { n:\"BrtBeginIconSet\" },\n\t/*::[*/0x01D2/*::]*/: { n:\"BrtEndIconSet\" },\n\t/*::[*/0x01D3/*::]*/: { n:\"BrtBeginDatabar\" },\n\t/*::[*/0x01D4/*::]*/: { n:\"BrtEndDatabar\" },\n\t/*::[*/0x01D5/*::]*/: { n:\"BrtBeginColorScale\" },\n\t/*::[*/0x01D6/*::]*/: { n:\"BrtEndColorScale\" },\n\t/*::[*/0x01D7/*::]*/: { n:\"BrtCFVO\" },\n\t/*::[*/0x01D8/*::]*/: { n:\"BrtExternValueMeta\" },\n\t/*::[*/0x01D9/*::]*/: { n:\"BrtBeginColorPalette\" },\n\t/*::[*/0x01DA/*::]*/: { n:\"BrtEndColorPalette\" },\n\t/*::[*/0x01DB/*::]*/: { n:\"BrtIndexedColor\" },\n\t/*::[*/0x01DC/*::]*/: { n:\"BrtMargins\", f:parse_BrtMargins },\n\t/*::[*/0x01DD/*::]*/: { n:\"BrtPrintOptions\" },\n\t/*::[*/0x01DE/*::]*/: { n:\"BrtPageSetup\" },\n\t/*::[*/0x01DF/*::]*/: { n:\"BrtBeginHeaderFooter\" },\n\t/*::[*/0x01E0/*::]*/: { n:\"BrtEndHeaderFooter\" },\n\t/*::[*/0x01E1/*::]*/: { n:\"BrtBeginSXCrtFormat\" },\n\t/*::[*/0x01E2/*::]*/: { n:\"BrtEndSXCrtFormat\" },\n\t/*::[*/0x01E3/*::]*/: { n:\"BrtBeginSXCrtFormats\" },\n\t/*::[*/0x01E4/*::]*/: { n:\"BrtEndSXCrtFormats\" },\n\t/*::[*/0x01E5/*::]*/: { n:\"BrtWsFmtInfo\", f:parse_BrtWsFmtInfo },\n\t/*::[*/0x01E6/*::]*/: { n:\"BrtBeginMgs\" },\n\t/*::[*/0x01E7/*::]*/: { n:\"BrtEndMGs\" },\n\t/*::[*/0x01E8/*::]*/: { n:\"BrtBeginMGMaps\" },\n\t/*::[*/0x01E9/*::]*/: { n:\"BrtEndMGMaps\" },\n\t/*::[*/0x01EA/*::]*/: { n:\"BrtBeginMG\" },\n\t/*::[*/0x01EB/*::]*/: { n:\"BrtEndMG\" },\n\t/*::[*/0x01EC/*::]*/: { n:\"BrtBeginMap\" },\n\t/*::[*/0x01ED/*::]*/: { n:\"BrtEndMap\" },\n\t/*::[*/0x01EE/*::]*/: { n:\"BrtHLink\", f:parse_BrtHLink },\n\t/*::[*/0x01EF/*::]*/: { n:\"BrtBeginDCon\" },\n\t/*::[*/0x01F0/*::]*/: { n:\"BrtEndDCon\" },\n\t/*::[*/0x01F1/*::]*/: { n:\"BrtBeginDRefs\" },\n\t/*::[*/0x01F2/*::]*/: { n:\"BrtEndDRefs\" },\n\t/*::[*/0x01F3/*::]*/: { n:\"BrtDRef\" },\n\t/*::[*/0x01F4/*::]*/: { n:\"BrtBeginScenMan\" },\n\t/*::[*/0x01F5/*::]*/: { n:\"BrtEndScenMan\" },\n\t/*::[*/0x01F6/*::]*/: { n:\"BrtBeginSct\" },\n\t/*::[*/0x01F7/*::]*/: { n:\"BrtEndSct\" },\n\t/*::[*/0x01F8/*::]*/: { n:\"BrtSlc\" },\n\t/*::[*/0x01F9/*::]*/: { n:\"BrtBeginDXFs\" },\n\t/*::[*/0x01FA/*::]*/: { n:\"BrtEndDXFs\" },\n\t/*::[*/0x01FB/*::]*/: { n:\"BrtDXF\" },\n\t/*::[*/0x01FC/*::]*/: { n:\"BrtBeginTableStyles\" },\n\t/*::[*/0x01FD/*::]*/: { n:\"BrtEndTableStyles\" },\n\t/*::[*/0x01FE/*::]*/: { n:\"BrtBeginTableStyle\" },\n\t/*::[*/0x01FF/*::]*/: { n:\"BrtEndTableStyle\" },\n\t/*::[*/0x0200/*::]*/: { n:\"BrtTableStyleElement\" },\n\t/*::[*/0x0201/*::]*/: { n:\"BrtTableStyleClient\" },\n\t/*::[*/0x0202/*::]*/: { n:\"BrtBeginVolDeps\" },\n\t/*::[*/0x0203/*::]*/: { n:\"BrtEndVolDeps\" },\n\t/*::[*/0x0204/*::]*/: { n:\"BrtBeginVolType\" },\n\t/*::[*/0x0205/*::]*/: { n:\"BrtEndVolType\" },\n\t/*::[*/0x0206/*::]*/: { n:\"BrtBeginVolMain\" },\n\t/*::[*/0x0207/*::]*/: { n:\"BrtEndVolMain\" },\n\t/*::[*/0x0208/*::]*/: { n:\"BrtBeginVolTopic\" },\n\t/*::[*/0x0209/*::]*/: { n:\"BrtEndVolTopic\" },\n\t/*::[*/0x020A/*::]*/: { n:\"BrtVolSubtopic\" },\n\t/*::[*/0x020B/*::]*/: { n:\"BrtVolRef\" },\n\t/*::[*/0x020C/*::]*/: { n:\"BrtVolNum\" },\n\t/*::[*/0x020D/*::]*/: { n:\"BrtVolErr\" },\n\t/*::[*/0x020E/*::]*/: { n:\"BrtVolStr\" },\n\t/*::[*/0x020F/*::]*/: { n:\"BrtVolBool\" },\n\t/*::[*/0x0210/*::]*/: { n:\"BrtBeginCalcChain$\" },\n\t/*::[*/0x0211/*::]*/: { n:\"BrtEndCalcChain$\" },\n\t/*::[*/0x0212/*::]*/: { n:\"BrtBeginSortState\" },\n\t/*::[*/0x0213/*::]*/: { n:\"BrtEndSortState\" },\n\t/*::[*/0x0214/*::]*/: { n:\"BrtBeginSortCond\" },\n\t/*::[*/0x0215/*::]*/: { n:\"BrtEndSortCond\" },\n\t/*::[*/0x0216/*::]*/: { n:\"BrtBookProtection\" },\n\t/*::[*/0x0217/*::]*/: { n:\"BrtSheetProtection\" },\n\t/*::[*/0x0218/*::]*/: { n:\"BrtRangeProtection\" },\n\t/*::[*/0x0219/*::]*/: { n:\"BrtPhoneticInfo\" },\n\t/*::[*/0x021A/*::]*/: { n:\"BrtBeginECTxtWiz\" },\n\t/*::[*/0x021B/*::]*/: { n:\"BrtEndECTxtWiz\" },\n\t/*::[*/0x021C/*::]*/: { n:\"BrtBeginECTWFldInfoLst\" },\n\t/*::[*/0x021D/*::]*/: { n:\"BrtEndECTWFldInfoLst\" },\n\t/*::[*/0x021E/*::]*/: { n:\"BrtBeginECTwFldInfo\" },\n\t/*::[*/0x0224/*::]*/: { n:\"BrtFileSharing\" },\n\t/*::[*/0x0225/*::]*/: { n:\"BrtOleSize\" },\n\t/*::[*/0x0226/*::]*/: { n:\"BrtDrawing\", f:parse_RelID },\n\t/*::[*/0x0227/*::]*/: { n:\"BrtLegacyDrawing\" },\n\t/*::[*/0x0228/*::]*/: { n:\"BrtLegacyDrawingHF\" },\n\t/*::[*/0x0229/*::]*/: { n:\"BrtWebOpt\" },\n\t/*::[*/0x022A/*::]*/: { n:\"BrtBeginWebPubItems\" },\n\t/*::[*/0x022B/*::]*/: { n:\"BrtEndWebPubItems\" },\n\t/*::[*/0x022C/*::]*/: { n:\"BrtBeginWebPubItem\" },\n\t/*::[*/0x022D/*::]*/: { n:\"BrtEndWebPubItem\" },\n\t/*::[*/0x022E/*::]*/: { n:\"BrtBeginSXCondFmt\" },\n\t/*::[*/0x022F/*::]*/: { n:\"BrtEndSXCondFmt\" },\n\t/*::[*/0x0230/*::]*/: { n:\"BrtBeginSXCondFmts\" },\n\t/*::[*/0x0231/*::]*/: { n:\"BrtEndSXCondFmts\" },\n\t/*::[*/0x0232/*::]*/: { n:\"BrtBkHim\" },\n\t/*::[*/0x0234/*::]*/: { n:\"BrtColor\" },\n\t/*::[*/0x0235/*::]*/: { n:\"BrtBeginIndexedColors\" },\n\t/*::[*/0x0236/*::]*/: { n:\"BrtEndIndexedColors\" },\n\t/*::[*/0x0239/*::]*/: { n:\"BrtBeginMRUColors\" },\n\t/*::[*/0x023A/*::]*/: { n:\"BrtEndMRUColors\" },\n\t/*::[*/0x023C/*::]*/: { n:\"BrtMRUColor\" },\n\t/*::[*/0x023D/*::]*/: { n:\"BrtBeginDVals\" },\n\t/*::[*/0x023E/*::]*/: { n:\"BrtEndDVals\" },\n\t/*::[*/0x0241/*::]*/: { n:\"BrtSupNameStart\" },\n\t/*::[*/0x0242/*::]*/: { n:\"BrtSupNameValueStart\" },\n\t/*::[*/0x0243/*::]*/: { n:\"BrtSupNameValueEnd\" },\n\t/*::[*/0x0244/*::]*/: { n:\"BrtSupNameNum\" },\n\t/*::[*/0x0245/*::]*/: { n:\"BrtSupNameErr\" },\n\t/*::[*/0x0246/*::]*/: { n:\"BrtSupNameSt\" },\n\t/*::[*/0x0247/*::]*/: { n:\"BrtSupNameNil\" },\n\t/*::[*/0x0248/*::]*/: { n:\"BrtSupNameBool\" },\n\t/*::[*/0x0249/*::]*/: { n:\"BrtSupNameFmla\" },\n\t/*::[*/0x024A/*::]*/: { n:\"BrtSupNameBits\" },\n\t/*::[*/0x024B/*::]*/: { n:\"BrtSupNameEnd\" },\n\t/*::[*/0x024C/*::]*/: { n:\"BrtEndSupBook\" },\n\t/*::[*/0x024D/*::]*/: { n:\"BrtCellSmartTagProperty\" },\n\t/*::[*/0x024E/*::]*/: { n:\"BrtBeginCellSmartTag\" },\n\t/*::[*/0x024F/*::]*/: { n:\"BrtEndCellSmartTag\" },\n\t/*::[*/0x0250/*::]*/: { n:\"BrtBeginCellSmartTags\" },\n\t/*::[*/0x0251/*::]*/: { n:\"BrtEndCellSmartTags\" },\n\t/*::[*/0x0252/*::]*/: { n:\"BrtBeginSmartTags\" },\n\t/*::[*/0x0253/*::]*/: { n:\"BrtEndSmartTags\" },\n\t/*::[*/0x0254/*::]*/: { n:\"BrtSmartTagType\" },\n\t/*::[*/0x0255/*::]*/: { n:\"BrtBeginSmartTagTypes\" },\n\t/*::[*/0x0256/*::]*/: { n:\"BrtEndSmartTagTypes\" },\n\t/*::[*/0x0257/*::]*/: { n:\"BrtBeginSXFilters\" },\n\t/*::[*/0x0258/*::]*/: { n:\"BrtEndSXFilters\" },\n\t/*::[*/0x0259/*::]*/: { n:\"BrtBeginSXFILTER\" },\n\t/*::[*/0x025A/*::]*/: { n:\"BrtEndSXFilter\" },\n\t/*::[*/0x025B/*::]*/: { n:\"BrtBeginFills\" },\n\t/*::[*/0x025C/*::]*/: { n:\"BrtEndFills\" },\n\t/*::[*/0x025D/*::]*/: { n:\"BrtBeginCellWatches\" },\n\t/*::[*/0x025E/*::]*/: { n:\"BrtEndCellWatches\" },\n\t/*::[*/0x025F/*::]*/: { n:\"BrtCellWatch\" },\n\t/*::[*/0x0260/*::]*/: { n:\"BrtBeginCRErrs\" },\n\t/*::[*/0x0261/*::]*/: { n:\"BrtEndCRErrs\" },\n\t/*::[*/0x0262/*::]*/: { n:\"BrtCrashRecErr\" },\n\t/*::[*/0x0263/*::]*/: { n:\"BrtBeginFonts\" },\n\t/*::[*/0x0264/*::]*/: { n:\"BrtEndFonts\" },\n\t/*::[*/0x0265/*::]*/: { n:\"BrtBeginBorders\" },\n\t/*::[*/0x0266/*::]*/: { n:\"BrtEndBorders\" },\n\t/*::[*/0x0267/*::]*/: { n:\"BrtBeginFmts\" },\n\t/*::[*/0x0268/*::]*/: { n:\"BrtEndFmts\" },\n\t/*::[*/0x0269/*::]*/: { n:\"BrtBeginCellXFs\" },\n\t/*::[*/0x026A/*::]*/: { n:\"BrtEndCellXFs\" },\n\t/*::[*/0x026B/*::]*/: { n:\"BrtBeginStyles\" },\n\t/*::[*/0x026C/*::]*/: { n:\"BrtEndStyles\" },\n\t/*::[*/0x0271/*::]*/: { n:\"BrtBigName\" },\n\t/*::[*/0x0272/*::]*/: { n:\"BrtBeginCellStyleXFs\" },\n\t/*::[*/0x0273/*::]*/: { n:\"BrtEndCellStyleXFs\" },\n\t/*::[*/0x0274/*::]*/: { n:\"BrtBeginComments\" },\n\t/*::[*/0x0275/*::]*/: { n:\"BrtEndComments\" },\n\t/*::[*/0x0276/*::]*/: { n:\"BrtBeginCommentAuthors\" },\n\t/*::[*/0x0277/*::]*/: { n:\"BrtEndCommentAuthors\" },\n\t/*::[*/0x0278/*::]*/: { n:\"BrtCommentAuthor\", f:parse_BrtCommentAuthor },\n\t/*::[*/0x0279/*::]*/: { n:\"BrtBeginCommentList\" },\n\t/*::[*/0x027A/*::]*/: { n:\"BrtEndCommentList\" },\n\t/*::[*/0x027B/*::]*/: { n:\"BrtBeginComment\", f:parse_BrtBeginComment},\n\t/*::[*/0x027C/*::]*/: { n:\"BrtEndComment\" },\n\t/*::[*/0x027D/*::]*/: { n:\"BrtCommentText\", f:parse_BrtCommentText },\n\t/*::[*/0x027E/*::]*/: { n:\"BrtBeginOleObjects\" },\n\t/*::[*/0x027F/*::]*/: { n:\"BrtOleObject\" },\n\t/*::[*/0x0280/*::]*/: { n:\"BrtEndOleObjects\" },\n\t/*::[*/0x0281/*::]*/: { n:\"BrtBeginSxrules\" },\n\t/*::[*/0x0282/*::]*/: { n:\"BrtEndSxRules\" },\n\t/*::[*/0x0283/*::]*/: { n:\"BrtBeginActiveXControls\" },\n\t/*::[*/0x0284/*::]*/: { n:\"BrtActiveX\" },\n\t/*::[*/0x0285/*::]*/: { n:\"BrtEndActiveXControls\" },\n\t/*::[*/0x0286/*::]*/: { n:\"BrtBeginPCDSDTCEMembersSortBy\" },\n\t/*::[*/0x0288/*::]*/: { n:\"BrtBeginCellIgnoreECs\" },\n\t/*::[*/0x0289/*::]*/: { n:\"BrtCellIgnoreEC\" },\n\t/*::[*/0x028A/*::]*/: { n:\"BrtEndCellIgnoreECs\" },\n\t/*::[*/0x028B/*::]*/: { n:\"BrtCsProp\", f:parse_BrtCsProp },\n\t/*::[*/0x028C/*::]*/: { n:\"BrtCsPageSetup\" },\n\t/*::[*/0x028D/*::]*/: { n:\"BrtBeginUserCsViews\" },\n\t/*::[*/0x028E/*::]*/: { n:\"BrtEndUserCsViews\" },\n\t/*::[*/0x028F/*::]*/: { n:\"BrtBeginUserCsView\" },\n\t/*::[*/0x0290/*::]*/: { n:\"BrtEndUserCsView\" },\n\t/*::[*/0x0291/*::]*/: { n:\"BrtBeginPcdSFCIEntries\" },\n\t/*::[*/0x0292/*::]*/: { n:\"BrtEndPCDSFCIEntries\" },\n\t/*::[*/0x0293/*::]*/: { n:\"BrtPCDSFCIEntry\" },\n\t/*::[*/0x0294/*::]*/: { n:\"BrtBeginListParts\" },\n\t/*::[*/0x0295/*::]*/: { n:\"BrtListPart\" },\n\t/*::[*/0x0296/*::]*/: { n:\"BrtEndListParts\" },\n\t/*::[*/0x0297/*::]*/: { n:\"BrtSheetCalcProp\" },\n\t/*::[*/0x0298/*::]*/: { n:\"BrtBeginFnGroup\" },\n\t/*::[*/0x0299/*::]*/: { n:\"BrtFnGroup\" },\n\t/*::[*/0x029A/*::]*/: { n:\"BrtEndFnGroup\" },\n\t/*::[*/0x029B/*::]*/: { n:\"BrtSupAddin\" },\n\t/*::[*/0x029C/*::]*/: { n:\"BrtSXTDMPOrder\" },\n\t/*::[*/0x029D/*::]*/: { n:\"BrtCsProtection\" },\n\t/*::[*/0x029F/*::]*/: { n:\"BrtBeginWsSortMap\" },\n\t/*::[*/0x02A0/*::]*/: { n:\"BrtEndWsSortMap\" },\n\t/*::[*/0x02A1/*::]*/: { n:\"BrtBeginRRSort\" },\n\t/*::[*/0x02A2/*::]*/: { n:\"BrtEndRRSort\" },\n\t/*::[*/0x02A3/*::]*/: { n:\"BrtRRSortItem\" },\n\t/*::[*/0x02A4/*::]*/: { n:\"BrtFileSharingIso\" },\n\t/*::[*/0x02A5/*::]*/: { n:\"BrtBookProtectionIso\" },\n\t/*::[*/0x02A6/*::]*/: { n:\"BrtSheetProtectionIso\" },\n\t/*::[*/0x02A7/*::]*/: { n:\"BrtCsProtectionIso\" },\n\t/*::[*/0x02A8/*::]*/: { n:\"BrtRangeProtectionIso\" },\n\t/*::[*/0x02A9/*::]*/: { n:\"BrtDValList\" },\n\t/*::[*/0x0400/*::]*/: { n:\"BrtRwDescent\" },\n\t/*::[*/0x0401/*::]*/: { n:\"BrtKnownFonts\" },\n\t/*::[*/0x0402/*::]*/: { n:\"BrtBeginSXTupleSet\" },\n\t/*::[*/0x0403/*::]*/: { n:\"BrtEndSXTupleSet\" },\n\t/*::[*/0x0404/*::]*/: { n:\"BrtBeginSXTupleSetHeader\" },\n\t/*::[*/0x0405/*::]*/: { n:\"BrtEndSXTupleSetHeader\" },\n\t/*::[*/0x0406/*::]*/: { n:\"BrtSXTupleSetHeaderItem\" },\n\t/*::[*/0x0407/*::]*/: { n:\"BrtBeginSXTupleSetData\" },\n\t/*::[*/0x0408/*::]*/: { n:\"BrtEndSXTupleSetData\" },\n\t/*::[*/0x0409/*::]*/: { n:\"BrtBeginSXTupleSetRow\" },\n\t/*::[*/0x040A/*::]*/: { n:\"BrtEndSXTupleSetRow\" },\n\t/*::[*/0x040B/*::]*/: { n:\"BrtSXTupleSetRowItem\" },\n\t/*::[*/0x040C/*::]*/: { n:\"BrtNameExt\" },\n\t/*::[*/0x040D/*::]*/: { n:\"BrtPCDH14\" },\n\t/*::[*/0x040E/*::]*/: { n:\"BrtBeginPCDCalcMem14\" },\n\t/*::[*/0x040F/*::]*/: { n:\"BrtEndPCDCalcMem14\" },\n\t/*::[*/0x0410/*::]*/: { n:\"BrtSXTH14\" },\n\t/*::[*/0x0411/*::]*/: { n:\"BrtBeginSparklineGroup\" },\n\t/*::[*/0x0412/*::]*/: { n:\"BrtEndSparklineGroup\" },\n\t/*::[*/0x0413/*::]*/: { n:\"BrtSparkline\" },\n\t/*::[*/0x0414/*::]*/: { n:\"BrtSXDI14\" },\n\t/*::[*/0x0415/*::]*/: { n:\"BrtWsFmtInfoEx14\" },\n\t/*::[*/0x0416/*::]*/: { n:\"BrtBeginConditionalFormatting14\" },\n\t/*::[*/0x0417/*::]*/: { n:\"BrtEndConditionalFormatting14\" },\n\t/*::[*/0x0418/*::]*/: { n:\"BrtBeginCFRule14\" },\n\t/*::[*/0x0419/*::]*/: { n:\"BrtEndCFRule14\" },\n\t/*::[*/0x041A/*::]*/: { n:\"BrtCFVO14\" },\n\t/*::[*/0x041B/*::]*/: { n:\"BrtBeginDatabar14\" },\n\t/*::[*/0x041C/*::]*/: { n:\"BrtBeginIconSet14\" },\n\t/*::[*/0x041D/*::]*/: { n:\"BrtDVal14\", f: parse_BrtDVal14 },\n\t/*::[*/0x041E/*::]*/: { n:\"BrtBeginDVals14\" },\n\t/*::[*/0x041F/*::]*/: { n:\"BrtColor14\" },\n\t/*::[*/0x0420/*::]*/: { n:\"BrtBeginSparklines\" },\n\t/*::[*/0x0421/*::]*/: { n:\"BrtEndSparklines\" },\n\t/*::[*/0x0422/*::]*/: { n:\"BrtBeginSparklineGroups\" },\n\t/*::[*/0x0423/*::]*/: { n:\"BrtEndSparklineGroups\" },\n\t/*::[*/0x0425/*::]*/: { n:\"BrtSXVD14\" },\n\t/*::[*/0x0426/*::]*/: { n:\"BrtBeginSXView14\" },\n\t/*::[*/0x0427/*::]*/: { n:\"BrtEndSXView14\" },\n\t/*::[*/0x0428/*::]*/: { n:\"BrtBeginSXView16\" },\n\t/*::[*/0x0429/*::]*/: { n:\"BrtEndSXView16\" },\n\t/*::[*/0x042A/*::]*/: { n:\"BrtBeginPCD14\" },\n\t/*::[*/0x042B/*::]*/: { n:\"BrtEndPCD14\" },\n\t/*::[*/0x042C/*::]*/: { n:\"BrtBeginExtConn14\" },\n\t/*::[*/0x042D/*::]*/: { n:\"BrtEndExtConn14\" },\n\t/*::[*/0x042E/*::]*/: { n:\"BrtBeginSlicerCacheIDs\" },\n\t/*::[*/0x042F/*::]*/: { n:\"BrtEndSlicerCacheIDs\" },\n\t/*::[*/0x0430/*::]*/: { n:\"BrtBeginSlicerCacheID\" },\n\t/*::[*/0x0431/*::]*/: { n:\"BrtEndSlicerCacheID\" },\n\t/*::[*/0x0433/*::]*/: { n:\"BrtBeginSlicerCache\" },\n\t/*::[*/0x0434/*::]*/: { n:\"BrtEndSlicerCache\" },\n\t/*::[*/0x0435/*::]*/: { n:\"BrtBeginSlicerCacheDef\" },\n\t/*::[*/0x0436/*::]*/: { n:\"BrtEndSlicerCacheDef\" },\n\t/*::[*/0x0437/*::]*/: { n:\"BrtBeginSlicersEx\" },\n\t/*::[*/0x0438/*::]*/: { n:\"BrtEndSlicersEx\" },\n\t/*::[*/0x0439/*::]*/: { n:\"BrtBeginSlicerEx\" },\n\t/*::[*/0x043A/*::]*/: { n:\"BrtEndSlicerEx\" },\n\t/*::[*/0x043B/*::]*/: { n:\"BrtBeginSlicer\" },\n\t/*::[*/0x043C/*::]*/: { n:\"BrtEndSlicer\" },\n\t/*::[*/0x043D/*::]*/: { n:\"BrtSlicerCachePivotTables\" },\n\t/*::[*/0x043E/*::]*/: { n:\"BrtBeginSlicerCacheOlapImpl\" },\n\t/*::[*/0x043F/*::]*/: { n:\"BrtEndSlicerCacheOlapImpl\" },\n\t/*::[*/0x0440/*::]*/: { n:\"BrtBeginSlicerCacheLevelsData\" },\n\t/*::[*/0x0441/*::]*/: { n:\"BrtEndSlicerCacheLevelsData\" },\n\t/*::[*/0x0442/*::]*/: { n:\"BrtBeginSlicerCacheLevelData\" },\n\t/*::[*/0x0443/*::]*/: { n:\"BrtEndSlicerCacheLevelData\" },\n\t/*::[*/0x0444/*::]*/: { n:\"BrtBeginSlicerCacheSiRanges\" },\n\t/*::[*/0x0445/*::]*/: { n:\"BrtEndSlicerCacheSiRanges\" },\n\t/*::[*/0x0446/*::]*/: { n:\"BrtBeginSlicerCacheSiRange\" },\n\t/*::[*/0x0447/*::]*/: { n:\"BrtEndSlicerCacheSiRange\" },\n\t/*::[*/0x0448/*::]*/: { n:\"BrtSlicerCacheOlapItem\" },\n\t/*::[*/0x0449/*::]*/: { n:\"BrtBeginSlicerCacheSelections\" },\n\t/*::[*/0x044A/*::]*/: { n:\"BrtSlicerCacheSelection\" },\n\t/*::[*/0x044B/*::]*/: { n:\"BrtEndSlicerCacheSelections\" },\n\t/*::[*/0x044C/*::]*/: { n:\"BrtBeginSlicerCacheNative\" },\n\t/*::[*/0x044D/*::]*/: { n:\"BrtEndSlicerCacheNative\" },\n\t/*::[*/0x044E/*::]*/: { n:\"BrtSlicerCacheNativeItem\" },\n\t/*::[*/0x044F/*::]*/: { n:\"BrtRangeProtection14\" },\n\t/*::[*/0x0450/*::]*/: { n:\"BrtRangeProtectionIso14\" },\n\t/*::[*/0x0451/*::]*/: { n:\"BrtCellIgnoreEC14\" },\n\t/*::[*/0x0457/*::]*/: { n:\"BrtList14\" },\n\t/*::[*/0x0458/*::]*/: { n:\"BrtCFIcon\" },\n\t/*::[*/0x0459/*::]*/: { n:\"BrtBeginSlicerCachesPivotCacheIDs\" },\n\t/*::[*/0x045A/*::]*/: { n:\"BrtEndSlicerCachesPivotCacheIDs\" },\n\t/*::[*/0x045B/*::]*/: { n:\"BrtBeginSlicers\" },\n\t/*::[*/0x045C/*::]*/: { n:\"BrtEndSlicers\" },\n\t/*::[*/0x045D/*::]*/: { n:\"BrtWbProp14\" },\n\t/*::[*/0x045E/*::]*/: { n:\"BrtBeginSXEdit\" },\n\t/*::[*/0x045F/*::]*/: { n:\"BrtEndSXEdit\" },\n\t/*::[*/0x0460/*::]*/: { n:\"BrtBeginSXEdits\" },\n\t/*::[*/0x0461/*::]*/: { n:\"BrtEndSXEdits\" },\n\t/*::[*/0x0462/*::]*/: { n:\"BrtBeginSXChange\" },\n\t/*::[*/0x0463/*::]*/: { n:\"BrtEndSXChange\" },\n\t/*::[*/0x0464/*::]*/: { n:\"BrtBeginSXChanges\" },\n\t/*::[*/0x0465/*::]*/: { n:\"BrtEndSXChanges\" },\n\t/*::[*/0x0466/*::]*/: { n:\"BrtSXTupleItems\" },\n\t/*::[*/0x0468/*::]*/: { n:\"BrtBeginSlicerStyle\" },\n\t/*::[*/0x0469/*::]*/: { n:\"BrtEndSlicerStyle\" },\n\t/*::[*/0x046A/*::]*/: { n:\"BrtSlicerStyleElement\" },\n\t/*::[*/0x046B/*::]*/: { n:\"BrtBeginStyleSheetExt14\" },\n\t/*::[*/0x046C/*::]*/: { n:\"BrtEndStyleSheetExt14\" },\n\t/*::[*/0x046D/*::]*/: { n:\"BrtBeginSlicerCachesPivotCacheID\" },\n\t/*::[*/0x046E/*::]*/: { n:\"BrtEndSlicerCachesPivotCacheID\" },\n\t/*::[*/0x046F/*::]*/: { n:\"BrtBeginConditionalFormattings\" },\n\t/*::[*/0x0470/*::]*/: { n:\"BrtEndConditionalFormattings\" },\n\t/*::[*/0x0471/*::]*/: { n:\"BrtBeginPCDCalcMemExt\" },\n\t/*::[*/0x0472/*::]*/: { n:\"BrtEndPCDCalcMemExt\" },\n\t/*::[*/0x0473/*::]*/: { n:\"BrtBeginPCDCalcMemsExt\" },\n\t/*::[*/0x0474/*::]*/: { n:\"BrtEndPCDCalcMemsExt\" },\n\t/*::[*/0x0475/*::]*/: { n:\"BrtPCDField14\" },\n\t/*::[*/0x0476/*::]*/: { n:\"BrtBeginSlicerStyles\" },\n\t/*::[*/0x0477/*::]*/: { n:\"BrtEndSlicerStyles\" },\n\t/*::[*/0x0478/*::]*/: { n:\"BrtBeginSlicerStyleElements\" },\n\t/*::[*/0x0479/*::]*/: { n:\"BrtEndSlicerStyleElements\" },\n\t/*::[*/0x047A/*::]*/: { n:\"BrtCFRuleExt\" },\n\t/*::[*/0x047B/*::]*/: { n:\"BrtBeginSXCondFmt14\" },\n\t/*::[*/0x047C/*::]*/: { n:\"BrtEndSXCondFmt14\" },\n\t/*::[*/0x047D/*::]*/: { n:\"BrtBeginSXCondFmts14\" },\n\t/*::[*/0x047E/*::]*/: { n:\"BrtEndSXCondFmts14\" },\n\t/*::[*/0x0480/*::]*/: { n:\"BrtBeginSortCond14\" },\n\t/*::[*/0x0481/*::]*/: { n:\"BrtEndSortCond14\" },\n\t/*::[*/0x0482/*::]*/: { n:\"BrtEndDVals14\" },\n\t/*::[*/0x0483/*::]*/: { n:\"BrtEndIconSet14\" },\n\t/*::[*/0x0484/*::]*/: { n:\"BrtEndDatabar14\" },\n\t/*::[*/0x0485/*::]*/: { n:\"BrtBeginColorScale14\" },\n\t/*::[*/0x0486/*::]*/: { n:\"BrtEndColorScale14\" },\n\t/*::[*/0x0487/*::]*/: { n:\"BrtBeginSxrules14\" },\n\t/*::[*/0x0488/*::]*/: { n:\"BrtEndSxrules14\" },\n\t/*::[*/0x0489/*::]*/: { n:\"BrtBeginPRule14\" },\n\t/*::[*/0x048A/*::]*/: { n:\"BrtEndPRule14\" },\n\t/*::[*/0x048B/*::]*/: { n:\"BrtBeginPRFilters14\" },\n\t/*::[*/0x048C/*::]*/: { n:\"BrtEndPRFilters14\" },\n\t/*::[*/0x048D/*::]*/: { n:\"BrtBeginPRFilter14\" },\n\t/*::[*/0x048E/*::]*/: { n:\"BrtEndPRFilter14\" },\n\t/*::[*/0x048F/*::]*/: { n:\"BrtBeginPRFItem14\" },\n\t/*::[*/0x0490/*::]*/: { n:\"BrtEndPRFItem14\" },\n\t/*::[*/0x0491/*::]*/: { n:\"BrtBeginCellIgnoreECs14\" },\n\t/*::[*/0x0492/*::]*/: { n:\"BrtEndCellIgnoreECs14\" },\n\t/*::[*/0x0493/*::]*/: { n:\"BrtDxf14\" },\n\t/*::[*/0x0494/*::]*/: { n:\"BrtBeginDxF14s\" },\n\t/*::[*/0x0495/*::]*/: { n:\"BrtEndDxf14s\" },\n\t/*::[*/0x0499/*::]*/: { n:\"BrtFilter14\" },\n\t/*::[*/0x049A/*::]*/: { n:\"BrtBeginCustomFilters14\" },\n\t/*::[*/0x049C/*::]*/: { n:\"BrtCustomFilter14\" },\n\t/*::[*/0x049D/*::]*/: { n:\"BrtIconFilter14\" },\n\t/*::[*/0x049E/*::]*/: { n:\"BrtPivotCacheConnectionName\" },\n\t/*::[*/0x0800/*::]*/: { n:\"BrtBeginDecoupledPivotCacheIDs\" },\n\t/*::[*/0x0801/*::]*/: { n:\"BrtEndDecoupledPivotCacheIDs\" },\n\t/*::[*/0x0802/*::]*/: { n:\"BrtDecoupledPivotCacheID\" },\n\t/*::[*/0x0803/*::]*/: { n:\"BrtBeginPivotTableRefs\" },\n\t/*::[*/0x0804/*::]*/: { n:\"BrtEndPivotTableRefs\" },\n\t/*::[*/0x0805/*::]*/: { n:\"BrtPivotTableRef\" },\n\t/*::[*/0x0806/*::]*/: { n:\"BrtSlicerCacheBookPivotTables\" },\n\t/*::[*/0x0807/*::]*/: { n:\"BrtBeginSxvcells\" },\n\t/*::[*/0x0808/*::]*/: { n:\"BrtEndSxvcells\" },\n\t/*::[*/0x0809/*::]*/: { n:\"BrtBeginSxRow\" },\n\t/*::[*/0x080A/*::]*/: { n:\"BrtEndSxRow\" },\n\t/*::[*/0x080C/*::]*/: { n:\"BrtPcdCalcMem15\" },\n\t/*::[*/0x0813/*::]*/: { n:\"BrtQsi15\" },\n\t/*::[*/0x0814/*::]*/: { n:\"BrtBeginWebExtensions\" },\n\t/*::[*/0x0815/*::]*/: { n:\"BrtEndWebExtensions\" },\n\t/*::[*/0x0816/*::]*/: { n:\"BrtWebExtension\" },\n\t/*::[*/0x0817/*::]*/: { n:\"BrtAbsPath15\" },\n\t/*::[*/0x0818/*::]*/: { n:\"BrtBeginPivotTableUISettings\" },\n\t/*::[*/0x0819/*::]*/: { n:\"BrtEndPivotTableUISettings\" },\n\t/*::[*/0x081B/*::]*/: { n:\"BrtTableSlicerCacheIDs\" },\n\t/*::[*/0x081C/*::]*/: { n:\"BrtTableSlicerCacheID\" },\n\t/*::[*/0x081D/*::]*/: { n:\"BrtBeginTableSlicerCache\" },\n\t/*::[*/0x081E/*::]*/: { n:\"BrtEndTableSlicerCache\" },\n\t/*::[*/0x081F/*::]*/: { n:\"BrtSxFilter15\" },\n\t/*::[*/0x0820/*::]*/: { n:\"BrtBeginTimelineCachePivotCacheIDs\" },\n\t/*::[*/0x0821/*::]*/: { n:\"BrtEndTimelineCachePivotCacheIDs\" },\n\t/*::[*/0x0822/*::]*/: { n:\"BrtTimelineCachePivotCacheID\" },\n\t/*::[*/0x0823/*::]*/: { n:\"BrtBeginTimelineCacheIDs\" },\n\t/*::[*/0x0824/*::]*/: { n:\"BrtEndTimelineCacheIDs\" },\n\t/*::[*/0x0825/*::]*/: { n:\"BrtBeginTimelineCacheID\" },\n\t/*::[*/0x0826/*::]*/: { n:\"BrtEndTimelineCacheID\" },\n\t/*::[*/0x0827/*::]*/: { n:\"BrtBeginTimelinesEx\" },\n\t/*::[*/0x0828/*::]*/: { n:\"BrtEndTimelinesEx\" },\n\t/*::[*/0x0829/*::]*/: { n:\"BrtBeginTimelineEx\" },\n\t/*::[*/0x082A/*::]*/: { n:\"BrtEndTimelineEx\" },\n\t/*::[*/0x082B/*::]*/: { n:\"BrtWorkBookPr15\" },\n\t/*::[*/0x082C/*::]*/: { n:\"BrtPCDH15\" },\n\t/*::[*/0x082D/*::]*/: { n:\"BrtBeginTimelineStyle\" },\n\t/*::[*/0x082E/*::]*/: { n:\"BrtEndTimelineStyle\" },\n\t/*::[*/0x082F/*::]*/: { n:\"BrtTimelineStyleElement\" },\n\t/*::[*/0x0830/*::]*/: { n:\"BrtBeginTimelineStylesheetExt15\" },\n\t/*::[*/0x0831/*::]*/: { n:\"BrtEndTimelineStylesheetExt15\" },\n\t/*::[*/0x0832/*::]*/: { n:\"BrtBeginTimelineStyles\" },\n\t/*::[*/0x0833/*::]*/: { n:\"BrtEndTimelineStyles\" },\n\t/*::[*/0x0834/*::]*/: { n:\"BrtBeginTimelineStyleElements\" },\n\t/*::[*/0x0835/*::]*/: { n:\"BrtEndTimelineStyleElements\" },\n\t/*::[*/0x0836/*::]*/: { n:\"BrtDxf15\" },\n\t/*::[*/0x0837/*::]*/: { n:\"BrtBeginDxfs15\" },\n\t/*::[*/0x0838/*::]*/: { n:\"BrtEndDxfs15\" },\n\t/*::[*/0x0839/*::]*/: { n:\"BrtSlicerCacheHideItemsWithNoData\" },\n\t/*::[*/0x083A/*::]*/: { n:\"BrtBeginItemUniqueNames\" },\n\t/*::[*/0x083B/*::]*/: { n:\"BrtEndItemUniqueNames\" },\n\t/*::[*/0x083C/*::]*/: { n:\"BrtItemUniqueName\" },\n\t/*::[*/0x083D/*::]*/: { n:\"BrtBeginExtConn15\" },\n\t/*::[*/0x083E/*::]*/: { n:\"BrtEndExtConn15\" },\n\t/*::[*/0x083F/*::]*/: { n:\"BrtBeginOledbPr15\" },\n\t/*::[*/0x0840/*::]*/: { n:\"BrtEndOledbPr15\" },\n\t/*::[*/0x0841/*::]*/: { n:\"BrtBeginDataFeedPr15\" },\n\t/*::[*/0x0842/*::]*/: { n:\"BrtEndDataFeedPr15\" },\n\t/*::[*/0x0843/*::]*/: { n:\"BrtTextPr15\" },\n\t/*::[*/0x0844/*::]*/: { n:\"BrtRangePr15\" },\n\t/*::[*/0x0845/*::]*/: { n:\"BrtDbCommand15\" },\n\t/*::[*/0x0846/*::]*/: { n:\"BrtBeginDbTables15\" },\n\t/*::[*/0x0847/*::]*/: { n:\"BrtEndDbTables15\" },\n\t/*::[*/0x0848/*::]*/: { n:\"BrtDbTable15\" },\n\t/*::[*/0x0849/*::]*/: { n:\"BrtBeginDataModel\" },\n\t/*::[*/0x084A/*::]*/: { n:\"BrtEndDataModel\" },\n\t/*::[*/0x084B/*::]*/: { n:\"BrtBeginModelTables\" },\n\t/*::[*/0x084C/*::]*/: { n:\"BrtEndModelTables\" },\n\t/*::[*/0x084D/*::]*/: { n:\"BrtModelTable\" },\n\t/*::[*/0x084E/*::]*/: { n:\"BrtBeginModelRelationships\" },\n\t/*::[*/0x084F/*::]*/: { n:\"BrtEndModelRelationships\" },\n\t/*::[*/0x0850/*::]*/: { n:\"BrtModelRelationship\" },\n\t/*::[*/0x0851/*::]*/: { n:\"BrtBeginECTxtWiz15\" },\n\t/*::[*/0x0852/*::]*/: { n:\"BrtEndECTxtWiz15\" },\n\t/*::[*/0x0853/*::]*/: { n:\"BrtBeginECTWFldInfoLst15\" },\n\t/*::[*/0x0854/*::]*/: { n:\"BrtEndECTWFldInfoLst15\" },\n\t/*::[*/0x0855/*::]*/: { n:\"BrtBeginECTWFldInfo15\" },\n\t/*::[*/0x0856/*::]*/: { n:\"BrtFieldListActiveItem\" },\n\t/*::[*/0x0857/*::]*/: { n:\"BrtPivotCacheIdVersion\" },\n\t/*::[*/0x0858/*::]*/: { n:\"BrtSXDI15\" },\n\t/*::[*/0x0859/*::]*/: { n:\"BrtBeginModelTimeGroupings\" },\n\t/*::[*/0x085A/*::]*/: { n:\"BrtEndModelTimeGroupings\" },\n\t/*::[*/0x085B/*::]*/: { n:\"BrtBeginModelTimeGrouping\" },\n\t/*::[*/0x085C/*::]*/: { n:\"BrtEndModelTimeGrouping\" },\n\t/*::[*/0x085D/*::]*/: { n:\"BrtModelTimeGroupingCalcCol\" },\n\t/*::[*/0x0C00/*::]*/: { n:\"BrtUid\" },\n\t/*::[*/0x0C01/*::]*/: { n:\"BrtRevisionPtr\" },\n\t/*::[*/0x1000/*::]*/: { n:\"BrtBeginDynamicArrayPr\" },\n\t/*::[*/0x1001/*::]*/: { n:\"BrtEndDynamicArrayPr\" },\n\t/*::[*/0x138A/*::]*/: { n:\"BrtBeginRichValueBlock\" },\n\t/*::[*/0x138B/*::]*/: { n:\"BrtEndRichValueBlock\" },\n\t/*::[*/0x13D9/*::]*/: { n:\"BrtBeginRichFilters\" },\n\t/*::[*/0x13DA/*::]*/: { n:\"BrtEndRichFilters\" },\n\t/*::[*/0x13DB/*::]*/: { n:\"BrtRichFilter\" },\n\t/*::[*/0x13DC/*::]*/: { n:\"BrtBeginRichFilterColumn\" },\n\t/*::[*/0x13DD/*::]*/: { n:\"BrtEndRichFilterColumn\" },\n\t/*::[*/0x13DE/*::]*/: { n:\"BrtBeginCustomRichFilters\" },\n\t/*::[*/0x13DF/*::]*/: { n:\"BrtEndCustomRichFilters\" },\n\t/*::[*/0x13E0/*::]*/: { n:\"BrtCustomRichFilter\" },\n\t/*::[*/0x13E1/*::]*/: { n:\"BrtTop10RichFilter\" },\n\t/*::[*/0x13E2/*::]*/: { n:\"BrtDynamicRichFilter\" },\n\t/*::[*/0x13E4/*::]*/: { n:\"BrtBeginRichSortCondition\" },\n\t/*::[*/0x13E5/*::]*/: { n:\"BrtEndRichSortCondition\" },\n\t/*::[*/0x13E6/*::]*/: { n:\"BrtRichFilterDateGroupItem\" },\n\t/*::[*/0x13E7/*::]*/: { n:\"BrtBeginCalcFeatures\" },\n\t/*::[*/0x13E8/*::]*/: { n:\"BrtEndCalcFeatures\" },\n\t/*::[*/0x13E9/*::]*/: { n:\"BrtCalcFeature\" },\n\t/*::[*/0x13EB/*::]*/: { n:\"BrtExternalLinksPr\" },\n\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n};\n\nvar XLSBRE;\nfunction make_XLSBRE() {\n\tXLSBRE = evert_key(XLSBRecordEnum, 'n');\n\t/*jshint -W069 */\n\tXLSBRE[\"BrtFRTArchID$\"] = 0x0010;\n\t/*jshint +W069 */\n}\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n\t/* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n\t/*::[*/0x0006/*::]*/: { n:\"Formula\", f:parse_Formula },\n\t/*::[*/0x000a/*::]*/: { n:'EOF', f:parsenoop2 },\n\t/*::[*/0x000c/*::]*/: { n:\"CalcCount\", f:parseuint16 },\n\t/*::[*/0x000d/*::]*/: { n:\"CalcMode\", f:parseuint16 },\n\t/*::[*/0x000e/*::]*/: { n:\"CalcPrecision\", f:parsebool },\n\t/*::[*/0x000f/*::]*/: { n:\"CalcRefMode\", f:parsebool },\n\t/*::[*/0x0010/*::]*/: { n:\"CalcDelta\", f:parse_Xnum },\n\t/*::[*/0x0011/*::]*/: { n:\"CalcIter\", f:parsebool },\n\t/*::[*/0x0012/*::]*/: { n:\"Protect\", f:parsebool },\n\t/*::[*/0x0013/*::]*/: { n:\"Password\", f:parseuint16 },\n\t/*::[*/0x0014/*::]*/: { n:\"Header\", f:parse_XLHeaderFooter },\n\t/*::[*/0x0015/*::]*/: { n:\"Footer\", f:parse_XLHeaderFooter },\n\t/*::[*/0x0017/*::]*/: { n:\"ExternSheet\", f:parse_ExternSheet },\n\t/*::[*/0x0018/*::]*/: { n:\"Lbl\", f:parse_Lbl },\n\t/*::[*/0x0019/*::]*/: { n:\"WinProtect\", f:parsebool },\n\t/*::[*/0x001a/*::]*/: { n:\"VerticalPageBreaks\" },\n\t/*::[*/0x001b/*::]*/: { n:\"HorizontalPageBreaks\" },\n\t/*::[*/0x001c/*::]*/: { n:\"Note\", f:parse_Note },\n\t/*::[*/0x001d/*::]*/: { n:\"Selection\" },\n\t/*::[*/0x0022/*::]*/: { n:\"Date1904\", f:parsebool },\n\t/*::[*/0x0023/*::]*/: { n:\"ExternName\", f:parse_ExternName },\n\t/*::[*/0x0026/*::]*/: { n:\"LeftMargin\", f:parse_Xnum },\n\t/*::[*/0x0027/*::]*/: { n:\"RightMargin\", f:parse_Xnum },\n\t/*::[*/0x0028/*::]*/: { n:\"TopMargin\", f:parse_Xnum },\n\t/*::[*/0x0029/*::]*/: { n:\"BottomMargin\", f:parse_Xnum },\n\t/*::[*/0x002a/*::]*/: { n:\"PrintRowCol\", f:parsebool },\n\t/*::[*/0x002b/*::]*/: { n:\"PrintGrid\", f:parsebool },\n\t/*::[*/0x002f/*::]*/: { n:\"FilePass\", f:parse_FilePass },\n\t/*::[*/0x0031/*::]*/: { n:\"Font\", f:parse_Font },\n\t/*::[*/0x0033/*::]*/: { n:\"PrintSize\", f:parseuint16 },\n\t/*::[*/0x003c/*::]*/: { n:\"Continue\" },\n\t/*::[*/0x003d/*::]*/: { n:\"Window1\", f:parse_Window1 },\n\t/*::[*/0x0040/*::]*/: { n:\"Backup\", f:parsebool },\n\t/*::[*/0x0041/*::]*/: { n:\"Pane\", f:parse_Pane },\n\t/*::[*/0x0042/*::]*/: { n:'CodePage', f:parseuint16 },\n\t/*::[*/0x004d/*::]*/: { n:\"Pls\" },\n\t/*::[*/0x0050/*::]*/: { n:\"DCon\" },\n\t/*::[*/0x0051/*::]*/: { n:\"DConRef\" },\n\t/*::[*/0x0052/*::]*/: { n:\"DConName\" },\n\t/*::[*/0x0055/*::]*/: { n:\"DefColWidth\", f:parseuint16 },\n\t/*::[*/0x0059/*::]*/: { n:\"XCT\" },\n\t/*::[*/0x005a/*::]*/: { n:\"CRN\" },\n\t/*::[*/0x005b/*::]*/: { n:\"FileSharing\" },\n\t/*::[*/0x005c/*::]*/: { n:'WriteAccess', f:parse_WriteAccess },\n\t/*::[*/0x005d/*::]*/: { n:\"Obj\", f:parse_Obj },\n\t/*::[*/0x005e/*::]*/: { n:\"Uncalced\" },\n\t/*::[*/0x005f/*::]*/: { n:\"CalcSaveRecalc\", f:parsebool },\n\t/*::[*/0x0060/*::]*/: { n:\"Template\" },\n\t/*::[*/0x0061/*::]*/: { n:\"Intl\" },\n\t/*::[*/0x0063/*::]*/: { n:\"ObjProtect\", f:parsebool },\n\t/*::[*/0x007d/*::]*/: { n:\"ColInfo\", f:parse_ColInfo },\n\t/*::[*/0x0080/*::]*/: { n:\"Guts\", f:parse_Guts },\n\t/*::[*/0x0081/*::]*/: { n:\"WsBool\", f:parse_WsBool },\n\t/*::[*/0x0082/*::]*/: { n:\"GridSet\", f:parseuint16 },\n\t/*::[*/0x0083/*::]*/: { n:\"HCenter\", f:parsebool },\n\t/*::[*/0x0084/*::]*/: { n:\"VCenter\", f:parsebool },\n\t/*::[*/0x0085/*::]*/: { n:'BoundSheet8', f:parse_BoundSheet8 },\n\t/*::[*/0x0086/*::]*/: { n:\"WriteProtect\" },\n\t/*::[*/0x008c/*::]*/: { n:\"Country\", f:parse_Country },\n\t/*::[*/0x008d/*::]*/: { n:\"HideObj\", f:parseuint16 },\n\t/*::[*/0x0090/*::]*/: { n:\"Sort\" },\n\t/*::[*/0x0092/*::]*/: { n:\"Palette\", f:parse_Palette },\n\t/*::[*/0x0097/*::]*/: { n:\"Sync\" },\n\t/*::[*/0x0098/*::]*/: { n:\"LPr\" },\n\t/*::[*/0x0099/*::]*/: { n:\"DxGCol\" },\n\t/*::[*/0x009a/*::]*/: { n:\"FnGroupName\" },\n\t/*::[*/0x009b/*::]*/: { n:\"FilterMode\" },\n\t/*::[*/0x009c/*::]*/: { n:\"BuiltInFnGroupCount\", f:parseuint16 },\n\t/*::[*/0x009d/*::]*/: { n:\"AutoFilterInfo\" },\n\t/*::[*/0x009e/*::]*/: { n:\"AutoFilter\" },\n\t/*::[*/0x00a0/*::]*/: { n:\"Scl\", f:parse_Scl },\n\t/*::[*/0x00a1/*::]*/: { n:\"Setup\", f:parse_Setup },\n\t/*::[*/0x00ae/*::]*/: { n:\"ScenMan\" },\n\t/*::[*/0x00af/*::]*/: { n:\"SCENARIO\" },\n\t/*::[*/0x00b0/*::]*/: { n:\"SxView\" },\n\t/*::[*/0x00b1/*::]*/: { n:\"Sxvd\" },\n\t/*::[*/0x00b2/*::]*/: { n:\"SXVI\" },\n\t/*::[*/0x00b4/*::]*/: { n:\"SxIvd\" },\n\t/*::[*/0x00b5/*::]*/: { n:\"SXLI\" },\n\t/*::[*/0x00b6/*::]*/: { n:\"SXPI\" },\n\t/*::[*/0x00b8/*::]*/: { n:\"DocRoute\" },\n\t/*::[*/0x00b9/*::]*/: { n:\"RecipName\" },\n\t/*::[*/0x00bd/*::]*/: { n:\"MulRk\", f:parse_MulRk },\n\t/*::[*/0x00be/*::]*/: { n:\"MulBlank\", f:parse_MulBlank },\n\t/*::[*/0x00c1/*::]*/: { n:'Mms', f:parsenoop2 },\n\t/*::[*/0x00c5/*::]*/: { n:\"SXDI\" },\n\t/*::[*/0x00c6/*::]*/: { n:\"SXDB\" },\n\t/*::[*/0x00c7/*::]*/: { n:\"SXFDB\" },\n\t/*::[*/0x00c8/*::]*/: { n:\"SXDBB\" },\n\t/*::[*/0x00c9/*::]*/: { n:\"SXNum\" },\n\t/*::[*/0x00ca/*::]*/: { n:\"SxBool\", f:parsebool },\n\t/*::[*/0x00cb/*::]*/: { n:\"SxErr\" },\n\t/*::[*/0x00cc/*::]*/: { n:\"SXInt\" },\n\t/*::[*/0x00cd/*::]*/: { n:\"SXString\" },\n\t/*::[*/0x00ce/*::]*/: { n:\"SXDtr\" },\n\t/*::[*/0x00cf/*::]*/: { n:\"SxNil\" },\n\t/*::[*/0x00d0/*::]*/: { n:\"SXTbl\" },\n\t/*::[*/0x00d1/*::]*/: { n:\"SXTBRGIITM\" },\n\t/*::[*/0x00d2/*::]*/: { n:\"SxTbpg\" },\n\t/*::[*/0x00d3/*::]*/: { n:\"ObProj\" },\n\t/*::[*/0x00d5/*::]*/: { n:\"SXStreamID\" },\n\t/*::[*/0x00d7/*::]*/: { n:\"DBCell\" },\n\t/*::[*/0x00d8/*::]*/: { n:\"SXRng\" },\n\t/*::[*/0x00d9/*::]*/: { n:\"SxIsxoper\" },\n\t/*::[*/0x00da/*::]*/: { n:\"BookBool\", f:parseuint16 },\n\t/*::[*/0x00dc/*::]*/: { n:\"DbOrParamQry\" },\n\t/*::[*/0x00dd/*::]*/: { n:\"ScenarioProtect\", f:parsebool },\n\t/*::[*/0x00de/*::]*/: { n:\"OleObjectSize\" },\n\t/*::[*/0x00e0/*::]*/: { n:\"XF\", f:parse_XF },\n\t/*::[*/0x00e1/*::]*/: { n:'InterfaceHdr', f:parse_InterfaceHdr },\n\t/*::[*/0x00e2/*::]*/: { n:'InterfaceEnd', f:parsenoop2 },\n\t/*::[*/0x00e3/*::]*/: { n:\"SXVS\" },\n\t/*::[*/0x00e5/*::]*/: { n:\"MergeCells\", f:parse_MergeCells },\n\t/*::[*/0x00e9/*::]*/: { n:\"BkHim\" },\n\t/*::[*/0x00eb/*::]*/: { n:\"MsoDrawingGroup\" },\n\t/*::[*/0x00ec/*::]*/: { n:\"MsoDrawing\" },\n\t/*::[*/0x00ed/*::]*/: { n:\"MsoDrawingSelection\" },\n\t/*::[*/0x00ef/*::]*/: { n:\"PhoneticInfo\" },\n\t/*::[*/0x00f0/*::]*/: { n:\"SxRule\" },\n\t/*::[*/0x00f1/*::]*/: { n:\"SXEx\" },\n\t/*::[*/0x00f2/*::]*/: { n:\"SxFilt\" },\n\t/*::[*/0x00f4/*::]*/: { n:\"SxDXF\" },\n\t/*::[*/0x00f5/*::]*/: { n:\"SxItm\" },\n\t/*::[*/0x00f6/*::]*/: { n:\"SxName\" },\n\t/*::[*/0x00f7/*::]*/: { n:\"SxSelect\" },\n\t/*::[*/0x00f8/*::]*/: { n:\"SXPair\" },\n\t/*::[*/0x00f9/*::]*/: { n:\"SxFmla\" },\n\t/*::[*/0x00fb/*::]*/: { n:\"SxFormat\" },\n\t/*::[*/0x00fc/*::]*/: { n:\"SST\", f:parse_SST },\n\t/*::[*/0x00fd/*::]*/: { n:\"LabelSst\", f:parse_LabelSst },\n\t/*::[*/0x00ff/*::]*/: { n:\"ExtSST\", f:parse_ExtSST },\n\t/*::[*/0x0100/*::]*/: { n:\"SXVDEx\" },\n\t/*::[*/0x0103/*::]*/: { n:\"SXFormula\" },\n\t/*::[*/0x0122/*::]*/: { n:\"SXDBEx\" },\n\t/*::[*/0x0137/*::]*/: { n:\"RRDInsDel\" },\n\t/*::[*/0x0138/*::]*/: { n:\"RRDHead\" },\n\t/*::[*/0x013b/*::]*/: { n:\"RRDChgCell\" },\n\t/*::[*/0x013d/*::]*/: { n:\"RRTabId\", f:parseuint16a },\n\t/*::[*/0x013e/*::]*/: { n:\"RRDRenSheet\" },\n\t/*::[*/0x013f/*::]*/: { n:\"RRSort\" },\n\t/*::[*/0x0140/*::]*/: { n:\"RRDMove\" },\n\t/*::[*/0x014a/*::]*/: { n:\"RRFormat\" },\n\t/*::[*/0x014b/*::]*/: { n:\"RRAutoFmt\" },\n\t/*::[*/0x014d/*::]*/: { n:\"RRInsertSh\" },\n\t/*::[*/0x014e/*::]*/: { n:\"RRDMoveBegin\" },\n\t/*::[*/0x014f/*::]*/: { n:\"RRDMoveEnd\" },\n\t/*::[*/0x0150/*::]*/: { n:\"RRDInsDelBegin\" },\n\t/*::[*/0x0151/*::]*/: { n:\"RRDInsDelEnd\" },\n\t/*::[*/0x0152/*::]*/: { n:\"RRDConflict\" },\n\t/*::[*/0x0153/*::]*/: { n:\"RRDDefName\" },\n\t/*::[*/0x0154/*::]*/: { n:\"RRDRstEtxp\" },\n\t/*::[*/0x015f/*::]*/: { n:\"LRng\" },\n\t/*::[*/0x0160/*::]*/: { n:\"UsesELFs\", f:parsebool },\n\t/*::[*/0x0161/*::]*/: { n:\"DSF\", f:parsenoop2 },\n\t/*::[*/0x0191/*::]*/: { n:\"CUsr\" },\n\t/*::[*/0x0192/*::]*/: { n:\"CbUsr\" },\n\t/*::[*/0x0193/*::]*/: { n:\"UsrInfo\" },\n\t/*::[*/0x0194/*::]*/: { n:\"UsrExcl\" },\n\t/*::[*/0x0195/*::]*/: { n:\"FileLock\" },\n\t/*::[*/0x0196/*::]*/: { n:\"RRDInfo\" },\n\t/*::[*/0x0197/*::]*/: { n:\"BCUsrs\" },\n\t/*::[*/0x0198/*::]*/: { n:\"UsrChk\" },\n\t/*::[*/0x01a9/*::]*/: { n:\"UserBView\" },\n\t/*::[*/0x01aa/*::]*/: { n:\"UserSViewBegin\" },\n\t/*::[*/0x01ab/*::]*/: { n:\"UserSViewEnd\" },\n\t/*::[*/0x01ac/*::]*/: { n:\"RRDUserView\" },\n\t/*::[*/0x01ad/*::]*/: { n:\"Qsi\" },\n\t/*::[*/0x01ae/*::]*/: { n:\"SupBook\", f:parse_SupBook },\n\t/*::[*/0x01af/*::]*/: { n:\"Prot4Rev\", f:parsebool },\n\t/*::[*/0x01b0/*::]*/: { n:\"CondFmt\" },\n\t/*::[*/0x01b1/*::]*/: { n:\"CF\" },\n\t/*::[*/0x01b2/*::]*/: { n:\"DVal\" },\n\t/*::[*/0x01b5/*::]*/: { n:\"DConBin\" },\n\t/*::[*/0x01b6/*::]*/: { n:\"TxO\", f:parse_TxO },\n\t/*::[*/0x01b7/*::]*/: { n:\"RefreshAll\", f:parsebool },\n\t/*::[*/0x01b8/*::]*/: { n:\"HLink\", f:parse_HLink },\n\t/*::[*/0x01b9/*::]*/: { n:\"Lel\" },\n\t/*::[*/0x01ba/*::]*/: { n:\"CodeName\", f:parse_XLUnicodeString },\n\t/*::[*/0x01bb/*::]*/: { n:\"SXFDBType\" },\n\t/*::[*/0x01bc/*::]*/: { n:\"Prot4RevPass\", f:parseuint16 },\n\t/*::[*/0x01bd/*::]*/: { n:\"ObNoMacros\" },\n\t/*::[*/0x01be/*::]*/: { n:\"Dv\" },\n\t/*::[*/0x01c0/*::]*/: { n:\"Excel9File\", f:parsenoop2 },\n\t/*::[*/0x01c1/*::]*/: { n:\"RecalcId\", f:parse_RecalcId, r:2},\n\t/*::[*/0x01c2/*::]*/: { n:\"EntExU2\", f:parsenoop2 },\n\t/*::[*/0x0200/*::]*/: { n:\"Dimensions\", f:parse_Dimensions },\n\t/*::[*/0x0201/*::]*/: { n:\"Blank\", f:parse_Blank },\n\t/*::[*/0x0203/*::]*/: { n:\"Number\", f:parse_Number },\n\t/*::[*/0x0204/*::]*/: { n:\"Label\", f:parse_Label },\n\t/*::[*/0x0205/*::]*/: { n:\"BoolErr\", f:parse_BoolErr },\n\t/*::[*/0x0207/*::]*/: { n:\"String\", f:parse_String },\n\t/*::[*/0x0208/*::]*/: { n:'Row', f:parse_Row },\n\t/*::[*/0x020b/*::]*/: { n:\"Index\" },\n\t/*::[*/0x0221/*::]*/: { n:\"Array\", f:parse_Array },\n\t/*::[*/0x0225/*::]*/: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\n\t/*::[*/0x0236/*::]*/: { n:\"Table\" },\n\t/*::[*/0x023e/*::]*/: { n:\"Window2\", f:parse_Window2 },\n\t/*::[*/0x027e/*::]*/: { n:\"RK\", f:parse_RK },\n\t/*::[*/0x0293/*::]*/: { n:\"Style\" },\n\t/*::[*/0x0418/*::]*/: { n:\"BigName\" },\n\t/*::[*/0x041e/*::]*/: { n:\"Format\", f:parse_Format },\n\t/*::[*/0x043c/*::]*/: { n:\"ContinueBigName\" },\n\t/*::[*/0x04bc/*::]*/: { n:\"ShrFmla\", f:parse_ShrFmla },\n\t/*::[*/0x0800/*::]*/: { n:\"HLinkTooltip\", f:parse_HLinkTooltip },\n\t/*::[*/0x0801/*::]*/: { n:\"WebPub\" },\n\t/*::[*/0x0802/*::]*/: { n:\"QsiSXTag\" },\n\t/*::[*/0x0803/*::]*/: { n:\"DBQueryExt\" },\n\t/*::[*/0x0804/*::]*/: { n:\"ExtString\" },\n\t/*::[*/0x0805/*::]*/: { n:\"TxtQry\" },\n\t/*::[*/0x0806/*::]*/: { n:\"Qsir\" },\n\t/*::[*/0x0807/*::]*/: { n:\"Qsif\" },\n\t/*::[*/0x0808/*::]*/: { n:\"RRDTQSIF\" },\n\t/*::[*/0x0809/*::]*/: { n:'BOF', f:parse_BOF },\n\t/*::[*/0x080a/*::]*/: { n:\"OleDbConn\" },\n\t/*::[*/0x080b/*::]*/: { n:\"WOpt\" },\n\t/*::[*/0x080c/*::]*/: { n:\"SXViewEx\" },\n\t/*::[*/0x080d/*::]*/: { n:\"SXTH\" },\n\t/*::[*/0x080e/*::]*/: { n:\"SXPIEx\" },\n\t/*::[*/0x080f/*::]*/: { n:\"SXVDTEx\" },\n\t/*::[*/0x0810/*::]*/: { n:\"SXViewEx9\" },\n\t/*::[*/0x0812/*::]*/: { n:\"ContinueFrt\" },\n\t/*::[*/0x0813/*::]*/: { n:\"RealTimeData\" },\n\t/*::[*/0x0850/*::]*/: { n:\"ChartFrtInfo\" },\n\t/*::[*/0x0851/*::]*/: { n:\"FrtWrapper\" },\n\t/*::[*/0x0852/*::]*/: { n:\"StartBlock\" },\n\t/*::[*/0x0853/*::]*/: { n:\"EndBlock\" },\n\t/*::[*/0x0854/*::]*/: { n:\"StartObject\" },\n\t/*::[*/0x0855/*::]*/: { n:\"EndObject\" },\n\t/*::[*/0x0856/*::]*/: { n:\"CatLab\" },\n\t/*::[*/0x0857/*::]*/: { n:\"YMult\" },\n\t/*::[*/0x0858/*::]*/: { n:\"SXViewLink\" },\n\t/*::[*/0x0859/*::]*/: { n:\"PivotChartBits\" },\n\t/*::[*/0x085a/*::]*/: { n:\"FrtFontList\" },\n\t/*::[*/0x0862/*::]*/: { n:\"SheetExt\" },\n\t/*::[*/0x0863/*::]*/: { n:\"BookExt\", r:12},\n\t/*::[*/0x0864/*::]*/: { n:\"SXAddl\" },\n\t/*::[*/0x0865/*::]*/: { n:\"CrErr\" },\n\t/*::[*/0x0866/*::]*/: { n:\"HFPicture\" },\n\t/*::[*/0x0867/*::]*/: { n:'FeatHdr', f:parsenoop2 },\n\t/*::[*/0x0868/*::]*/: { n:\"Feat\" },\n\t/*::[*/0x086a/*::]*/: { n:\"DataLabExt\" },\n\t/*::[*/0x086b/*::]*/: { n:\"DataLabExtContents\" },\n\t/*::[*/0x086c/*::]*/: { n:\"CellWatch\" },\n\t/*::[*/0x0871/*::]*/: { n:\"FeatHdr11\" },\n\t/*::[*/0x0872/*::]*/: { n:\"Feature11\" },\n\t/*::[*/0x0874/*::]*/: { n:\"DropDownObjIds\" },\n\t/*::[*/0x0875/*::]*/: { n:\"ContinueFrt11\" },\n\t/*::[*/0x0876/*::]*/: { n:\"DConn\" },\n\t/*::[*/0x0877/*::]*/: { n:\"List12\" },\n\t/*::[*/0x0878/*::]*/: { n:\"Feature12\" },\n\t/*::[*/0x0879/*::]*/: { n:\"CondFmt12\" },\n\t/*::[*/0x087a/*::]*/: { n:\"CF12\" },\n\t/*::[*/0x087b/*::]*/: { n:\"CFEx\" },\n\t/*::[*/0x087c/*::]*/: { n:\"XFCRC\", f:parse_XFCRC, r:12 },\n\t/*::[*/0x087d/*::]*/: { n:\"XFExt\", f:parse_XFExt, r:12 },\n\t/*::[*/0x087e/*::]*/: { n:\"AutoFilter12\" },\n\t/*::[*/0x087f/*::]*/: { n:\"ContinueFrt12\" },\n\t/*::[*/0x0884/*::]*/: { n:\"MDTInfo\" },\n\t/*::[*/0x0885/*::]*/: { n:\"MDXStr\" },\n\t/*::[*/0x0886/*::]*/: { n:\"MDXTuple\" },\n\t/*::[*/0x0887/*::]*/: { n:\"MDXSet\" },\n\t/*::[*/0x0888/*::]*/: { n:\"MDXProp\" },\n\t/*::[*/0x0889/*::]*/: { n:\"MDXKPI\" },\n\t/*::[*/0x088a/*::]*/: { n:\"MDB\" },\n\t/*::[*/0x088b/*::]*/: { n:\"PLV\" },\n\t/*::[*/0x088c/*::]*/: { n:\"Compat12\", f:parsebool, r:12 },\n\t/*::[*/0x088d/*::]*/: { n:\"DXF\" },\n\t/*::[*/0x088e/*::]*/: { n:\"TableStyles\", r:12 },\n\t/*::[*/0x088f/*::]*/: { n:\"TableStyle\" },\n\t/*::[*/0x0890/*::]*/: { n:\"TableStyleElement\" },\n\t/*::[*/0x0892/*::]*/: { n:\"StyleExt\" },\n\t/*::[*/0x0893/*::]*/: { n:\"NamePublish\" },\n\t/*::[*/0x0894/*::]*/: { n:\"NameCmt\", f:parse_NameCmt, r:12 },\n\t/*::[*/0x0895/*::]*/: { n:\"SortData\" },\n\t/*::[*/0x0896/*::]*/: { n:\"Theme\", f:parse_Theme, r:12 },\n\t/*::[*/0x0897/*::]*/: { n:\"GUIDTypeLib\" },\n\t/*::[*/0x0898/*::]*/: { n:\"FnGrp12\" },\n\t/*::[*/0x0899/*::]*/: { n:\"NameFnGrp12\" },\n\t/*::[*/0x089a/*::]*/: { n:\"MTRSettings\", f:parse_MTRSettings, r:12 },\n\t/*::[*/0x089b/*::]*/: { n:\"CompressPictures\", f:parsenoop2 },\n\t/*::[*/0x089c/*::]*/: { n:\"HeaderFooter\" },\n\t/*::[*/0x089d/*::]*/: { n:\"CrtLayout12\" },\n\t/*::[*/0x089e/*::]*/: { n:\"CrtMlFrt\" },\n\t/*::[*/0x089f/*::]*/: { n:\"CrtMlFrtContinue\" },\n\t/*::[*/0x08a3/*::]*/: { n:\"ForceFullCalculation\", f:parse_ForceFullCalculation },\n\t/*::[*/0x08a4/*::]*/: { n:\"ShapePropsStream\" },\n\t/*::[*/0x08a5/*::]*/: { n:\"TextPropsStream\" },\n\t/*::[*/0x08a6/*::]*/: { n:\"RichTextStream\" },\n\t/*::[*/0x08a7/*::]*/: { n:\"CrtLayout12A\" },\n\t/*::[*/0x1001/*::]*/: { n:\"Units\" },\n\t/*::[*/0x1002/*::]*/: { n:\"Chart\" },\n\t/*::[*/0x1003/*::]*/: { n:\"Series\" },\n\t/*::[*/0x1006/*::]*/: { n:\"DataFormat\" },\n\t/*::[*/0x1007/*::]*/: { n:\"LineFormat\" },\n\t/*::[*/0x1009/*::]*/: { n:\"MarkerFormat\" },\n\t/*::[*/0x100a/*::]*/: { n:\"AreaFormat\" },\n\t/*::[*/0x100b/*::]*/: { n:\"PieFormat\" },\n\t/*::[*/0x100c/*::]*/: { n:\"AttachedLabel\" },\n\t/*::[*/0x100d/*::]*/: { n:\"SeriesText\" },\n\t/*::[*/0x1014/*::]*/: { n:\"ChartFormat\" },\n\t/*::[*/0x1015/*::]*/: { n:\"Legend\" },\n\t/*::[*/0x1016/*::]*/: { n:\"SeriesList\" },\n\t/*::[*/0x1017/*::]*/: { n:\"Bar\" },\n\t/*::[*/0x1018/*::]*/: { n:\"Line\" },\n\t/*::[*/0x1019/*::]*/: { n:\"Pie\" },\n\t/*::[*/0x101a/*::]*/: { n:\"Area\" },\n\t/*::[*/0x101b/*::]*/: { n:\"Scatter\" },\n\t/*::[*/0x101c/*::]*/: { n:\"CrtLine\" },\n\t/*::[*/0x101d/*::]*/: { n:\"Axis\" },\n\t/*::[*/0x101e/*::]*/: { n:\"Tick\" },\n\t/*::[*/0x101f/*::]*/: { n:\"ValueRange\" },\n\t/*::[*/0x1020/*::]*/: { n:\"CatSerRange\" },\n\t/*::[*/0x1021/*::]*/: { n:\"AxisLine\" },\n\t/*::[*/0x1022/*::]*/: { n:\"CrtLink\" },\n\t/*::[*/0x1024/*::]*/: { n:\"DefaultText\" },\n\t/*::[*/0x1025/*::]*/: { n:\"Text\" },\n\t/*::[*/0x1026/*::]*/: { n:\"FontX\", f:parseuint16 },\n\t/*::[*/0x1027/*::]*/: { n:\"ObjectLink\" },\n\t/*::[*/0x1032/*::]*/: { n:\"Frame\" },\n\t/*::[*/0x1033/*::]*/: { n:\"Begin\" },\n\t/*::[*/0x1034/*::]*/: { n:\"End\" },\n\t/*::[*/0x1035/*::]*/: { n:\"PlotArea\" },\n\t/*::[*/0x103a/*::]*/: { n:\"Chart3d\" },\n\t/*::[*/0x103c/*::]*/: { n:\"PicF\" },\n\t/*::[*/0x103d/*::]*/: { n:\"DropBar\" },\n\t/*::[*/0x103e/*::]*/: { n:\"Radar\" },\n\t/*::[*/0x103f/*::]*/: { n:\"Surf\" },\n\t/*::[*/0x1040/*::]*/: { n:\"RadarArea\" },\n\t/*::[*/0x1041/*::]*/: { n:\"AxisParent\" },\n\t/*::[*/0x1043/*::]*/: { n:\"LegendException\" },\n\t/*::[*/0x1044/*::]*/: { n:\"ShtProps\", f:parse_ShtProps },\n\t/*::[*/0x1045/*::]*/: { n:\"SerToCrt\" },\n\t/*::[*/0x1046/*::]*/: { n:\"AxesUsed\" },\n\t/*::[*/0x1048/*::]*/: { n:\"SBaseRef\" },\n\t/*::[*/0x104a/*::]*/: { n:\"SerParent\" },\n\t/*::[*/0x104b/*::]*/: { n:\"SerAuxTrend\" },\n\t/*::[*/0x104e/*::]*/: { n:\"IFmtRecord\" },\n\t/*::[*/0x104f/*::]*/: { n:\"Pos\" },\n\t/*::[*/0x1050/*::]*/: { n:\"AlRuns\" },\n\t/*::[*/0x1051/*::]*/: { n:\"BRAI\" },\n\t/*::[*/0x105b/*::]*/: { n:\"SerAuxErrBar\" },\n\t/*::[*/0x105c/*::]*/: { n:\"ClrtClient\", f:parse_ClrtClient },\n\t/*::[*/0x105d/*::]*/: { n:\"SerFmt\" },\n\t/*::[*/0x105f/*::]*/: { n:\"Chart3DBarShape\" },\n\t/*::[*/0x1060/*::]*/: { n:\"Fbi\" },\n\t/*::[*/0x1061/*::]*/: { n:\"BopPop\" },\n\t/*::[*/0x1062/*::]*/: { n:\"AxcExt\" },\n\t/*::[*/0x1063/*::]*/: { n:\"Dat\" },\n\t/*::[*/0x1064/*::]*/: { n:\"PlotGrowth\" },\n\t/*::[*/0x1065/*::]*/: { n:\"SIIndex\" },\n\t/*::[*/0x1066/*::]*/: { n:\"GelFrame\" },\n\t/*::[*/0x1067/*::]*/: { n:\"BopPopCustom\" },\n\t/*::[*/0x1068/*::]*/: { n:\"Fbi2\" },\n\n\t/*::[*/0x0000/*::]*/: { n:\"Dimensions\", f:parse_Dimensions },\n\t/*::[*/0x0001/*::]*/: { n:\"BIFF2BLANK\" },\n\t/*::[*/0x0002/*::]*/: { n:\"BIFF2INT\", f:parse_BIFF2INT },\n\t/*::[*/0x0003/*::]*/: { n:\"BIFF2NUM\", f:parse_BIFF2NUM },\n\t/*::[*/0x0004/*::]*/: { n:\"BIFF2STR\", f:parse_BIFF2STR },\n\t/*::[*/0x0005/*::]*/: { n:\"BoolErr\", f:parse_BoolErr },\n\t/*::[*/0x0007/*::]*/: { n:\"String\", f:parse_BIFF2STRING },\n\t/*::[*/0x0008/*::]*/: { n:\"BIFF2ROW\" },\n\t/*::[*/0x0009/*::]*/: { n:'BOF', f:parse_BOF },\n\t/*::[*/0x000b/*::]*/: { n:\"Index\" },\n\t/*::[*/0x0016/*::]*/: { n:\"ExternCount\", f:parseuint16 },\n\t/*::[*/0x001e/*::]*/: { n:\"BIFF2FORMAT\", f:parse_BIFF2Format },\n\t/*::[*/0x001f/*::]*/: { n:\"BIFF2FMTCNT\" }, /* 16-bit cnt of BIFF2FORMAT records */\n\t/*::[*/0x0020/*::]*/: { n:\"BIFF2COLINFO\" },\n\t/*::[*/0x0021/*::]*/: { n:\"Array\", f:parse_Array },\n\t/*::[*/0x0024/*::]*/: { n:\"COLWIDTH\" },\n\t/*::[*/0x0025/*::]*/: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\n\t// 0x2c ??\n\t// 0x2d ??\n\t// 0x2e ??\n\t// 0x30 FONTCOUNT: number of fonts\n\t/*::[*/0x0032/*::]*/: { n:\"BIFF2FONTXTRA\", f:parse_BIFF2FONTXTRA },\n\t// 0x35: INFOOPTS\n\t// 0x36: TABLE (BIFF2 only)\n\t// 0x37: TABLE2 (BIFF2 only)\n\t// 0x38: WNDESK\n\t// 0x39 ??\n\t// 0x3a: BEGINPREF\n\t// 0x3b: ENDPREF\n\t/*::[*/0x003e/*::]*/: { n:\"BIFF2WINDOW2\" },\n\t// 0x3f ??\n\t// 0x46: SHOWSCROLL\n\t// 0x47: SHOWFORMULA\n\t// 0x48: STATUSBAR\n\t// 0x49: SHORTMENUS\n\t// 0x4A:\n\t// 0x4B:\n\t// 0x4C:\n\t// 0x4E:\n\t// 0x4F:\n\t// 0x58: TOOLBAR (BIFF3)\n\n\t/* - - - */\n\t/*::[*/0x0034/*::]*/: { n:\"DDEObjName\" },\n\t/*::[*/0x0043/*::]*/: { n:\"BIFF2XF\" },\n\t/*::[*/0x0044/*::]*/: { n:\"BIFF2XFINDEX\", f:parseuint16 },\n\t/*::[*/0x0045/*::]*/: { n:\"BIFF2FONTCLR\" },\n\t/*::[*/0x0056/*::]*/: { n:\"BIFF4FMTCNT\" }, /* 16-bit cnt, similar to BIFF2 */\n\t/*::[*/0x007e/*::]*/: { n:\"RK\" }, /* Not necessarily same as 0x027e */\n\t/*::[*/0x007f/*::]*/: { n:\"ImData\", f:parse_ImData },\n\t/*::[*/0x0087/*::]*/: { n:\"Addin\" },\n\t/*::[*/0x0088/*::]*/: { n:\"Edg\" },\n\t/*::[*/0x0089/*::]*/: { n:\"Pub\" },\n\t// 0x8A\n\t// 0x8B LH: alternate menu key flag (BIFF3/4)\n\t// 0x8E\n\t// 0x8F\n\t/*::[*/0x0091/*::]*/: { n:\"Sub\" },\n\t// 0x93 STYLE\n\t/*::[*/0x0094/*::]*/: { n:\"LHRecord\" },\n\t/*::[*/0x0095/*::]*/: { n:\"LHNGraph\" },\n\t/*::[*/0x0096/*::]*/: { n:\"Sound\" },\n\t// 0xA2 FNPROTO: function prototypes (BIFF4)\n\t// 0xA3\n\t// 0xA8\n\t/*::[*/0x00a9/*::]*/: { n:\"CoordList\" },\n\t/*::[*/0x00ab/*::]*/: { n:\"GCW\" },\n\t/*::[*/0x00bc/*::]*/: { n:\"ShrFmla\" }, /* Not necessarily same as 0x04bc */\n\t/*::[*/0x00bf/*::]*/: { n:\"ToolbarHdr\" },\n\t/*::[*/0x00c0/*::]*/: { n:\"ToolbarEnd\" },\n\t/*::[*/0x00c2/*::]*/: { n:\"AddMenu\" },\n\t/*::[*/0x00c3/*::]*/: { n:\"DelMenu\" },\n\t/*::[*/0x00d6/*::]*/: { n:\"RString\", f:parse_RString },\n\t/*::[*/0x00df/*::]*/: { n:\"UDDesc\" },\n\t/*::[*/0x00ea/*::]*/: { n:\"TabIdConf\" },\n\t/*::[*/0x0162/*::]*/: { n:\"XL5Modify\" },\n\t/*::[*/0x01a5/*::]*/: { n:\"FileSharing2\" },\n\t/*::[*/0x0206/*::]*/: { n:\"Formula\", f:parse_Formula },\n\t/*::[*/0x0209/*::]*/: { n:'BOF', f:parse_BOF },\n\t/*::[*/0x0218/*::]*/: { n:\"Lbl\", f:parse_Lbl },\n\t/*::[*/0x0223/*::]*/: { n:\"ExternName\", f:parse_ExternName },\n\t/*::[*/0x0231/*::]*/: { n:\"Font\" },\n\t/*::[*/0x0243/*::]*/: { n:\"BIFF3XF\" },\n\t/*::[*/0x0406/*::]*/: { n:\"Formula\", f:parse_Formula },\n\t/*::[*/0x0409/*::]*/: { n:'BOF', f:parse_BOF },\n\t/*::[*/0x0443/*::]*/: { n:\"BIFF4XF\" },\n\t/*::[*/0x086d/*::]*/: { n:\"FeatInfo\" },\n\t/*::[*/0x0873/*::]*/: { n:\"FeatInfo11\" },\n\t/*::[*/0x0881/*::]*/: { n:\"SXAddl12\" },\n\t/*::[*/0x08c0/*::]*/: { n:\"AutoWebPub\" },\n\t/*::[*/0x08c1/*::]*/: { n:\"ListObj\" },\n\t/*::[*/0x08c2/*::]*/: { n:\"ListField\" },\n\t/*::[*/0x08c3/*::]*/: { n:\"ListDV\" },\n\t/*::[*/0x08c4/*::]*/: { n:\"ListCondFmt\" },\n\t/*::[*/0x08c5/*::]*/: { n:\"ListCF\" },\n\t/*::[*/0x08c6/*::]*/: { n:\"FMQry\" },\n\t/*::[*/0x08c7/*::]*/: { n:\"FMSQry\" },\n\t/*::[*/0x08c8/*::]*/: { n:\"PLV\" },\n\t/*::[*/0x08c9/*::]*/: { n:\"LnExt\" },\n\t/*::[*/0x08ca/*::]*/: { n:\"MkrExt\" },\n\t/*::[*/0x08cb/*::]*/: { n:\"CrtCoopt\" },\n\t/*::[*/0x08d6/*::]*/: { n:\"FRTArchId$\", r:12 },\n\n\t/*::[*/0x7262/*::]*/: {}\n};\n\nvar XLSRE = evert_key(XLSRecordEnum, 'n');\nfunction write_biff_rec(ba/*:BufArray*/, type/*:number|string*/, payload, length/*:?number*/)/*:void*/ {\n\tvar t/*:number*/ = typeof type == \"number\" ? type : (+type || +XLSRE[/*::String(*/type/*::)*/]);\n\tif(isNaN(t)) return;\n\tvar len = length || (payload||[]).length || 0;\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, len);\n\tif(/*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\n\nfunction write_biff_continue(ba/*:BufArray*/, type/*:number|string*/, payload, length/*:?number*/)/*:void*/ {\n\tvar len = length || (payload||[]).length || 0;\n\tif(len <= 8224) return write_biff_rec(ba, type, payload, len);\n\tvar t/*:number*/ = +type || +XLSRE[/*::String(*/type/*::)*/];\n\tif(isNaN(t)) return;\n\tvar parts = payload.parts || [], sidx = 0;\n\tvar i = 0, w = 0;\n\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, w);\n\tba.push(payload.slice(i, i + w));\n\ti += w;\n\twhile(i < len) {\n\t\to = ba.next(4);\n\t\to.write_shift(2, 0x3c); // TODO: figure out correct continue type\n\t\tw = 0;\n\t\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\t\to.write_shift(2, w);\n\t\tba.push(payload.slice(i, i+w)); i+= w;\n\t}\n}\n\nfunction write_BIFF2Cell(out, r/*:number*/, c/*:number*/) {\n\tif(!out) out = new_buf(7);\n\tout.write_shift(2, r);\n\tout.write_shift(2, c);\n\tout.write_shift(2, 0);\n\tout.write_shift(1, 0);\n\treturn out;\n}\n\nfunction write_BIFF2BERR(r/*:number*/, c/*:number*/, val, t/*:?string*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\twrite_Bes(val, t || 'b', out);\n\treturn out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r/*:number*/, c/*:number*/, val) {\n\tvar out = new_buf(8 + 2*val.length);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(1, val.length);\n\tout.write_shift(val.length, val, 'sbcs');\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\n}\n\nfunction write_ws_biff2_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*//*::, opts*/) {\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\tif((v == (v|0)) && (v >= 0) && (v < 65536))\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\n\t\t\telse\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\n\t\t\treturn;\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, (cell.v||\"\").slice(0,255)));\n\t\t\treturn;\n\t}\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\n\nfunction write_ws_biff2(ba/*:BufArray*/, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar dense = Array.isArray(ws);\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tif(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, 0x3FFF);\n\t\tref = encode_range(range);\n\t}\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts);\n\t\t}\n\t}\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\tvar ba = buf_array();\n\tvar idx = 0;\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n\twrite_biff_rec(ba, (o.biff == 4 ? 0x0409 : (o.biff == 3 ? 0x0209 : 0x0009)), write_BOF(wb, 0x10, o));\n\t/* ... */\n\twrite_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n\t/* ... */\n\twrite_biff_rec(ba, 0x000A);\n\treturn ba.end();\n}\n\nfunction write_FONTS_biff8(ba, data, opts) {\n\twrite_biff_rec(ba, \"Font\", write_Font({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Arial\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}, opts));\n}\n\n\nfunction write_FMTS_biff8(ba, NF/*:?SSFTable*/, opts) {\n\tif(!NF) return;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, \"Format\", write_Format(i, NF[i], opts));\n\t});\n}\n\nfunction write_FEAT(ba, ws) {\n\t/* [MS-XLS] 2.4.112 */\n\tvar o = new_buf(19);\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n\twrite_biff_rec(ba, \"FeatHdr\", o);\n\t/* [MS-XLS] 2.4.111 */\n\to = new_buf(39);\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n\twrite_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n\to.write_shift(4, 4);\n\twrite_biff_rec(ba, \"Feat\", o);\n}\n\nfunction write_CELLXFS_biff8(ba, opts) {\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, \"XF\", write_XF({numFmtId:0, style:true}, 0, opts));\n\topts.cellXfs.forEach(function(c) {\n\t\twrite_biff_rec(ba, \"XF\", write_XF(c, 0, opts));\n\t});\n}\n\nfunction write_ws_biff8_hlinks(ba/*:BufArray*/, ws) {\n\tfor(var R=0; R<ws['!links'].length; ++R) {\n\t\tvar HL = ws['!links'][R];\n\t\twrite_biff_rec(ba, \"HLink\", write_HLink(HL));\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, \"HLinkTooltip\", write_HLinkTooltip(HL));\n\t}\n\tdelete ws['!links'];\n}\n\nfunction write_ws_cols_biff8(ba, cols, ws) {\n\tif(!cols) return;\n\tvar cnt = 0;\n\tcols.forEach(function(col, idx) {\n\t\tif(++cnt <= 256 && col) {\n\t\t\twrite_biff_rec(ba, \"ColInfo\", write_ColInfo(col_obj_w(idx, col), idx));\n\t\t}\n\t});\n}\n\nfunction write_ws_biff8_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts) {\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.v == null && !cell.bf) {\n\t\twrite_biff_rec(ba, \"Blank\", write_XLSCell(R, C, os));\n\t\treturn;\n\t}\n\tif(cell.bf) write_biff_rec(ba, \"Formula\", write_Formula(cell, R, C, opts, os));\n\telse switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\t/* TODO: emit RK as appropriate */\n\t\t\twrite_biff_rec(ba, \"Number\", write_Number(R, C, v, os, opts));\n\t\t\tbreak;\n\t\tcase 'b': case 'e':\n\t\t\twrite_biff_rec(ba, 0x0205, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n\t\t\tbreak;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvar isst = get_sst_id(opts.Strings, cell.v, opts.revStrings);\n\t\t\t\twrite_biff_rec(ba, \"LabelSst\", write_LabelSst(R, C, isst, os, opts));\n\t\t\t} else write_biff_rec(ba, \"Label\", write_Label(R, C, (cell.v||\"\").slice(0,255), os, opts));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twrite_biff_rec(ba, \"Blank\", write_XLSCell(R, C, os));\n\t}\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheet/*:WBWSProp*/ = ((_WB.Sheets||[])[idx]||{}/*:any*/);\n\tvar dense = Array.isArray(ws);\n\tvar b8 = opts.biff == 8;\n\tvar ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\n\tvar MAX_ROWS = b8 ? 65536 : 16384;\n\tif(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, MAX_ROWS-1);\n\t}\n\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n\t/* [Uncalced] Index */\n\twrite_biff_rec(ba, \"CalcMode\", writeuint16(1));\n\twrite_biff_rec(ba, \"CalcCount\", writeuint16(100));\n\twrite_biff_rec(ba, \"CalcRefMode\", writebool(true));\n\twrite_biff_rec(ba, \"CalcIter\", writebool(false));\n\twrite_biff_rec(ba, \"CalcDelta\", write_Xnum(0.001));\n\twrite_biff_rec(ba, \"CalcSaveRecalc\", writebool(true));\n\twrite_biff_rec(ba, \"PrintRowCol\", writebool(false));\n\twrite_biff_rec(ba, \"PrintGrid\", writebool(false));\n\twrite_biff_rec(ba, \"GridSet\", writeuint16(1));\n\twrite_biff_rec(ba, \"Guts\", write_Guts([0,0]));\n\t/* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n\t/* Header (string) */\n\t/* Footer (string) */\n\twrite_biff_rec(ba, \"HCenter\", writebool(false));\n\twrite_biff_rec(ba, \"VCenter\", writebool(false));\n\t/* ... */\n\tif(b8) write_ws_cols_biff8(ba, ws[\"!cols\"], ws);\n\t/* ... */\n\twrite_biff_rec(ba, 0x200, write_Dimensions(range, opts));\n\t/* ... */\n\n\tif(b8) ws['!links'] = [];\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts);\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n\t\t}\n\t}\n\tvar cname/*:string*/ = _sheet.CodeName || _sheet.name || s;\n\t/* ... */\n\tif(b8) write_biff_rec(ba, \"Window2\", write_Window2((_WB.Views||[])[0]));\n\t/* ... */\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, \"MergeCells\", write_MergeCells(ws['!merges']));\n\t/* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\n\t/* [DVAL] */\n\twrite_biff_rec(ba, \"CodeName\", write_XLUnicodeString(cname, opts));\n\t/* *WebPub *CellWatch [SheetExt] */\n\tif(b8) write_FEAT(ba, ws);\n\t/* *FEAT11 *RECORD12 */\n\twrite_biff_rec(ba, \"EOF\");\n\treturn ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb/*:Workbook*/, bufs, opts/*:WriteOpts*/) {\n\tvar A = buf_array();\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheets/*:Array<WBWSProp>*/ = (_WB.Sheets||[]);\n\tvar _wb/*:WBProps*/ = /*::((*/_WB.WBProps||{/*::CodeName:\"ThisWorkbook\"*/}/*:: ):any)*/;\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n\tif(opts.bookType == \"xla\") write_biff_rec(A, \"Addin\");\n\twrite_biff_rec(A, \"InterfaceHdr\", b8 ? writeuint16(0x04b0) : null);\n\twrite_biff_rec(A, \"Mms\", writezeroes(2));\n\tif(b5) write_biff_rec(A, \"ToolbarHdr\");\n\tif(b5) write_biff_rec(A, \"ToolbarEnd\");\n\twrite_biff_rec(A, \"InterfaceEnd\");\n\twrite_biff_rec(A, \"WriteAccess\", write_WriteAccess(\"SheetJS\", opts));\n\t/* [FileSharing] */\n\twrite_biff_rec(A, \"CodePage\", writeuint16(b8 ? 0x04b0 : 0x04E4));\n\t/* *2047 Lel */\n\tif(b8) write_biff_rec(A, \"DSF\", writeuint16(0));\n\tif(b8) write_biff_rec(A, \"Excel9File\");\n\twrite_biff_rec(A, \"RRTabId\", write_RRTabId(wb.SheetNames.length));\n\tif(b8 && wb.vbaraw) write_biff_rec(A, \"ObProj\");\n\t/* [ObNoMacros] */\n\tif(b8 && wb.vbaraw) {\n\t\tvar cname/*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n\t\twrite_biff_rec(A, \"CodeName\", write_XLUnicodeString(cname, opts));\n\t}\n\twrite_biff_rec(A, \"BuiltInFnGroupCount\", writeuint16(0x11));\n\t/* *FnGroupName *FnGrp12 */\n\t/* *Lbl */\n\t/* [OleObjectSize] */\n\twrite_biff_rec(A, \"WinProtect\", writebool(false));\n\twrite_biff_rec(A, \"Protect\", writebool(false));\n\twrite_biff_rec(A, \"Password\", writeuint16(0));\n\tif(b8) write_biff_rec(A, \"Prot4Rev\", writebool(false));\n\tif(b8) write_biff_rec(A, \"Prot4RevPass\", writeuint16(0));\n\twrite_biff_rec(A, \"Window1\", write_Window1(opts));\n\twrite_biff_rec(A, \"Backup\", writebool(false));\n\twrite_biff_rec(A, \"HideObj\", writeuint16(0));\n\twrite_biff_rec(A, \"Date1904\", writebool(safe1904(wb)==\"true\"));\n\twrite_biff_rec(A, \"CalcPrecision\", writebool(true));\n\tif(b8) write_biff_rec(A, \"RefreshAll\", writebool(false));\n\twrite_biff_rec(A, \"BookBool\", writeuint16(0));\n\t/* ... */\n\twrite_FONTS_biff8(A, wb, opts);\n\twrite_FMTS_biff8(A, wb.SSF, opts);\n\twrite_CELLXFS_biff8(A, opts);\n\t/* ... */\n\tif(b8) write_biff_rec(A, \"UsesELFs\", writebool(false));\n\tvar a = A.end();\n\n\tvar C = buf_array();\n\t/* METADATA [MTRSettings] [ForceFullCalculation] */\n\tif(b8) write_biff_rec(C, \"Country\", write_Country());\n\t/* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture *MSODRAWINGGROUP */\n\n\t/* BIFF8: [SST *Continue] ExtSST */\n\tif(b8 && opts.Strings) write_biff_continue(C, \"SST\", write_SST(opts.Strings, opts));\n\n\t/* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n\twrite_biff_rec(C, \"EOF\");\n\tvar c = C.end();\n\n\tvar B = buf_array();\n\tvar blen = 0, j = 0;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n\tvar start = a.length + blen + c.length;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\n\t\tvar _sheet/*:WBWSProp*/ = _sheets[j] || ({}/*:any*/);\n\t\twrite_biff_rec(B, \"BoundSheet8\", write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n\t\tstart += bufs[j].length;\n\t}\n\t/* 1*BoundSheet8 */\n\tvar b = B.end();\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n\tvar out = [];\n\tif(a.length) out.push(a);\n\tif(b.length) out.push(b);\n\tif(c.length) out.push(c);\n\treturn bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar bufs = [];\n\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = SSF.get_table();\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n\t\to.ssf = wb.SSF;\n\t}\n\n\to.Strings = /*::((*/[]/*:: :any):SST)*/; o.Strings.Count = 0; o.Strings.Unique = 0;\n\tfix_write_opts(o);\n\n\to.cellXfs = [];\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\n\treturn bconcat(bufs);\n}\n\nfunction write_biff_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tfor(var i = 0; i <= wb.SheetNames.length; ++i) {\n\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\tif(range.e.c > 255) { // note: 255 is IV\n\t\t  if(typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n\t\t}\n\t}\n\n\tvar o = opts || {};\n\tswitch(o.biff || 2) {\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\n\t}\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nvar HTML_ = (function() {\n\tfunction html_to_sheet(str/*:string*/, _opts)/*:Workbook*/ {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tstr = str.replace(/<!--.*?-->/g, \"\");\n\t\tvar mtch/*:any*/ = str.match(/<table/i);\n\t\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n\t\tvar mtch2/*:any*/ = str.match(/<\\/table/i);\n\t\tvar i/*:number*/ = mtch.index, j/*:number*/ = mtch2 && mtch2.index || str.length;\n\t\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n\t\tvar R = -1, C = 0, RS = 0, CS = 0;\n\t\tvar range/*:Range*/ = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n\t\tvar merges/*:Array<Range>*/ = [];\n\t\tfor(i = 0; i < rows.length; ++i) {\n\t\t\tvar row = rows[i].trim();\n\t\t\tvar hd = row.slice(0,3).toLowerCase();\n\t\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n\t\t\tif(hd != \"<td\" && hd != \"<th\") continue;\n\t\t\tvar cells = row.split(/<\\/t[dh]>/i);\n\t\t\tfor(j = 0; j < cells.length; ++j) {\n\t\t\t\tvar cell = cells[j].trim();\n\t\t\t\tif(!cell.match(/<t[dh]/i)) continue;\n\t\t\t\tvar m = cell, cc = 0;\n\t\t\t\t/* TODO: parse styles etc */\n\t\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n\t\t\t\tfor(var midx = 0; midx < merges.length; ++midx) {\n\t\t\t\t\tvar _merge/*:Range*/ = merges[midx];\n\t\t\t\t\tif(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }\n\t\t\t\t}\n\t\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n\t\t\t\tCS = tag.colspan ? +tag.colspan : 1;\n\t\t\t\tif((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\t\tvar _t/*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n\t\t\t\t/* TODO: generate stub cells */\n\t\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\t\tm = htmldecode(m);\n\t\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n\t\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n\t\t\t\tif(!m.length) continue;\n\t\t\t\tvar o/*:Cell*/ = {t:'s', v:m};\n\t\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\n\t\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n\t\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(m)}/*:any*/);\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\t\to.z = opts.dateNF || SSF._table[14];\n\t\t\t\t}\n\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n\t\t\t\telse ws[encode_cell({r:R, c:C})] = o;\n\t\t\t\tC += CS;\n\t\t\t}\n\t\t}\n\t\tws['!ref'] = encode_range(range);\n\t\tif(merges.length) ws[\"!merges\"] = merges;\n\t\treturn ws;\n\t}\n\tfunction html_to_book(str/*:string*/, opts)/*:Workbook*/ {\n\t\tvar mtch = str.match(/<table.*?>[\\s\\S]*?<\\/table>/gi);\n\t\tif(!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n\t\tif(mtch.length == 1) return sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n\t\tvar wb = utils.book_new();\n\t\tmtch.forEach(function(s, idx) { utils.book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx+1)); });\n\t\treturn wb;\n\t}\n\tfunction make_html_row(ws/*:Worksheet*/, r/*:Range*/, R/*:number*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\t\tvar M/*:Array<Range>*/ = (ws['!merges'] ||[]);\n\t\tvar oo/*:Array<string>*/ = [];\n\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\tvar RS = 0, CS = 0;\n\t\t\tfor(var j = 0; j < M.length; ++j) {\n\t\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\n\t\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\n\t\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n\t\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n\t\t\t}\n\t\t\tif(RS < 0) continue;\n\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\tvar cell = o.dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t/* TODO: html entities */\n\t\t\tvar w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n\t\t\tvar sp = ({}/*:any*/);\n\t\t\tif(RS > 1) sp.rowspan = RS;\n\t\t\tif(CS > 1) sp.colspan = CS;\n\t\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n\t\t\telse if(cell) {\n\t\t\t\tsp[\"data-t\"] = cell && cell.t || 'z';\n\t\t\t\tif(cell.v != null) sp[\"data-v\"] = cell.v;\n\t\t\t\tif(cell.z != null) sp[\"data-z\"] = cell.z;\n\t\t\t\tif(cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + cell.l.Target +'\">' + w + '</a>';\n\t\t\t}\n\t\t\tsp.id = (o.id || \"sjs\") + \"-\" + coord;\n\t\t\too.push(writextag('td', w, sp));\n\t\t}\n\t\tvar preamble = \"<tr>\";\n\t\treturn preamble + oo.join(\"\") + \"</tr>\";\n\t}\n\tfunction make_html_preamble(ws/*:Worksheet*/, R/*:Range*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\t\tvar out/*:Array<string>*/ = [];\n\t\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n\t}\n\tvar _BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\n\tvar _END = '</body></html>';\n\tfunction sheet_to_html(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*//*, wb:?Workbook*/)/*:string*/ {\n\t\tvar o = opts || {};\n\t\tvar header = o.header != null ? o.header : _BEGIN;\n\t\tvar footer = o.footer != null ? o.footer : _END;\n\t\tvar out/*:Array<string>*/ = [header];\n\t\tvar r = decode_range(ws['!ref']);\n\t\to.dense = Array.isArray(ws);\n\t\tout.push(make_html_preamble(ws, r, o));\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n\t\tout.push(\"</table>\" + footer);\n\t\treturn out.join(\"\");\n\n\t}\n\treturn {\n\t\tto_workbook: html_to_book,\n\t\tto_sheet: html_to_sheet,\n\t\t_row: make_html_row,\n\t\tBEGIN: _BEGIN,\n\t\tEND: _END,\n\t\t_preamble: make_html_preamble,\n\t\tfrom_sheet: sheet_to_html\n\t};\n})();\n\nfunction sheet_add_dom(ws/*:Worksheet*/, table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tif(DENSE != null) opts.dense = DENSE;\n\tvar or_R = 0, or_C = 0;\n\tif(opts.origin != null) {\n\t\tif(typeof opts.origin == 'number') or_R = opts.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n\t\t\tor_R = _origin.r; or_C = _origin.c;\n\t\t}\n\t}\n\n\tvar rows/*:HTMLCollection<HTMLTableRowElement>*/ = table.getElementsByTagName('tr');\n\tvar sheetRows = Math.min(opts.sheetRows||10000000, rows.length);\n\tvar range/*:Range*/ = {s:{r:0,c:0},e:{r:or_R,c:or_C}};\n\tif(ws[\"!ref\"]) {\n\t\tvar _range/*:Range*/ = decode_range(ws[\"!ref\"]);\n\t\trange.s.r = Math.min(range.s.r, _range.s.r);\n\t\trange.s.c = Math.min(range.s.c, _range.s.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\tif(or_R == -1) range.e.r = or_R = _range.e.r + 1;\n\t}\n\tvar merges/*:Array<Range>*/ = [], midx = 0;\n\tvar rowinfo/*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n\tvar _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;\n\tif(!ws[\"!cols\"]) ws['!cols'] = [];\n\tfor(; _R < rows.length && R < sheetRows; ++_R) {\n\t\tvar row/*:HTMLTableRowElement*/ = rows[_R];\n\t\tif (is_dom_element_hidden(row)) {\n\t\t\tif (opts.display) continue;\n\t\t\trowinfo[R] = {hidden: true};\n\t\t}\n\t\tvar elts/*:HTMLCollection<HTMLTableCellElement>*/ = (row.children/*:any*/);\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\n\t\t\tvar elt/*:HTMLTableCellElement*/ = elts[_C];\n\t\t\tif (opts.display && is_dom_element_hidden(elt)) continue;\n\t\t\tvar v/*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n\t\t\tvar z/*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar m/*:Range*/ = merges[midx];\n\t\t\t\tif(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }\n\t\t\t}\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\n\t\t\tif( ((RS = (+elt.getAttribute(\"rowspan\") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});\n\t\t\tvar o/*:Cell*/ = {t:'s', v:v};\n\t\t\tvar _t/*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n\t\t\tif(v != null) {\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(v)}/*:any*/);\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\t\to.z = opts.dateNF || SSF._table[14];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(o.z === undefined && z != null) o.z = z;\n\t\t\t/* The first link is used.  Links are assumed to be fully specified.\n\t\t\t * TODO: The right way to process relative links is to make a new <a> */\n\t\t\tvar l = \"\", Aelts = elt.getElementsByTagName(\"A\");\n\t\t\tif(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)\tif(Aelts[Aelti].hasAttribute(\"href\")) {\n\t\t\t\tl = Aelts[Aelti].getAttribute(\"href\"); if(l.charAt(0) != \"#\") break;\n\t\t\t}\n\t\t\tif(l && l.charAt(0) != \"#\") o.l = ({ Target: l });\n\t\t\tif(opts.dense) { if(!ws[R + or_R]) ws[R + or_R] = []; ws[R + or_R][C + or_C] = o; }\n\t\t\telse ws[encode_cell({c:C + or_C, r:R + or_R})] = o;\n\t\t\tif(range.e.c < C + or_C) range.e.c = C + or_C;\n\t\t\tC += CS;\n\t\t}\n\t\t++R;\n\t}\n\tif(merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n\trange.e.r = Math.max(range.e.r, R - 1 + or_R);\n\tws['!ref'] = encode_range(range);\n\tif(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance\n\treturn ws;\n}\n\nfunction parse_dom_table(table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tvar ws/*:Worksheet*/ = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\treturn sheet_add_dom(ws, table, _opts);\n}\n\nfunction table_to_book(table/*:HTMLElement*/, opts/*:?any*/)/*:Workbook*/ {\n\treturn sheet_to_workbook(parse_dom_table(table, opts), opts);\n}\n\nfunction is_dom_element_hidden(element/*:HTMLElement*/)/*:boolean*/ {\n\tvar display/*:string*/ = '';\n\tvar get_computed_style/*:?function*/ = get_get_computed_style_function(element);\n\tif(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n\tif(!display) display = element.style && element.style.display;\n\treturn display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element/*:HTMLElement*/)/*:?function*/ {\n\t// The proper getComputedStyle implementation is the one defined in the element window\n\tif(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n\t// If it is not available, try to get one from the global namespace\n\tif(typeof getComputedStyle === 'function') return getComputedStyle;\n\treturn null;\n}\n/* OpenDocument */\nvar parse_content_xml = (function() {\n\n\tvar parse_text_p = function(text/*:string*//*::, tag*/)/*:Array<any>*/ {\n\t\t/* 6.1.2 White Space Characters */\n\t\tvar fixed = text\n\t\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n\t\t\t.replace(/<text:s\\/>/g,\" \")\n\t\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n\t\t\t.replace(/<text:tab[^>]*\\/>/g,\"\\t\")\n\t\t\t.replace(/<text:line-break\\/>/g,\"\\n\");\n\t\tvar v = unescapexml(fixed.replace(/<[^>]*>/g,\"\"));\n\n\t\treturn [v];\n\t};\n\n\tvar number_formats = {\n\t\t/* ods name: [short ssf fmt, long ssf fmt] */\n\t\tday:           [\"d\",   \"dd\"],\n\t\tmonth:         [\"m\",   \"mm\"],\n\t\tyear:          [\"y\",   \"yy\"],\n\t\thours:         [\"h\",   \"hh\"],\n\t\tminutes:       [\"m\",   \"mm\"],\n\t\tseconds:       [\"s\",   \"ss\"],\n\t\t\"am-pm\":       [\"A/P\", \"AM/PM\"],\n\t\t\"day-of-week\": [\"ddd\", \"dddd\"],\n\t\tera:           [\"e\",   \"ee\"],\n\t\t/* there is no native representation of LO \"Q\" format */\n\t\tquarter:       [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\n\t};\n\n\treturn function pcx(d/*:string*/, _opts)/*:Workbook*/ {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar str = xlml_normalize(d);\n\t\tvar state/*:Array<any>*/ = [], tmp;\n\t\tvar tag/*:: = {}*/;\n\t\tvar NFtag = {name:\"\"}, NF = \"\", pidx = 0;\n\t\tvar sheetag/*:: = {name:\"\", '名称':\"\"}*/;\n\t\tvar rowtag/*:: = {'行号':\"\"}*/;\n\t\tvar Sheets = {}, SheetNames/*:Array<string>*/ = [];\n\t\tvar ws = opts.dense ? ([]/*:any*/) : ({}/*:any*/);\n\t\tvar Rn, q/*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n\t\tvar ctag = ({value:\"\"}/*:any*/);\n\t\tvar textp = \"\", textpidx = 0, textptag/*:: = {}*/;\n\t\tvar textR = [];\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar row_ol = 0;\n\t\tvar number_format_map = {};\n\t\tvar merges/*:Array<Range>*/ = [], mrange = {}, mR = 0, mC = 0;\n\t\tvar rowinfo/*:Array<RowInfo>*/ = [], rowpeat = 1, colpeat = 1;\n\t\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\t\tvar WB = {Names:[]};\n\t\tvar atag = ({}/*:any*/);\n\t\tvar _Ref/*:[string, string]*/ = [\"\", \"\"];\n\t\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\t\tvar creator = \"\", creatoridx = 0;\n\t\tvar isstub = false, intable = false;\n\t\tvar i = 0;\n\t\txlmlregex.lastIndex = 0;\n\t\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n\t\t\t\t\telse ws['!ref'] = \"A1:A1\";\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\n\t\t\t\t\t}\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\n\t\t\t\t\tsheetag.name = sheetag['名称'] || sheetag.name;\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t\tintable = false;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = opts.dense ? ([]/*:any*/) : ({}/*:any*/); merges = [];\n\t\t\t\t\trowinfo = [];\n\t\t\t\t\tintable = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\n\t\t\t\tbreak;\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\n\t\t\t\t/* TODO: remove magic */\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n\t\t\t\tC = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n\t\t\t\tif(Rn[1] !== '/') ++C;\n\t\t\t\tif(opts.sheetStubs) {\n\t\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\n\t\t\t\t}\n\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\tbreak; /* stub */\n\t\t\tcase 'table-cell': case '数据':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tq = ({t:'z', v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\tif(!ws[R]) ws[R] = [];\n\t\t\t\t\t\t\tws[R][C] = q;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tws[encode_cell({r:R,c:C})] = q;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tC+= colpeat-1;\n\t\t\t\t} else if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\t\tcolpeat = 1;\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcomments = []; comment = ({}/*:any*/);\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\n\t\t\t\t\t}\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n\t\t\t\t\t/* 19.385 office:value-type */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }\n\t\t\t\t\t\t\tq.z = 'm/d/yy'; break;\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;\n\t\t\t\t\t\t\tif(opts.cellDates) { q.t = 'd'; q.v = numdate(q.v); }\n\t\t\t\t\t\t\tq.z = 'HH:MM:SS'; break;\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\n\t\t\t\t\t\t\t\tq.t = 's';\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisstub = false;\n\t\t\t\t\tif(q.t === 's') {\n\t\t\t\t\t\tq.v = textp || '';\n\t\t\t\t\t\tif(textR.length) q.R = textR;\n\t\t\t\t\t\tisstub = textpidx == 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(atag.Target) q.l = atag;\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\n\t\t\t\t\tif(isstub) { q.t = \"z\"; delete q.v; }\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!ws[R + rpt]) ws[R + rpt] = [];\n\t\t\t\t\t\t\t\t\tws[R + rpt][C] = rpt == 0 ? q : dup(q);\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\n\t\t\t\t\tq = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n\t\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\t}\n\t\t\t\tatag = ({}/*:any*/);\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'styles': // TODO <office:styles>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\tcase 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t\tcomment.t = textp;\n\t\t\t\t\tif(textR.length) /*::(*/comment/*:: :any)*/.R = textR;\n\t\t\t\t\tcomment.a = creator;\n\t\t\t\t\tcomments.push(comment);\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\n\t\t\t\tcreator = \"\"; creatoridx = 0;\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n\t\t\tcase 'settings': // TODO: <office:settings>\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\n\t\t\tcase 'image': // 10.4.4 <draw:image>\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\n\t\t\tcase 'form': // 13.13 <form:form>\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\n\t\t\tcase 'event-listeners': // TODO\n\t\t\tcase 'chart': // TODO\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'scientific-number': // TODO: <number:scientific-number>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-symbol': // TODO: <number:currency-symbol>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-style': // TODO: <number:currency-style>\n\t\t\t\tbreak;\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tNF = \"\";\n\t\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\n\t\t\tcase 'default-style': // TODO: <style:default-style>\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\n\t\t\tcase 'style': // 16.2 <style:style>\n\t\t\t\tbreak;\n\t\t\tcase 'map': break; // 16.3 <style:map>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'boolean-style': break; // 16.27.23 <number:boolean-style>\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text-style': break; // 16.27.25 <number:text-style>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]}/*:any*/);\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\n\t\t\t\tWB.Names.push(nrange);\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\n\t\t\t/* TODO: outline levels */\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\n\n\t\t\tcase 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904\n\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\n\t\t\t\tif(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n\t\t\t\t\tvar ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\t\ttextp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n\t\t\t\t} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\n\t\t\t\tif(Rn[1]==='/') break;\n\t\t\t\ttry {\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n\t\t\t\t} catch(e) {/* empty */}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date': break; // <*:date>\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\n\t\t\tcase 'desc': break; // <*:desc>\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n\t\t\t/* 9.2 Advanced Tables */\n\t\t\tcase 'table-source': break; // 9.2.6\n\t\t\tcase 'scenario': break; // 9.2.6\n\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\n\n\t\t\t/* 7.3 Document Fields */\n\t\t\tcase 'sender-firstname': // 7.3.6.2\n\t\t\tcase 'sender-lastname': // 7.3.6.3\n\t\t\tcase 'sender-initials': // 7.3.6.4\n\t\t\tcase 'sender-title': // 7.3.6.5\n\t\t\tcase 'sender-position': // 7.3.6.6\n\t\t\tcase 'sender-email': // 7.3.6.7\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\n\t\t\tcase 'sender-fax': // 7.3.6.9\n\t\t\tcase 'sender-company': // 7.3.6.10\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\n\t\t\tcase 'sender-street': // 7.3.6.12\n\t\t\tcase 'sender-city': // 7.3.6.13\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\n\t\t\tcase 'sender-country': // 7.3.6.15\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\n\t\t\tcase 'author-name': // 7.3.7.1\n\t\t\tcase 'author-initials': // 7.3.7.2\n\t\t\tcase 'chapter': // 7.3.8\n\t\t\tcase 'file-name': // 7.3.9\n\t\t\tcase 'template-name': // 7.3.9\n\t\t\tcase 'sheet-name': // 7.3.9\n\t\t\t\tbreak;\n\n\t\t\tcase 'event-listener':\n\t\t\t\tbreak;\n\t\t\t/* TODO: FODS Properties */\n\t\t\tcase 'initial-creator':\n\t\t\tcase 'creation-date':\n\t\t\tcase 'print-date':\n\t\t\tcase 'generator':\n\t\t\tcase 'document-statistic':\n\t\t\tcase 'user-defined':\n\t\t\tcase 'editing-duration':\n\t\t\tcase 'editing-cycles':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: FODS Config */\n\t\t\tcase 'config-item':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: style tokens */\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\n\t\t\tcase 'time': break; // TODO <text:time>\n\n\t\t\t/* 9.3 Advanced Table Cells */\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\n\t\t\tcase 'detective': break; // 9.3.2 <table:\n\t\t\tcase 'operation': break; // 9.3.3 <table:\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\n\n\t\t\t/* 9.6 Data Pilot Tables <table: */\n\t\t\tcase 'data-pilot-table': // 9.6.3\n\t\t\tcase 'source-cell-range': // 9.6.5\n\t\t\tcase 'source-service': // 9.6.6\n\t\t\tcase 'data-pilot-field': // 9.6.7\n\t\t\tcase 'data-pilot-level': // 9.6.8\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\n\t\t\tcase 'data-pilot-members': // 9.6.11\n\t\t\tcase 'data-pilot-member': // 9.6.12\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\n\t\t\tcase 'data-pilot-groups': // 9.6.17\n\t\t\tcase 'data-pilot-group': // 9.6.18\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\n\t\t\t\tbreak;\n\n\t\t\t/* 10.3 Drawing Shapes */\n\t\t\tcase 'rect': // 10.3.2\n\t\t\t\tbreak;\n\n\t\t\t/* 14.6 DDE Connections */\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\n\t\t\tcase 'dde-link': // 14.6.4 <table:\n\t\t\tcase 'dde-source': // 14.6.5 <office:\n\t\t\t\tbreak;\n\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\n\t\t\tcase 'property': break; // 13.8 <form:property>\n\n\t\t\tcase 'a': // 6.1.8 hyperlink\n\t\t\t\tif(Rn[1]!== '/') {\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\n\t\t\t\t\tif(!atag.href) break;\n\t\t\t\t\tatag.Target = unescapexml(atag.href); delete atag.href;\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n\t\t\t\t\t} else if(atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t/* non-standard */\n\t\t\tcase 'table-protection': break;\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\n\t\t\tcase 'office-document-common-attrs': break; // bare\n\t\t\tdefault: switch(Rn[2]) {\n\t\t\t\tcase 'dc:':       // TODO: properties\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\n\t\t\t\tcase 'draw:':     // TODO: drawing\n\t\t\t\tcase 'style:':    // TODO: styles\n\t\t\t\tcase 'chart:':    // TODO: charts\n\t\t\t\tcase 'form:':     // TODO: forms\n\t\t\t\tcase 'uof:':      // TODO: uof\n\t\t\t\tcase '表:':       // TODO: uof\n\t\t\t\tcase '字:':       // TODO: uof\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\n\t\t\t}\n\t\t}\n\t\tvar out/*:Workbook*/ = ({\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames,\n\t\t\tWorkbook: WB\n\t\t}/*:any*/);\n\t\tif(opts.bookSheets) delete /*::(*/out/*:: :any)*/.Sheets;\n\t\treturn out;\n\t};\n})();\n\nfunction parse_ods(zip/*:ZIPFile*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\topts = opts || ({}/*:any*/);\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n\tvar content = getzipstr(zip, 'content.xml');\n\tif(!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n\tvar wb = parse_content_xml(utf8read(content), opts);\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n\treturn wb;\n}\nfunction parse_fods(data/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treturn parse_content_xml(data, opts);\n}\n\n/* OpenDocument */\nvar write_styles_ods/*:{(wb:any, opts:any):string}*/ = (function() {\n\tvar master_styles = [\n\t\t'<office:master-styles>',\n\t\t\t'<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">',\n\t\t\t\t'<style:header/>',\n\t\t\t\t'<style:header-left style:display=\"false\"/>',\n\t\t\t\t'<style:footer/>',\n\t\t\t\t'<style:footer-left style:display=\"false\"/>',\n\t\t\t'</style:master-page>',\n\t\t'</office:master-styles>'\n\t].join(\"\");\n\n\tvar payload = '<office:document-styles ' + wxt_helper({\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t'office:version': \"1.2\"\n\t}) + '>' + master_styles + '</office:document-styles>';\n\n\treturn function wso(/*::wb, opts*/) {\n\t\treturn XML_HEADER + payload;\n\t};\n})();\nvar write_content_ods/*:{(wb:any, opts:any):string}*/ = (function() {\n\t/* 6.1.2 White Space Characters */\n\tvar write_text_p = function(text/*:string*/)/*:string*/ {\n\t\treturn escapexml(text)\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\n\t\t\t.replace(/\\n/g, \"</text:p><text:p>\")\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n\t};\n\n\tvar null_cell_xml = '          <table:table-cell />\\n';\n\tvar covered_cell_xml = '          <table:covered-table-cell/>\\n';\n\tvar write_ws = function(ws, wb/*:Workbook*/, i/*:number*//*::, opts*/)/*:string*/ {\n\t\t/* Section 9 Tables */\n\t\tvar o/*:Array<string>*/ = [];\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']||\"A1\");\n\t\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\t\tvar dense = Array.isArray(ws);\n\t\tif(ws[\"!cols\"]) {\n\t\t\tfor(C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n\t\t}\n\t\tvar H = \"\", ROWS = ws[\"!rows\"]||[];\n\t\tfor(R = 0; R < range.s.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '></table:table-row>\\n');\n\t\t}\n\t\tfor(; R <= range.e.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '>\\n');\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n\t\t\tfor(; C <= range.e.c; ++C) {\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(skip) { o.push(covered_cell_xml); continue; }\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\t\tif(cell && cell.f) {\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n\t\t\t\t\tif(cell.F) {\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's': case 'str':\n\t\t\t\t\t\ttextp = cell.v == null ? \"\" : cell.v;\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v).toISOString()));\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v).toISOString());\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case 'e':\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue;\n\t\t\t\t}\n\t\t\t\tvar text_p = write_text_p(textp);\n\t\t\t\tif(cell.l && cell.l.Target) {\n\t\t\t\t\tvar _tgt = cell.l.Target;\n\t\t\t\t\t_tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n\t\t\t\t\t// TODO: choose correct parent path format based on link delimiters\n\t\t\t\t\tif(_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt.replace(/&/g, \"&amp;\")});\n\t\t\t\t}\n\t\t\t\to.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n\t\t\t}\n\t\t\to.push('        </table:table-row>\\n');\n\t\t}\n\t\to.push('      </table:table>\\n');\n\t\treturn o.join(\"\");\n\t};\n\n\tvar write_automatic_styles_ods = function(o/*:Array<string>*/, wb) {\n\t\to.push(' <office:automatic-styles>\\n');\n\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:year/>\\n');\n\t\to.push('  </number:date-style>\\n');\n\n\t\t/* column styles */\n\t\tvar cidx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!cols\"]) {\n\t\t\t\tfor(var C = 0; C < ws[\"!cols\"].length; ++C) if(ws[\"!cols\"][C]) {\n\t\t\t\t\tvar colobj = ws[\"!cols\"][C];\n\t\t\t\t\tif(colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n\t\t\t\t\tprocess_col(colobj);\n\t\t\t\t\tcolobj.ods = cidx;\n\t\t\t\t\tvar w = ws[\"!cols\"][C].wpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n\t\t\t\t\to.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++cidx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* row styles */\n\t\tvar ridx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!rows\"]) {\n\t\t\t\tfor(var R = 0; R < ws[\"!rows\"].length; ++R) if(ws[\"!rows\"][R]) {\n\t\t\t\t\tws[\"!rows\"][R].ods = ridx;\n\t\t\t\t\tvar h = ws[\"!rows\"][R].hpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n\t\t\t\t\to.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++ridx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* table */\n\t\to.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n\t\to.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n\t\to.push('  </style:style>\\n');\n\n\t\t/* table cells, text */\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\n\t\t/* page-layout */\n\n\t\to.push(' </office:automatic-styles>\\n');\n\t};\n\n\treturn function wcx(wb, opts) {\n\t\tvar o = [XML_HEADER];\n\t\t/* 3.1.3.2 */\n\t\tvar attr = wxt_helper({\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n\t\t\t'office:version':     \"1.2\"\n\t\t});\n\n\t\tvar fods = wxt_helper({\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n\t\t});\n\n\t\tif(opts.bookType == \"fods\") {\n\t\t\to.push('<office:document' + attr + fods + '>\\n');\n\t\t\to.push(write_meta_ods().replace(/office:document-meta/g, \"office:meta\"));\n\t\t\t// TODO: settings (equiv of settings.xml for ODS)\n\t\t} else o.push('<office:document-content' + attr  + '>\\n');\n\t\t// o.push('  <office:scripts/>\\n');\n\t\twrite_automatic_styles_ods(o, wb);\n\t\to.push('  <office:body>\\n');\n\t\to.push('    <office:spreadsheet>\\n');\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\n\t\to.push('    </office:spreadsheet>\\n');\n\t\to.push('  </office:body>\\n');\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\n\t\telse o.push('</office:document-content>');\n\t\treturn o.join(\"\");\n\t};\n})();\n\nfunction write_ods(wb/*:any*/, opts/*:any*/) {\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\n\tvar zip = zip_new();\n\tvar f = \"\";\n\n\tvar manifest/*:Array<Array<string> >*/ = [];\n\tvar rdf/*:Array<[string, string]>*/ = [];\n\n\t/* Part 3 Section 3.3 MIME Media Type */\n\tf = \"mimetype\";\n\tzip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n\t/* Part 1 Section 2.2 Documents */\n\tf = \"content.xml\";\n\tzip_add_file(zip, f, write_content_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"ContentFile\"]);\n\n\t/* TODO: these are hard-coded styles to satiate excel */\n\tf = \"styles.xml\";\n\tzip_add_file(zip, f, write_styles_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"StylesFile\"]);\n\n\t/* TODO: this is hard-coded to satiate excel */\n\tf = \"meta.xml\";\n\tzip_add_file(zip, f, XML_HEADER + write_meta_ods(/*::wb, opts*/));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"MetadataFile\"]);\n\n\t/* Part 3 Section 6 Metadata Manifest File */\n\tf = \"manifest.rdf\";\n\tzip_add_file(zip, f, write_rdf(rdf/*, opts*/));\n\tmanifest.push([f, \"application/rdf+xml\"]);\n\n\t/* Part 3 Section 4 Manifest File */\n\tf = \"META-INF/manifest.xml\";\n\tzip_add_file(zip, f, write_manifest(manifest/*, opts*/));\n\n\treturn zip;\n}\n\nvar NUMBERS = !Object.defineProperty ? (void 0) :(function() {\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __markAsModule = function(target) {\n    return __defProp(target, \"__esModule\", { value: true });\n  };\n  var __export = function(target, all) {\n    for (var name in all)\n      __defProp(target, name, { get: all[name], enumerable: true });\n  };\n  var __reExport = function(target, module, copyDefault, desc) {\n    if (module && typeof module === \"object\" || typeof module === \"function\")\n      for (var keys = __getOwnPropNames(module), i = 0, n = keys.length, key; i < n; i++) {\n        key = keys[i];\n        if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n          __defProp(target, key, { get: function(k) {\n            return module[k];\n          }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n      }\n    return target;\n  };\n  var __toCommonJS = /* @__PURE__ */ function(cache) {\n    return function(module, temp) {\n      return cache && cache.get(module) || (temp = __reExport(__markAsModule({}), module, 1), cache && cache.set(module, temp), temp);\n    };\n  }(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : 0);\n\n  // 83_numbers.ts\n  var numbers_exports = {};\n  __export(numbers_exports, {\n    parse_numbers: function() {\n      return numbers_default;\n    }\n  });\n\n  // src/util.ts\n  var u8_to_dataview = function(array) {\n    return new DataView(array.buffer, array.byteOffset, array.byteLength);\n  };\n  var u8str = function(u8) {\n    return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n  };\n  var u8concat = function(u8a) {\n    var len = u8a.reduce(function(acc, x) {\n      return acc + x.length;\n    }, 0);\n    var out = new Uint8Array(len);\n    var off = 0;\n    u8a.forEach(function(u8) {\n      out.set(u8, off);\n      off += u8.length;\n    });\n    return out;\n  };\n  var popcnt = function(x) {\n    x -= x >> 1 & 1431655765;\n    x = (x & 858993459) + (x >> 2 & 858993459);\n    return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n  };\n  var readDecimal128LE = function(buf, offset) {\n    var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n    var mantissa = buf[offset + 14] & 1;\n    for (var j = offset + 13; j >= offset; --j)\n      mantissa = mantissa * 256 + buf[j];\n    return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n  };\n\n  // src/proto.ts\n  function parse_varint49(buf, ptr) {\n    var l = ptr ? ptr[0] : 0;\n    var usz = buf[l] & 127;\n    varint:\n      if (buf[l++] >= 128) {\n        usz |= (buf[l] & 127) << 7;\n        if (buf[l++] < 128)\n          break varint;\n        usz |= (buf[l] & 127) << 14;\n        if (buf[l++] < 128)\n          break varint;\n        usz |= (buf[l] & 127) << 21;\n        if (buf[l++] < 128)\n          break varint;\n        usz += (buf[l] & 127) * Math.pow(2, 28);\n        ++l;\n        if (buf[l++] < 128)\n          break varint;\n        usz += (buf[l] & 127) * Math.pow(2, 35);\n        ++l;\n        if (buf[l++] < 128)\n          break varint;\n        usz += (buf[l] & 127) * Math.pow(2, 42);\n        ++l;\n        if (buf[l++] < 128)\n          break varint;\n      }\n    if (ptr)\n      ptr[0] = l;\n    return usz;\n  }\n  function varint_to_i32(buf) {\n    var l = 0, i32 = buf[l] & 127;\n    varint:\n      if (buf[l++] >= 128) {\n        i32 |= (buf[l] & 127) << 7;\n        if (buf[l++] < 128)\n          break varint;\n        i32 |= (buf[l] & 127) << 14;\n        if (buf[l++] < 128)\n          break varint;\n        i32 |= (buf[l] & 127) << 21;\n        if (buf[l++] < 128)\n          break varint;\n        i32 |= (buf[l] & 127) << 28;\n      }\n    return i32;\n  }\n  function parse_shallow(buf) {\n    var out = [], ptr = [0];\n    while (ptr[0] < buf.length) {\n      var off = ptr[0];\n      var num = parse_varint49(buf, ptr);\n      var type = num & 7;\n      num = Math.floor(num / 8);\n      var len = 0;\n      var res;\n      if (num == 0)\n        break;\n      switch (type) {\n        case 0:\n          {\n            var l = ptr[0];\n            while (buf[ptr[0]++] >= 128)\n              ;\n            res = buf.slice(l, ptr[0]);\n          }\n          break;\n        case 5:\n          len = 4;\n          res = buf.slice(ptr[0], ptr[0] + len);\n          ptr[0] += len;\n          break;\n        case 1:\n          len = 8;\n          res = buf.slice(ptr[0], ptr[0] + len);\n          ptr[0] += len;\n          break;\n        case 2:\n          len = parse_varint49(buf, ptr);\n          res = buf.slice(ptr[0], ptr[0] + len);\n          ptr[0] += len;\n          break;\n        case 3:\n        case 4:\n        default:\n          throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n      }\n      var v = { offset: off, data: res, type: type };\n      if (out[num] == null)\n        out[num] = [v];\n      else\n        out[num].push(v);\n    }\n    return out;\n  }\n  function mappa(data, cb) {\n    if (!data)\n      return [];\n    return data.map(function(d) {\n      var _a;\n      try {\n        return cb(d.data);\n      } catch (e) {\n        var m = (_a = e.message) == null ? void 0 : _a.match(/at offset (\\d+)/);\n        if (m)\n          e.message = e.message.replace(/at offset (\\d+)/, \"at offset \" + (+m[1] + d.offset));\n        throw e;\n      }\n    });\n  }\n\n  // src/frame.ts\n  function deframe(buf) {\n    var out = [];\n    var l = 0;\n    while (l < buf.length) {\n      var t = buf[l++];\n      var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n      l += 3;\n      out.push(parse_snappy_chunk(t, buf.slice(l, l + len)));\n      l += len;\n    }\n    if (l !== buf.length)\n      throw new Error(\"data is not a valid framed stream!\");\n    return u8concat(out);\n  }\n  function parse_snappy_chunk(type, buf) {\n    if (type != 0)\n      throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n    var ptr = [0];\n    var usz = parse_varint49(buf, ptr);\n    var chunks = [];\n    while (ptr[0] < buf.length) {\n      var tag = buf[ptr[0]] & 3;\n      if (tag == 0) {\n        var len = buf[ptr[0]++] >> 2;\n        if (len < 60)\n          ++len;\n        else {\n          var c = len - 59;\n          len = buf[ptr[0]];\n          if (c > 1)\n            len |= buf[ptr[0] + 1] << 8;\n          if (c > 2)\n            len |= buf[ptr[0] + 2] << 16;\n          if (c > 3)\n            len |= buf[ptr[0] + 3] << 24;\n          len >>>= 0;\n          len++;\n          ptr[0] += c;\n        }\n        chunks.push(buf.slice(ptr[0], ptr[0] + len));\n        ptr[0] += len;\n        continue;\n      } else {\n        var offset = 0, length = 0;\n        if (tag == 1) {\n          length = (buf[ptr[0]] >> 2 & 7) + 4;\n          offset = (buf[ptr[0]++] & 224) << 3;\n          offset |= buf[ptr[0]++];\n        } else {\n          length = (buf[ptr[0]++] >> 2) + 1;\n          if (tag == 2) {\n            offset = buf[ptr[0]] | buf[ptr[0] + 1] << 8;\n            ptr[0] += 2;\n          } else {\n            offset = (buf[ptr[0]] | buf[ptr[0] + 1] << 8 | buf[ptr[0] + 2] << 16 | buf[ptr[0] + 3] << 24) >>> 0;\n            ptr[0] += 4;\n          }\n        }\n        chunks = [u8concat(chunks)];\n        if (offset == 0)\n          throw new Error(\"Invalid offset 0\");\n        if (offset > chunks[0].length)\n          throw new Error(\"Invalid offset beyond length\");\n        if (length >= offset) {\n          chunks.push(chunks[0].slice(-offset));\n          length -= offset;\n          while (length >= chunks[chunks.length - 1].length) {\n            chunks.push(chunks[chunks.length - 1]);\n            length -= chunks[chunks.length - 1].length;\n          }\n        }\n        chunks.push(chunks[0].slice(-offset, -offset + length));\n      }\n    }\n    var o = u8concat(chunks);\n    if (o.length != usz)\n      throw new Error(\"Unexpected length: \".concat(o.length, \" != \").concat(usz));\n    return o;\n  }\n\n  // src/iwa.ts\n  function parse_iwa(buf) {\n    var out = [], ptr = [0];\n    while (ptr[0] < buf.length) {\n      var len = parse_varint49(buf, ptr);\n      var ai = parse_shallow(buf.slice(ptr[0], ptr[0] + len));\n      ptr[0] += len;\n      var res = {\n        id: varint_to_i32(ai[1][0].data),\n        messages: []\n      };\n      ai[2].forEach(function(b) {\n        var mi = parse_shallow(b.data);\n        var fl = varint_to_i32(mi[3][0].data);\n        res.messages.push({\n          meta: mi,\n          data: buf.slice(ptr[0], ptr[0] + fl)\n        });\n        ptr[0] += fl;\n      });\n      out.push(res);\n    }\n    return out;\n  }\n\n  // src/cell.ts\n  function parse_old_storage(buf, sst, rsst) {\n    var dv = u8_to_dataview(buf);\n    var ctype = buf[buf[0] == 4 ? 1 : 2];\n    var flags = dv.getUint32(4, true);\n    var data_offset = 12 + popcnt(flags & 3470) * 4;\n    var ridx = -1, sidx = -1, ieee = NaN, dt = new Date(2001, 0, 1);\n    if (flags & 512) {\n      ridx = dv.getUint32(data_offset, true);\n      data_offset += 4;\n    }\n    data_offset += popcnt(flags & 12288) * 4;\n    if (flags & 16) {\n      sidx = dv.getUint32(data_offset, true);\n      data_offset += 4;\n    }\n    if (flags & 32) {\n      ieee = dv.getFloat64(data_offset, true);\n      data_offset += 8;\n    }\n    if (flags & 64) {\n      dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n      data_offset += 8;\n    }\n    var ret;\n    switch (ctype) {\n      case 0:\n        break;\n      case 2:\n        ret = { t: \"n\", v: ieee };\n        break;\n      case 3:\n        ret = { t: \"s\", v: sst[sidx] };\n        break;\n      case 5:\n        ret = { t: \"d\", v: dt };\n        break;\n      case 6:\n        ret = { t: \"b\", v: ieee > 0 };\n        break;\n      case 7:\n        ret = { t: \"n\", v: ieee };\n        break;\n      case 8:\n        ret = { t: \"e\", v: 0 };\n        break;\n      case 9:\n        {\n          if (ridx > -1)\n            ret = { t: \"s\", v: rsst[ridx] };\n          else if (sidx > -1)\n            ret = { t: \"s\", v: sst[sidx] };\n          else if (!isNaN(ieee))\n            ret = { t: \"n\", v: ieee };\n          else\n            throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n        }\n        break;\n      default:\n        throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n    }\n    return ret;\n  }\n  function parse_storage(buf, sst, rsst) {\n    var dv = u8_to_dataview(buf);\n    var ctype = buf[1];\n    var flags = dv.getUint32(8, true);\n    var data_offset = 12;\n    var ridx = -1, sidx = -1, d128 = NaN, ieee = NaN, dt = new Date(2001, 0, 1);\n    if (flags & 1) {\n      d128 = readDecimal128LE(buf, data_offset);\n      data_offset += 16;\n    }\n    if (flags & 2) {\n      ieee = dv.getFloat64(data_offset, true);\n      data_offset += 8;\n    }\n    if (flags & 4) {\n      dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n      data_offset += 8;\n    }\n    if (flags & 8) {\n      sidx = dv.getUint32(data_offset, true);\n      data_offset += 4;\n    }\n    if (flags & 16) {\n      ridx = dv.getUint32(data_offset, true);\n      data_offset += 4;\n    }\n    var ret;\n    switch (ctype) {\n      case 0:\n        break;\n      case 2:\n        ret = { t: \"n\", v: d128 };\n        break;\n      case 3:\n        ret = { t: \"s\", v: sst[sidx] };\n        break;\n      case 5:\n        ret = { t: \"d\", v: dt };\n        break;\n      case 6:\n        ret = { t: \"b\", v: ieee > 0 };\n        break;\n      case 7:\n        ret = { t: \"n\", v: ieee };\n        break;\n      case 8:\n        ret = { t: \"e\", v: 0 };\n        break;\n      case 9:\n        {\n          if (ridx > -1)\n            ret = { t: \"s\", v: rsst[ridx] };\n          else\n            throw new Error(\"Unsupported cell type \".concat(ctype, \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n        }\n        break;\n      case 10:\n        ret = { t: \"n\", v: d128 };\n        break;\n      default:\n        throw new Error(\"Unsupported cell type \".concat(ctype, \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n    }\n    return ret;\n  }\n  function parse(buf, sst, rsst) {\n    switch (buf[0]) {\n      case 3:\n      case 4:\n        return parse_old_storage(buf, sst, rsst);\n      case 5:\n        return parse_storage(buf, sst, rsst);\n      default:\n        throw new Error(\"Unsupported payload version \".concat(buf[0]));\n    }\n  }\n\n  // src/numbers.ts\n  var encode_col = function(C) {\n    var s = \"\";\n    for (++C; C; C = Math.floor((C - 1) / 26))\n      s = String.fromCharCode((C - 1) % 26 + 65) + s;\n    return s;\n  };\n  var encode_cell = function(c) {\n    return \"\".concat(encode_col(c.c)).concat(c.r + 1);\n  };\n  var encode_range = function(r) {\n    return encode_cell(r.s) + \":\" + encode_cell(r.e);\n  };\n  var book_new = function() {\n    return { Sheets: {}, SheetNames: [] };\n  };\n  var book_append_sheet = function(wb, ws, name) {\n    if (!name)\n      for (var i = 1; i < 9999; ++i) {\n        if (wb.SheetNames.indexOf(name = \"Sheet \".concat(i)) == -1)\n          break;\n      }\n    else if (wb.SheetNames.indexOf(name) > -1)\n      for (var i = 1; i < 9999; ++i) {\n        if (wb.SheetNames.indexOf(\"\".concat(name, \"_\").concat(i)) == -1) {\n          name = \"\".concat(name, \"_\").concat(i);\n          break;\n        }\n      }\n    wb.SheetNames.push(name);\n    wb.Sheets[name] = ws;\n  };\n  function parse_numbers(cfb) {\n    var out = [];\n    cfb.FullPaths.forEach(function(p) {\n      if (p.match(/\\.iwpv2/))\n        throw new Error(\"Unsupported password protection\");\n    });\n    cfb.FileIndex.forEach(function(s) {\n      if (!s.name.match(/\\.iwa$/))\n        return;\n      var o;\n      try {\n        o = deframe(s.content);\n      } catch (e) {\n        return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n      }\n      var packets;\n      try {\n        packets = parse_iwa(o);\n      } catch (e) {\n        return console.log(\"## \" + (e.message || e));\n      }\n      packets.forEach(function(packet) {\n        out[+packet.id] = packet.messages;\n      });\n    });\n    if (!out.length)\n      throw new Error(\"File has no messages\");\n    var docroot;\n    out.forEach(function(iwams) {\n      iwams.forEach(function(iwam) {\n        var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n        if (mtype == 1) {\n          if (!docroot)\n            docroot = iwam;\n          else\n            throw new Error(\"Document has multiple roots\");\n        }\n      });\n    });\n    if (!docroot)\n      throw new Error(\"Cannot find Document root\");\n    return parse_docroot(out, docroot);\n  }\n  var numbers_default = parse_numbers;\n  function parse_Reference(buf) {\n    var pb = parse_shallow(buf);\n    return parse_varint49(pb[1][0].data);\n  }\n  function parse_TST_TableDataList(M, root) {\n    var pb = parse_shallow(root.data);\n    var type = varint_to_i32(pb[1][0].data);\n    var entries = pb[3];\n    var data = [];\n    (entries || []).forEach(function(entry) {\n      var le = parse_shallow(entry.data);\n      var key = varint_to_i32(le[1][0].data) >>> 0;\n      switch (type) {\n        case 1:\n          data[key] = u8str(le[3][0].data);\n          break;\n        case 8:\n          {\n            var rt = M[parse_Reference(le[9][0].data)][0];\n            var rtp = parse_shallow(rt.data);\n            var rtpref = M[parse_Reference(rtp[1][0].data)][0];\n            var mtype = varint_to_i32(rtpref.meta[1][0].data);\n            if (mtype != 2001)\n              throw new Error(\"2000 unexpected reference to \".concat(mtype));\n            var tswpsa = parse_shallow(rtpref.data);\n            data[key] = tswpsa[3].map(function(x) {\n              return u8str(x.data);\n            }).join(\"\");\n          }\n          break;\n      }\n    });\n    return data;\n  }\n  function parse_TST_TileRowInfo(u8) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n    var pb = parse_shallow(u8);\n    var R = varint_to_i32(pb[1][0].data) >>> 0;\n    var pre_bnc = (_b = (_a = pb[3]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data;\n    var pre_bnc_offsets = ((_d = (_c = pb[4]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && u8_to_dataview(pb[4][0].data);\n    var storage = (_f = (_e = pb[6]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    var storage_offsets = ((_h = (_g = pb[7]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data) && u8_to_dataview(pb[7][0].data);\n    var wide_offsets = ((_j = (_i = pb[8]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n    var width = wide_offsets ? 4 : 1;\n    var cells = [];\n    var off = 0;\n    for (var C = 0; C < pre_bnc_offsets.byteLength / 2; ++C) {\n      if (storage && storage_offsets) {\n        off = storage_offsets.getUint16(C * 2, true) * width;\n        if (off < storage.length) {\n          cells[C] = storage.subarray(off, storage_offsets.getUint16(C * 2 + 2, true) * width);\n          continue;\n        }\n      }\n      if (pre_bnc && pre_bnc_offsets) {\n        off = pre_bnc_offsets.getUint16(C * 2, true) * width;\n        if (off < pre_bnc.length)\n          cells[C] = pre_bnc.subarray(off, pre_bnc_offsets.getUint16(C * 2 + 2, true) * width);\n      }\n    }\n    return { R: R, cells: cells };\n  }\n  function parse_TST_Tile(M, root) {\n    var pb = parse_shallow(root.data);\n    var ri = mappa(pb[5], parse_TST_TileRowInfo);\n    return ri.reduce(function(acc, x) {\n      if (!acc[x.R])\n        acc[x.R] = [];\n      x.cells.forEach(function(cell, C) {\n        if (acc[x.R][C])\n          throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, []);\n  }\n  function parse_TST_TableModelArchive(M, root, ws) {\n    var _a;\n    var pb = parse_shallow(root.data);\n    var range = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };\n    range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n    if (range.e.r < 0)\n      throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n    range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n    if (range.e.c < 0)\n      throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n    ws[\"!ref\"] = encode_range(range);\n    {\n      var store = parse_shallow(pb[4][0].data);\n      var sst = parse_TST_TableDataList(M, M[parse_Reference(store[4][0].data)][0]);\n      var rsst = ((_a = store[17]) == null ? void 0 : _a[0]) ? parse_TST_TableDataList(M, M[parse_Reference(store[17][0].data)][0]) : [];\n      {\n        var tile = parse_shallow(store[3][0].data);\n        var tiles = [];\n        tile[1].forEach(function(t) {\n          var tl = parse_shallow(t.data);\n          var ref = M[parse_Reference(tl[2][0].data)][0];\n          var mtype = varint_to_i32(ref.meta[1][0].data);\n          if (mtype != 6002)\n            throw new Error(\"6001 unexpected reference to \".concat(mtype));\n          tiles.push({ id: varint_to_i32(tl[1][0].data), ref: parse_TST_Tile(M, ref) });\n        });\n        tiles.forEach(function(tile2) {\n          tile2.ref.forEach(function(row, R) {\n            row.forEach(function(buf, C) {\n              var addr = encode_cell({ r: R, c: C });\n              var res = parse(buf, sst, rsst);\n              if (res)\n                ws[addr] = res;\n            });\n          });\n        });\n      }\n    }\n  }\n  function parse_TST_TableInfoArchive(M, root) {\n    var pb = parse_shallow(root.data);\n    var out = { \"!ref\": \"A1\" };\n    var tableref = M[parse_Reference(pb[2][0].data)];\n    var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n    if (mtype != 6001)\n      throw new Error(\"6000 unexpected reference to \".concat(mtype));\n    parse_TST_TableModelArchive(M, tableref[0], out);\n    return out;\n  }\n  function parse_sheetroot(M, root) {\n    var _a;\n    var pb = parse_shallow(root.data);\n    var out = {\n      name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n      sheets: []\n    };\n    var shapeoffs = mappa(pb[2], parse_Reference);\n    shapeoffs.forEach(function(off) {\n      M[off].forEach(function(m) {\n        var mtype = varint_to_i32(m.meta[1][0].data);\n        if (mtype == 6e3)\n          out.sheets.push(parse_TST_TableInfoArchive(M, m));\n      });\n    });\n    return out;\n  }\n  function parse_docroot(M, root) {\n    var out = book_new();\n    var pb = parse_shallow(root.data);\n    var sheetoffs = mappa(pb[1], parse_Reference);\n    sheetoffs.forEach(function(off) {\n      M[off].forEach(function(m) {\n        var mtype = varint_to_i32(m.meta[1][0].data);\n        if (mtype == 2) {\n          var root2 = parse_sheetroot(M, m);\n          root2.sheets.forEach(function(sheet) {\n            book_append_sheet(out, sheet, root2.name);\n          });\n        }\n      });\n    });\n    if (out.SheetNames.length == 0)\n      throw new Error(\"Empty NUMBERS file\");\n    return out;\n  }\n  return __toCommonJS(numbers_exports);\n})();\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nfunction fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}\n\t};\n}\n\nvar fix_read_opts = function(opts) {\nfix_opts_func([\n\t['cellNF', false], /* emit cell number format string as .z */\n\t['cellHTML', true], /* emit html string as .h */\n\t['cellFormula', true], /* emit formulae as .f */\n\t['cellStyles', false], /* emits style/theme as .s */\n\t['cellText', true], /* emit formatted text as .w */\n\t['cellDates', false], /* emit date cells with type `d` */\n\n\t['sheetStubs', false], /* emit empty cells */\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n\t['bookDeps', false], /* parse calculation chains */\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\n\t['bookProps', false], /* only try to get properties (no Sheets) */\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\n\n\t['password',''], /* password */\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n};\n\nvar fix_write_opts = fix_opts_func([\n\t['cellDates', false], /* write date cells with type `d` */\n\n\t['bookSST', false], /* Generate Shared String Table */\n\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n\t['compression', false], /* Use file compression */\n\n\t['WTF', false] /* WTF mode (throws errors) */\n]);\nfunction get_sheet_type(n/*:string*/)/*:string*/ {\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\n\treturn (n && n.length) ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n\tif(!wbrels) return 0;\n\ttry {\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n\t} catch(e) { return null; }\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\n}\n\nfunction safe_parse_sheet(zip, path/*:string*/, relsPath/*:string*/, sheet, idx/*:number*/, sheetRels, sheets, stype/*:string*/, opts, wb, themes, styles) {\n\ttry {\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n\t\tvar data = getzipdata(zip, path);\n\t\tvar _ws;\n\t\tswitch(stype) {\n\t\t\tcase 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n\t\t\t\tif(!_ws || !_ws['!drawel']) break;\n\t\t\t\tvar dfile = resolve_path(_ws['!drawel'].Target, path);\n\t\t\t\tvar drelsp = get_rels_path(dfile);\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\n\t\t\t\tvar crelsp = get_rels_path(chartp);\n\t\t\t\t_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n\t\t\t\tbreak;\n\t\t\tcase 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tdefault: throw new Error(\"Unrecognized sheet type \" + stype);\n\t\t}\n\t\tsheets[sheet] = _ws;\n\n\t\t/* scan rels for comments */\n\t\tvar comments = [];\n\t\tif(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {\n\t\t\tif(sheetRels[sheet][n].Type == RELS.CMNT) {\n\t\t\t\tvar dfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\tcomments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n\t\t\t\tif(!comments || !comments.length) return;\n\t\t\t\tsheet_insert_comments(_ws, comments);\n\t\t\t}\n\t\t});\n\t} catch(e) { if(opts.WTF) throw e; }\n}\n\nfunction strip_front_slash(x/*:string*/)/*:string*/ { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\nfunction parse_zip(zip/*:ZIP*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tmake_ssf(SSF);\n\topts = opts || {};\n\tfix_read_opts(opts);\n\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n\t/* UOC */\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n\t/* Numbers */\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) {\n\t\tif(typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n\t\tif(typeof NUMBERS != \"undefined\") {\n\t\t\tif(zip.FileIndex) return NUMBERS.parse_numbers(zip);\n\t\t\tvar _zip = CFB.utils.cfb_new();\n\t\t\tzipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });\n\t\t\treturn NUMBERS.parse_numbers(_zip);\n\t\t}\n\t\tthrow new Error('Unsupported NUMBERS file');\n\t}\n\tif(!safegetzipfile(zip, '[Content_Types].xml')) {\n\t\tif(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n\t\tif(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n\t\tthrow new Error('Unsupported ZIP file');\n\t}\n\n\tvar entries = zipentries(zip);\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')/*:?any*/));\n\tvar xlsb = false;\n\tvar sheets, binname;\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.xml\";\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n\t}\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.bin\";\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n\t\tdir.workbooks.push(binname);\n\t\txlsb = true;\n\t}\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n\tvar themes = ({}/*:any*/);\n\tvar styles = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) {\n\t\tstrs = [];\n\t\tif(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\",dir.themes[0], opts);\n\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n\t}\n\n\t/*var externbooks = */dir.links.map(function(link) {\n\t\ttry {\n\t\t\tvar rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n\t\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n\t\t} catch(e) {}\n\t});\n\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n\tvar props = {}, propdata = \"\";\n\n\tif(dir.coreprops.length) {\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n\t\tif(propdata) props = parse_core_props(propdata);\n\t\tif(dir.extprops.length !== 0) {\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\n\t\t}\n\t}\n\n\tvar custprops = {};\n\tif(!opts.bookSheets || opts.bookProps) {\n\t\tif (dir.custprops.length !== 0) {\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\n\t\t}\n\t}\n\n\tvar out = ({}/*:any*/);\n\tif(opts.bookSheets || opts.bookProps) {\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n\t}\n\tsheets = {};\n\n\tvar deps = {};\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n\tvar i=0;\n\tvar sheetRels = ({}/*:any*/);\n\tvar path, relsPath;\n\n\t{\n\t\tvar wbsheets = wb.Sheets;\n\t\tprops.Worksheets = wbsheets.length;\n\t\tprops.SheetNames = [];\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\n\t\t}\n\t}\n\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\n\tvar wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n\tvar wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n\tif(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n\n\tif((dir.metadata || []).length >= 1) {\n\t\t/* TODO: MDX and other types of metadata */\n\t\topts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);\n\t}\n\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n\n\t/* Numbers iOS hack */\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n\twsloop: for(i = 0; i != props.Worksheets; ++i) {\n\t\tvar stype = \"sheet\";\n\t\tif(wbrels && wbrels[i]) {\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrels[i][1];\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/,\"\") + wbrels[i][1];\n\t\t\tstype = wbrels[i][2];\n\t\t} else {\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\n\t\t}\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n\t\tif(opts && opts.sheets != null) switch(typeof opts.sheets) {\n\t\t\tcase \"number\": if(i != opts.sheets) continue wsloop; break;\n\t\t\tcase \"string\": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;\n\t\t\tdefault: if(Array.isArray && Array.isArray(opts.sheets)) {\n\t\t\t\tvar snjseen = false;\n\t\t\t\tfor(var snj = 0; snj != opts.sheets.length; ++snj) {\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen=1;\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n\t\t\t\t}\n\t\t\t\tif(!snjseen) continue wsloop;\n\t\t\t}\n\t\t}\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n\t}\n\n\tout = ({\n\t\tDirectory: dir,\n\t\tWorkbook: wb,\n\t\tProps: props,\n\t\tCustprops: custprops,\n\t\tDeps: deps,\n\t\tSheets: sheets,\n\t\tSheetNames: props.SheetNames,\n\t\tStrings: strs,\n\t\tStyles: styles,\n\t\tThemes: themes,\n\t\tSSF: SSF.get_table()\n\t}/*:any*/);\n\tif(opts && opts.bookFiles) {\n\t\tif(zip.files) {\n\t\t\tout.keys = entries;\n\t\t\tout.files = zip.files;\n\t\t} else {\n\t\t\tout.keys = [];\n\t\t\tout.files = {};\n\t\t\tzip.FullPaths.forEach(function(p, idx) {\n\t\t\t\tp = p.replace(/^Root Entry[\\/]/, \"\");\n\t\t\t\tout.keys.push(p);\n\t\t\t\tout.files[p] = zip.FileIndex[idx];\n\t\t\t});\n\t\t}\n\t}\n\tif(opts && opts.bookVBA) {\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n\t}\n\treturn out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar f = 'Workbook', data = CFB.find(cfb, f);\n\ttry {\n\tf = '/!DataSpaces/Version';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\n\n\t/* 2.3.4.1 */\n\tf = '/!DataSpaces/DataSpaceMap';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar dsm = parse_DataSpaceMap(data.content);\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.2 */\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar seds = parse_DataSpaceDefinition(data.content);\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.3 */\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var hdr = */parse_Primary(data.content);\n\t} catch(e) {}\n\n\tf = '/EncryptionInfo';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar einfo = parse_EncryptionInfo(data.content);\n\n\t/* 2.3.4.4 */\n\tf = '/EncryptedPackage';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n/*global decrypt_agile */\n/*:: declare var decrypt_agile:any; */\n\tif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n/*global decrypt_std76 */\n/*:: declare var decrypt_std76:any; */\n\tif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n\tthrow new Error(\"File is password-protected\");\n}\n\nfunction write_zip(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(opts.bookType == \"ods\") return write_ods(wb, opts);\n\treturn write_zip_xlsxb(wb, opts);\n}\n\nfunction write_zip_xlsxb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\t_shapeid = 1024;\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = SSF.get_table();\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws(rId-1, f, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar cf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_cmnt(comments, cf, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst(opts.Strings, f, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb(wb, f, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty(wb, f, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta(f));\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\n/* this version does not reference XLSB write functions */\nfunction write_zip_xlsx(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\t_shapeid = 1024;\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = SSF.get_table();\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_xml(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar cf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_xml(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_xml(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_xml(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_xml());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction firstbyte(f/*:RawData*/,o/*:?TypeOpts*/)/*:Array<number>*/ {\n\tvar x = \"\";\n\tswitch((o||{}).type || \"base64\") {\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tcase 'base64': x = Base64.decode(f.slice(0,12)); break;\n\t\tcase 'binary': x = f; break;\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n\t}\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\n\nfunction read_cfb(cfb/*:CFBContainer*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n\treturn parse_xlscfb(cfb, opts);\n}\n\nfunction read_zip(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar zip, d = data;\n\tvar o = opts||{};\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tzip = zip_read(d, o);\n\treturn parse_zip(zip, o);\n}\n\nfunction read_plaintext(data/*:string*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar i = 0;\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\n\t\tdefault: break main;\n\t}\n\treturn PRN.to_workbook(data, o);\n}\n\nfunction read_plaintext_raw(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar str = \"\", bytes = firstbyte(data, o);\n\tswitch(o.type) {\n\t\tcase 'base64': str = Base64.decode(data); break;\n\t\tcase 'binary': str = data; break;\n\t\tcase 'buffer': str = data.toString('binary'); break;\n\t\tcase 'array': str = cc2str(data); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n\to.type = \"binary\";\n\treturn read_plaintext(str, o);\n}\n\nfunction read_utf16(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar d = data;\n\tif(o.type == 'base64') d = Base64.decode(d);\n\td = cptable.utils.decode(1200, d.slice(2), 'str');\n\to.type = \"binary\";\n\treturn read_plaintext(d, o);\n}\n\nfunction bstrify(data/*:string*/)/*:string*/ {\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\n\nfunction read_prn(data, d, o, str) {\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n\treturn PRN.to_workbook(d, o);\n}\n\nfunction readSync(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treset_cp();\n\tvar o = opts||{};\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n\tif(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n\tvar d = data, n = [0,0,0,0], str = false;\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\t_ssfopts = {};\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\"; }\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n\t\t// $FlowIgnore\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n\t\t// $FlowIgnore\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n\t}\n\tswitch((n = firstbyte(d, o))[0]) {\n\t\tcase 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;\n\t\tcase 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;\n\t\tcase 0x3C: return parse_xlml(d, o);\n\t\tcase 0x49:\n\t\t\tif(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n\t\t\tif(n[1] === 0x44) return read_wb_ID(d, o);\n\t\t\tbreak;\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xFF:\n\t\t\tif(n[1] === 0xFE) { return read_utf16(d, o); }\n\t\t\telse if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\tbreak;\n\t\tcase 0x00:\n\t\t\tif(n[1] === 0x00) {\n\t\t\t\tif(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\t\tif(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n\t\tcase 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\"); break;\n\t}\n\tif(DBF.versions.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n\treturn read_prn(data, d, o, str);\n}\n\nfunction readFileSync(filename/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar o = opts||{}; o.type = 'file';\n\treturn readSync(filename, o);\n}\nfunction write_obj_str(factory/*:WriteObjStrFactory*/) {\n\treturn function write_str(wb/*:Workbook*/, o/*:WriteOpts*/)/*:string*/ {\n\t\tvar idx = 0;\n\t\tif(o.sheet) {\n\t\t\tif(typeof o.sheet == \"number\") idx = o.sheet;\n\t\t\telse idx = wb.SheetNames.indexOf(o.sheet);\n\t\t\tif(!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + (typeof o.sheet));\n\t\t}\n\t\treturn factory.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb);\n\t};\n}\n\nvar write_htm_str = write_obj_str(HTML_);\nvar write_csv_str = write_obj_str({from_sheet:sheet_to_csv});\nvar write_slk_str = write_obj_str(typeof SYLK !== \"undefined\" ? SYLK : {});\nvar write_dif_str = write_obj_str(typeof DIF !== \"undefined\" ? DIF : {});\nvar write_prn_str = write_obj_str(typeof PRN !== \"undefined\" ? PRN : {});\nvar write_rtf_str = write_obj_str(typeof RTF !== \"undefined\" ? RTF : {});\nvar write_txt_str = write_obj_str({from_sheet:sheet_to_txt});\nvar write_dbf_buf = write_obj_str(typeof DBF !== \"undefined\" ? DBF : {});\nvar write_eth_str = write_obj_str(typeof ETH !== \"undefined\" ? ETH : {});\nvar write_wk1_buf = write_obj_str(typeof WK_ !== \"undefined\" ? {from_sheet:WK_.sheet_to_wk1} : {});\n\nfunction write_cfb_ctr(cfb/*:CFBContainer*/, o/*:WriteOpts*/)/*:any*/ {\n\tswitch(o.type) {\n\t\tcase \"base64\": case \"binary\": break;\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn CFB.write(cfb, o);\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip_xlsx(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z/*:any*/, o/*:?WriteOpts*/)/*:any*/ {\n\tvar oopts = {};\n\tvar ftype = has_buf ? \"nodebuffer\" : (typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\");\n\tif(o.compression) oopts.compression = 'DEFLATE';\n\tif(o.password) oopts.type = ftype;\n\telse switch(o.type) {\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\n\t\tcase \"binary\": oopts.type = \"string\"; break;\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tcase \"buffer\":\n\t\tcase \"file\": oopts.type = ftype; break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tvar out = z.FullPaths ? CFB.write(z, {fileType:\"zip\", type: /*::(*/{\"nodebuffer\": \"buffer\", \"string\": \"binary\"}/*:: :any)*/[oopts.type] || oopts.type, compression: !!o.compression}) : z.generate(oopts);\n\tif(typeof Deno !== \"undefined\") {\n\t\tif(typeof out == \"string\") {\n\t\t\tif(o.type == \"binary\" || o.type == \"base64\") return out;\n\t\t\tout = new Uint8Array(s2ab(out));\n\t\t}\n\t}\n/*jshint -W083 */\n\tif(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n/*jshint +W083 */\n\tif(o.type === \"file\") return write_dl(o.file, out);\n\treturn o.type == \"string\" ? utf8read(/*::(*/out/*:: :any)*/) : out;\n}\n\nfunction write_cfb_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = opts||{};\n\tvar cfb/*:CFBContainer*/ = write_xlscfb(wb, o);\n\treturn write_cfb_ctr(cfb, o);\n}\n\nfunction write_string_type(out/*:string*/, opts/*:WriteOpts*/, bom/*:?string*/)/*:any*/ {\n\tif(!bom) bom = \"\";\n\tvar o = bom + out;\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64.encode(utf8write(o));\n\t\tcase \"binary\": return utf8write(o);\n\t\tcase \"string\": return out;\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(o, 'utf8');\n\t\t\telse if(typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\nfunction write_stxt_type(out/*:string*/, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64.encode(out);\n\t\tcase \"binary\": return out;\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(out, 'binary');\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"string\":\n\t\tcase \"base64\":\n\t\tcase \"binary\":\n\t\t\tvar bstr = \"\";\n\t\t\t// $FlowIgnore\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n\t\t\treturn opts.type == 'base64' ? Base64.encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n\t\tcase \"file\": return write_dl(opts.file, out);\n\t\tcase \"buffer\": return out;\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t}\n}\n\nfunction writeSyncXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSyncXLSX(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\treturn write_zip_typeXLSX(wb, o);\n}\n\nfunction writeSync(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSync(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\tswitch(o.bookType || 'xlsb') {\n\t\tcase 'xml':\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\n\t\tcase 'slk':\n\t\tcase 'sylk': return write_string_type(write_slk_str(wb, o), o);\n\t\tcase 'htm':\n\t\tcase 'html': return write_string_type(write_htm_str(wb, o), o);\n\t\tcase 'txt': return write_stxt_type(write_txt_str(wb, o), o);\n\t\tcase 'csv': return write_string_type(write_csv_str(wb, o), o, \"\\ufeff\");\n\t\tcase 'dif': return write_string_type(write_dif_str(wb, o), o);\n\t\tcase 'dbf': return write_binary_type(write_dbf_buf(wb, o), o);\n\t\tcase 'prn': return write_string_type(write_prn_str(wb, o), o);\n\t\tcase 'rtf': return write_string_type(write_rtf_str(wb, o), o);\n\t\tcase 'eth': return write_string_type(write_eth_str(wb, o), o);\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\n\t\tcase 'wk1': return write_binary_type(write_wk1_buf(wb, o), o);\n\t\tcase 'wk3': return write_binary_type(WK_.book_to_wk3(wb, o), o);\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n\t\tcase 'biff8':\n\t\tcase 'xla':\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n\t\tcase 'xlsx':\n\t\tcase 'xlsm':\n\t\tcase 'xlam':\n\t\tcase 'xlsb':\n\t\tcase 'ods': return write_zip_type(wb, o);\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n\t}\n}\n\nfunction resolve_book_type(o/*:WriteFileOpts*/) {\n\tif(o.bookType) return;\n\tvar _BT = {\n\t\t\"xls\": \"biff8\",\n\t\t\"htm\": \"html\",\n\t\t\"slk\": \"sylk\",\n\t\t\"socialcalc\": \"eth\",\n\t\t\"Sh33tJS\": \"WTF\"\n\t};\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n\to.bookType = _BT[o.bookType] || o.bookType;\n}\n\nfunction writeFileSync(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSync(wb, o);\n}\n\nfunction writeFileSyncXLSX(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSyncXLSX(wb, o);\n}\n\n\nfunction writeFileAsync(filename/*:string*/, wb/*:Workbook*/, opts/*:?WriteFileOpts*/, cb/*:?(e?:ErrnoError)=>void*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\to.type = 'buffer';\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts/*:any*/);\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, header/*:number*/, hdr/*:Array<any>*/, dense/*:boolean*/, o/*:Sheet2JSONOpts*/)/*:MJRObject*/ {\n\tvar rr = encode_row(R);\n\tvar defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n\tvar isempty = true;\n\tvar row/*:any*/ = (header === 1) ? [] : {};\n\tif(header !== 1) {\n\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n\t\telse row.__rowNum__ = R;\n\t}\n\tif(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tif(val === undefined || val.t === undefined) {\n\t\t\tif(defval === undefined) continue;\n\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; }\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = val.v;\n\t\tswitch(val.t){\n\t\t\tcase 'z': if(v == null) break; continue;\n\t\t\tcase 'e': v = (v == 0 ? null : void 0); break;\n\t\t\tcase 's': case 'd': case 'b': case 'n': break;\n\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\n\t\t}\n\t\tif(hdr[C] != null) {\n\t\t\tif(v == null) {\n\t\t\t\tif(val.t == \"e\" && v === null) row[hdr[C]] = null;\n\t\t\t\telse if(defval !== undefined) row[hdr[C]] = defval;\n\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\n\t\t\t\telse continue;\n\t\t\t} else {\n\t\t\t\trow[hdr[C]] = raw || (o.rawNumbers && val.t == \"n\") ? v : format_cell(val,v,o);\n\t\t\t}\n\t\t\tif(v != null) isempty = false;\n\t\t}\n\t}\n\treturn { row: row, isempty: isempty };\n}\n\n\nfunction sheet_to_json(sheet/*:Worksheet*/, opts/*:?Sheet2JSONOpts*/) {\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\telse if(o.header == null) header = 0;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar out/*:Array<any>*/ = [];\n\tvar outi = 0, counter = 0;\n\tvar dense = Array.isArray(sheet);\n\tvar R = r.s.r, C = 0, CC = 0;\n\tif(dense && !sheet[R]) sheet[R] = [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = 0;\n\t\t\t\tfor(CC = 0; CC < hdr.length; ++CC) if(hdr[CC] == vv) vv = v + \"_\" + (++counter);\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\n\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n\t}\n\tout.length = outi;\n\treturn out;\n}\n\nvar qreg = /\"/g;\nfunction make_csv_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, fs/*:number*/, rs/*:number*/, FS/*:string*/, o/*:Sheet2CSVOpts*/)/*:?string*/ {\n\tvar isempty = true;\n\tvar row/*:Array<string>*/ = [], txt = \"\", rr = encode_row(R);\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tif (!cols[C]) continue;\n\t\tvar val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];\n\t\tif(val == null) txt = \"\";\n\t\telse if(val.v != null) {\n\t\t\tisempty = false;\n\t\t\ttxt = ''+(o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\n\t\t} else if(val.f != null && !val.F) {\n\t\t\tisempty = false;\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n\t\t} else txt = \"\";\n\t\t/* NOTE: Excel CSV does not support array formulae */\n\t\trow.push(txt);\n\t}\n\tif(o.blankrows === false && isempty) return null;\n\treturn row.join(FS);\n}\n\nfunction sheet_to_csv(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row = \"\", cols/*:Array<string>*/ = [];\n\to.dense = Array.isArray(sheet);\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n\t\tif(row == null) { continue; }\n\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\tout.push(row + RS);\n\t}\n\tdelete o.dense;\n\treturn out.join(\"\");\n}\n\nfunction sheet_to_txt(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n\tvar s = sheet_to_csv(sheet, opts);\n\tif(typeof cptable == 'undefined' || opts.type == 'string') return s;\n\tvar o = cptable.utils.encode(1200, s, 'str');\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\n\nfunction sheet_to_formulae(sheet/*:Worksheet*/)/*:Array<string>*/ {\n\tvar y = \"\", x, val=\"\";\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols/*:Array<string>*/ = [], C;\n\tvar cmds/*:Array<string>*/ = [];\n\tvar dense = Array.isArray(sheet);\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\ty = cols[C] + rr;\n\t\t\tx = dense ? (sheet[R]||[])[C] : sheet[y];\n\t\t\tval = \"\";\n\t\t\tif(x === undefined) continue;\n\t\t\telse if(x.F != null) {\n\t\t\t\ty = x.F;\n\t\t\t\tif(!x.f) continue;\n\t\t\t\tval = x.f;\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\n\t\t\t}\n\t\t\tif(x.f != null) val = x.f;\n\t\t\telse if(x.t == 'z') continue;\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\n\t\t\telse if(x.v === undefined) continue;\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\n\t\t\telse val = \"\"+x.v;\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\n\t\t}\n\t}\n\treturn cmds;\n}\n\nfunction sheet_add_json(_ws/*:?Worksheet*/, js/*:Array<any>*/, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar offset = +!o.skipHeader;\n\tvar ws/*:Worksheet*/ = _ws || ({}/*:any*/);\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar cell/*:Cell*/;\n\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n\t} else {\n\t\tif(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }\n\t}\n\tvar hdr/*:Array<string>*/ = o.header || [], C = 0;\n\n\tjs.forEach(function (JS, R/*:number*/) {\n\t\tkeys(JS).forEach(function(k) {\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n\t\t\tvar v = JS[k];\n\t\t\tvar t = 'z';\n\t\t\tvar z = \"\";\n\t\t\tvar ref = encode_cell({c:_C + C,r:_R + R + offset});\n\t\t\tcell = utils.sheet_get_cell(ws, ref);\n\t\t\tif(v && typeof v === 'object' && !(v instanceof Date)){\n\t\t\t\tws[ref] = v;\n\t\t\t} else {\n\t\t\t\tif(typeof v == 'number') t = 'n';\n\t\t\t\telse if(typeof v == 'boolean') t = 'b';\n\t\t\t\telse if(typeof v == 'string') t = 's';\n\t\t\t\telse if(v instanceof Date) {\n\t\t\t\t\tt = 'd';\n\t\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\n\t\t\t\t\tz = (o.dateNF || SSF._table[14]);\n\t\t\t\t}\n\t\t\t\telse if(v === null && o.nullError) { t = 'e'; v = 0; }\n\t\t\t\tif(!cell) ws[ref] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\telse {\n\t\t\t\t\tcell.t = t; cell.v = v;\n\t\t\t\t\tdelete cell.w; delete cell.R;\n\t\t\t\t\tif(z) cell.z = z;\n\t\t\t\t}\n\t\t\t\tif(z) cell.z = z;\n\t\t\t}\n\t\t});\n\t});\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n\tvar __R = encode_row(_R);\n\tif(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n\tws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction json_to_sheet(js/*:Array<any>*/, opts)/*:Worksheet*/ { return sheet_add_json(null, js, opts); }\n\nvar utils/*:any*/ = {\n\tencode_col: encode_col,\n\tencode_row: encode_row,\n\tencode_cell: encode_cell,\n\tencode_range: encode_range,\n\tdecode_col: decode_col,\n\tdecode_row: decode_row,\n\tsplit_cell: split_cell,\n\tdecode_cell: decode_cell,\n\tdecode_range: decode_range,\n\tformat_cell: format_cell,\n\tsheet_add_aoa: sheet_add_aoa,\n\tsheet_add_json: sheet_add_json,\n\tsheet_add_dom: sheet_add_dom,\n\taoa_to_sheet: aoa_to_sheet,\n\tjson_to_sheet: json_to_sheet,\n\ttable_to_sheet: parse_dom_table,\n\ttable_to_book: table_to_book,\n\tsheet_to_csv: sheet_to_csv,\n\tsheet_to_txt: sheet_to_txt,\n\tsheet_to_json: sheet_to_json,\n\tsheet_to_html: HTML_.from_sheet,\n\tsheet_to_formulae: sheet_to_formulae,\n\tsheet_to_row_object_array: sheet_to_json\n};\n\n(function(utils) {\nutils.consts = utils.consts || {};\nfunction add_consts(R/*Array<any>*/) { R.forEach(function(a){ utils.consts[a[0]] = a[1]; }); }\n\nfunction get_default(x/*:any*/, y/*:any*/, z/*:any*/)/*:any*/ { return x[y] != null ? x[y] : (x[y] = z); }\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws/*:Worksheet*/, R, C/*:?number*/)/*:Cell*/ {\n\t/* A1 cell address */\n\tif(typeof R == \"string\") {\n\t\t/* dense */\n\t\tif(Array.isArray(ws)) {\n\t\t\tvar RC = decode_cell(R);\n\t\t\tif(!ws[RC.r]) ws[RC.r] = [];\n\t\t\treturn ws[RC.r][RC.c] || (ws[RC.r][RC.c] = {t:'z'});\n\t\t}\n\t\treturn ws[R] || (ws[R] = {t:'z'});\n\t}\n\t/* cell address object */\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n\t/* R and C are 0-based indices */\n\treturn ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));\n}\nutils.sheet_get_cell = ws_get_cell_stub;\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb/*:Workbook*/, sh/*:number|string*/) {\n\tif(typeof sh == \"number\") {\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\n\t} else if(typeof sh == \"string\") {\n\t\tvar idx = wb.SheetNames.indexOf(sh);\n\t\tif(idx > -1) return idx;\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nutils.book_new = function()/*:Workbook*/ {\n\treturn { SheetNames: [], Sheets: {} };\n};\n\n/* add a worksheet to the end of a given workbook */\nutils.book_append_sheet = function(wb/*:Workbook*/, ws/*:Worksheet*/, name/*:?string*/) {\n\tif(!name) for(var i = 1; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n\tif(!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n\tcheck_ws_name(name);\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n\twb.SheetNames.push(name);\n\twb.Sheets[name] = ws;\n};\n\n/* set sheet visibility (visible/hidden/very hidden) */\nutils.book_set_sheet_visibility = function(wb/*:Workbook*/, sh/*:number|string*/, vis/*:number*/) {\n\tget_default(wb,\"Workbook\",{});\n\tget_default(wb.Workbook,\"Sheets\",[]);\n\n\tvar idx = wb_sheet_idx(wb, sh);\n\t// $FlowIgnore\n\tget_default(wb.Workbook.Sheets,idx, {});\n\n\tswitch(vis) {\n\t\tcase 0: case 1: case 2: break;\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\n\t}\n\t// $FlowIgnore\n\twb.Workbook.Sheets[idx].Hidden = vis;\n};\nadd_consts([\n\t[\"SHEET_VISIBLE\", 0],\n\t[\"SHEET_HIDDEN\", 1],\n\t[\"SHEET_VERY_HIDDEN\", 2]\n]);\n\n/* set number format */\nutils.cell_set_number_format = function(cell/*:Cell*/, fmt/*:string|number*/) {\n\tcell.z = fmt;\n\treturn cell;\n};\n\n/* set cell hyperlink */\nutils.cell_set_hyperlink = function(cell/*:Cell*/, target/*:string*/, tooltip/*:?string*/) {\n\tif(!target) {\n\t\tdelete cell.l;\n\t} else {\n\t\tcell.l = ({ Target: target }/*:Hyperlink*/);\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\n\t}\n\treturn cell;\n};\nutils.cell_set_internal_link = function(cell/*:Cell*/, range/*:string*/, tooltip/*:?string*/) { return utils.cell_set_hyperlink(cell, \"#\" + range, tooltip); };\n\n/* add to cell comments */\nutils.cell_add_comment = function(cell/*:Cell*/, text/*:string*/, author/*:?string*/) {\n\tif(!cell.c) cell.c = [];\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\n};\n\n/* set array formula and flush related cells */\nutils.sheet_set_array_formula = function(ws/*:Worksheet*/, range, formula/*:string*/, dynamic/*:boolean*/) {\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\n\t\tcell.t = 'n';\n\t\tcell.F = rngstr;\n\t\tdelete cell.v;\n\t\tif(R == rng.s.r && C == rng.s.c) {\n\t\t\tcell.f = formula;\n\t\t\tif(dynamic) cell.D = true;\n\t\t}\n\t}\n\treturn ws;\n};\n\nreturn utils;\n})(utils);\n\nexport const version = XLSX.version;\nexport {\n\tparse_xlscfb,\n\tparse_zip,\n\treadSync as read,\n\treadFileSync as readFile,\n\treadFileSync,\n\twriteSync as write,\n\twriteFileSync as writeFile,\n\twriteFileSync,\n\twriteFileAsync,\n\twriteSyncXLSX as writeXLSX,\n\twriteFileSyncXLSX as writeFileXLSX,\n\tutils,\n\tSSF,\n\tCFB\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xlsx/xlsx.mjs\n// module id = i0w4\n// module chunks = 1","var map = {\n\t\"./af\": \"3CJN\",\n\t\"./af.js\": \"3CJN\",\n\t\"./ar\": \"3MVc\",\n\t\"./ar-dz\": \"tkWw\",\n\t\"./ar-dz.js\": \"tkWw\",\n\t\"./ar-kw\": \"j8cJ\",\n\t\"./ar-kw.js\": \"j8cJ\",\n\t\"./ar-ly\": \"wPpW\",\n\t\"./ar-ly.js\": \"wPpW\",\n\t\"./ar-ma\": \"dURR\",\n\t\"./ar-ma.js\": \"dURR\",\n\t\"./ar-sa\": \"7OnE\",\n\t\"./ar-sa.js\": \"7OnE\",\n\t\"./ar-tn\": \"BEem\",\n\t\"./ar-tn.js\": \"BEem\",\n\t\"./ar.js\": \"3MVc\",\n\t\"./az\": \"eHwN\",\n\t\"./az.js\": \"eHwN\",\n\t\"./be\": \"3hfc\",\n\t\"./be.js\": \"3hfc\",\n\t\"./bg\": \"lOED\",\n\t\"./bg.js\": \"lOED\",\n\t\"./bm\": \"hng5\",\n\t\"./bm.js\": \"hng5\",\n\t\"./bn\": \"aM0x\",\n\t\"./bn-bd\": \"1C9R\",\n\t\"./bn-bd.js\": \"1C9R\",\n\t\"./bn.js\": \"aM0x\",\n\t\"./bo\": \"w2Hs\",\n\t\"./bo.js\": \"w2Hs\",\n\t\"./br\": \"OSsP\",\n\t\"./br.js\": \"OSsP\",\n\t\"./bs\": \"aqvp\",\n\t\"./bs.js\": \"aqvp\",\n\t\"./ca\": \"wIgY\",\n\t\"./ca.js\": \"wIgY\",\n\t\"./cs\": \"ssxj\",\n\t\"./cs.js\": \"ssxj\",\n\t\"./cv\": \"N3vo\",\n\t\"./cv.js\": \"N3vo\",\n\t\"./cy\": \"ZFGz\",\n\t\"./cy.js\": \"ZFGz\",\n\t\"./da\": \"YBA/\",\n\t\"./da.js\": \"YBA/\",\n\t\"./de\": \"DOkx\",\n\t\"./de-at\": \"8v14\",\n\t\"./de-at.js\": \"8v14\",\n\t\"./de-ch\": \"Frex\",\n\t\"./de-ch.js\": \"Frex\",\n\t\"./de.js\": \"DOkx\",\n\t\"./dv\": \"rIuo\",\n\t\"./dv.js\": \"rIuo\",\n\t\"./el\": \"CFqe\",\n\t\"./el.js\": \"CFqe\",\n\t\"./en-au\": \"Sjoy\",\n\t\"./en-au.js\": \"Sjoy\",\n\t\"./en-ca\": \"Tqun\",\n\t\"./en-ca.js\": \"Tqun\",\n\t\"./en-gb\": \"hPuz\",\n\t\"./en-gb.js\": \"hPuz\",\n\t\"./en-ie\": \"ALEw\",\n\t\"./en-ie.js\": \"ALEw\",\n\t\"./en-il\": \"QZk1\",\n\t\"./en-il.js\": \"QZk1\",\n\t\"./en-in\": \"yJfC\",\n\t\"./en-in.js\": \"yJfC\",\n\t\"./en-nz\": \"dyB6\",\n\t\"./en-nz.js\": \"dyB6\",\n\t\"./en-sg\": \"NYST\",\n\t\"./en-sg.js\": \"NYST\",\n\t\"./eo\": \"Nd3h\",\n\t\"./eo.js\": \"Nd3h\",\n\t\"./es\": \"LT9G\",\n\t\"./es-do\": \"7MHZ\",\n\t\"./es-do.js\": \"7MHZ\",\n\t\"./es-mx\": \"USNP\",\n\t\"./es-mx.js\": \"USNP\",\n\t\"./es-us\": \"INcR\",\n\t\"./es-us.js\": \"INcR\",\n\t\"./es.js\": \"LT9G\",\n\t\"./et\": \"XlWM\",\n\t\"./et.js\": \"XlWM\",\n\t\"./eu\": \"sqLM\",\n\t\"./eu.js\": \"sqLM\",\n\t\"./fa\": \"2pmY\",\n\t\"./fa.js\": \"2pmY\",\n\t\"./fi\": \"nS2h\",\n\t\"./fi.js\": \"nS2h\",\n\t\"./fil\": \"rMbQ\",\n\t\"./fil.js\": \"rMbQ\",\n\t\"./fo\": \"OVPi\",\n\t\"./fo.js\": \"OVPi\",\n\t\"./fr\": \"tzHd\",\n\t\"./fr-ca\": \"bXQP\",\n\t\"./fr-ca.js\": \"bXQP\",\n\t\"./fr-ch\": \"VK9h\",\n\t\"./fr-ch.js\": \"VK9h\",\n\t\"./fr.js\": \"tzHd\",\n\t\"./fy\": \"g7KF\",\n\t\"./fy.js\": \"g7KF\",\n\t\"./ga\": \"U5Iz\",\n\t\"./ga.js\": \"U5Iz\",\n\t\"./gd\": \"nLOz\",\n\t\"./gd.js\": \"nLOz\",\n\t\"./gl\": \"FuaP\",\n\t\"./gl.js\": \"FuaP\",\n\t\"./gom-deva\": \"VGQH\",\n\t\"./gom-deva.js\": \"VGQH\",\n\t\"./gom-latn\": \"+27R\",\n\t\"./gom-latn.js\": \"+27R\",\n\t\"./gu\": \"rtsW\",\n\t\"./gu.js\": \"rtsW\",\n\t\"./he\": \"Nzt2\",\n\t\"./he.js\": \"Nzt2\",\n\t\"./hi\": \"ETHv\",\n\t\"./hi.js\": \"ETHv\",\n\t\"./hr\": \"V4qH\",\n\t\"./hr.js\": \"V4qH\",\n\t\"./hu\": \"xne+\",\n\t\"./hu.js\": \"xne+\",\n\t\"./hy-am\": \"GrS7\",\n\t\"./hy-am.js\": \"GrS7\",\n\t\"./id\": \"yRTJ\",\n\t\"./id.js\": \"yRTJ\",\n\t\"./is\": \"upln\",\n\t\"./is.js\": \"upln\",\n\t\"./it\": \"FKXc\",\n\t\"./it-ch\": \"/E8D\",\n\t\"./it-ch.js\": \"/E8D\",\n\t\"./it.js\": \"FKXc\",\n\t\"./ja\": \"ORgI\",\n\t\"./ja.js\": \"ORgI\",\n\t\"./jv\": \"JwiF\",\n\t\"./jv.js\": \"JwiF\",\n\t\"./ka\": \"RnJI\",\n\t\"./ka.js\": \"RnJI\",\n\t\"./kk\": \"j+vx\",\n\t\"./kk.js\": \"j+vx\",\n\t\"./km\": \"5j66\",\n\t\"./km.js\": \"5j66\",\n\t\"./kn\": \"gEQe\",\n\t\"./kn.js\": \"gEQe\",\n\t\"./ko\": \"eBB/\",\n\t\"./ko.js\": \"eBB/\",\n\t\"./ku\": \"kI9l\",\n\t\"./ku.js\": \"kI9l\",\n\t\"./ky\": \"6cf8\",\n\t\"./ky.js\": \"6cf8\",\n\t\"./lb\": \"z3hR\",\n\t\"./lb.js\": \"z3hR\",\n\t\"./lo\": \"nE8X\",\n\t\"./lo.js\": \"nE8X\",\n\t\"./lt\": \"/6P1\",\n\t\"./lt.js\": \"/6P1\",\n\t\"./lv\": \"jxEH\",\n\t\"./lv.js\": \"jxEH\",\n\t\"./me\": \"svD2\",\n\t\"./me.js\": \"svD2\",\n\t\"./mi\": \"gEU3\",\n\t\"./mi.js\": \"gEU3\",\n\t\"./mk\": \"Ab7C\",\n\t\"./mk.js\": \"Ab7C\",\n\t\"./ml\": \"oo1B\",\n\t\"./ml.js\": \"oo1B\",\n\t\"./mn\": \"CqHt\",\n\t\"./mn.js\": \"CqHt\",\n\t\"./mr\": \"5vPg\",\n\t\"./mr.js\": \"5vPg\",\n\t\"./ms\": \"ooba\",\n\t\"./ms-my\": \"G++c\",\n\t\"./ms-my.js\": \"G++c\",\n\t\"./ms.js\": \"ooba\",\n\t\"./mt\": \"oCzW\",\n\t\"./mt.js\": \"oCzW\",\n\t\"./my\": \"F+2e\",\n\t\"./my.js\": \"F+2e\",\n\t\"./nb\": \"FlzV\",\n\t\"./nb.js\": \"FlzV\",\n\t\"./ne\": \"/mhn\",\n\t\"./ne.js\": \"/mhn\",\n\t\"./nl\": \"3K28\",\n\t\"./nl-be\": \"Bp2f\",\n\t\"./nl-be.js\": \"Bp2f\",\n\t\"./nl.js\": \"3K28\",\n\t\"./nn\": \"C7av\",\n\t\"./nn.js\": \"C7av\",\n\t\"./oc-lnc\": \"KOFO\",\n\t\"./oc-lnc.js\": \"KOFO\",\n\t\"./pa-in\": \"pfs9\",\n\t\"./pa-in.js\": \"pfs9\",\n\t\"./pl\": \"7LV+\",\n\t\"./pl.js\": \"7LV+\",\n\t\"./pt\": \"ZoSI\",\n\t\"./pt-br\": \"AoDM\",\n\t\"./pt-br.js\": \"AoDM\",\n\t\"./pt.js\": \"ZoSI\",\n\t\"./ro\": \"wT5f\",\n\t\"./ro.js\": \"wT5f\",\n\t\"./ru\": \"ulq9\",\n\t\"./ru.js\": \"ulq9\",\n\t\"./sd\": \"fW1y\",\n\t\"./sd.js\": \"fW1y\",\n\t\"./se\": \"5Omq\",\n\t\"./se.js\": \"5Omq\",\n\t\"./si\": \"Lgqo\",\n\t\"./si.js\": \"Lgqo\",\n\t\"./sk\": \"OUMt\",\n\t\"./sk.js\": \"OUMt\",\n\t\"./sl\": \"2s1U\",\n\t\"./sl.js\": \"2s1U\",\n\t\"./sq\": \"V0td\",\n\t\"./sq.js\": \"V0td\",\n\t\"./sr\": \"f4W3\",\n\t\"./sr-cyrl\": \"c1x4\",\n\t\"./sr-cyrl.js\": \"c1x4\",\n\t\"./sr.js\": \"f4W3\",\n\t\"./ss\": \"7Q8x\",\n\t\"./ss.js\": \"7Q8x\",\n\t\"./sv\": \"Fpqq\",\n\t\"./sv.js\": \"Fpqq\",\n\t\"./sw\": \"DSXN\",\n\t\"./sw.js\": \"DSXN\",\n\t\"./ta\": \"+7/x\",\n\t\"./ta.js\": \"+7/x\",\n\t\"./te\": \"Nlnz\",\n\t\"./te.js\": \"Nlnz\",\n\t\"./tet\": \"gUgh\",\n\t\"./tet.js\": \"gUgh\",\n\t\"./tg\": \"5SNd\",\n\t\"./tg.js\": \"5SNd\",\n\t\"./th\": \"XzD+\",\n\t\"./th.js\": \"XzD+\",\n\t\"./tk\": \"+WRH\",\n\t\"./tk.js\": \"+WRH\",\n\t\"./tl-ph\": \"3LKG\",\n\t\"./tl-ph.js\": \"3LKG\",\n\t\"./tlh\": \"m7yE\",\n\t\"./tlh.js\": \"m7yE\",\n\t\"./tr\": \"k+5o\",\n\t\"./tr.js\": \"k+5o\",\n\t\"./tzl\": \"iNtv\",\n\t\"./tzl.js\": \"iNtv\",\n\t\"./tzm\": \"FRPF\",\n\t\"./tzm-latn\": \"krPU\",\n\t\"./tzm-latn.js\": \"krPU\",\n\t\"./tzm.js\": \"FRPF\",\n\t\"./ug-cn\": \"To0v\",\n\t\"./ug-cn.js\": \"To0v\",\n\t\"./uk\": \"ntHu\",\n\t\"./uk.js\": \"ntHu\",\n\t\"./ur\": \"uSe8\",\n\t\"./ur.js\": \"uSe8\",\n\t\"./uz\": \"XU1s\",\n\t\"./uz-latn\": \"/bsm\",\n\t\"./uz-latn.js\": \"/bsm\",\n\t\"./uz.js\": \"XU1s\",\n\t\"./vi\": \"0X8Q\",\n\t\"./vi.js\": \"0X8Q\",\n\t\"./x-pseudo\": \"e/KL\",\n\t\"./x-pseudo.js\": \"e/KL\",\n\t\"./yo\": \"YXlc\",\n\t\"./yo.js\": \"YXlc\",\n\t\"./zh-cn\": \"Vz2w\",\n\t\"./zh-cn.js\": \"Vz2w\",\n\t\"./zh-hk\": \"ZUyn\",\n\t\"./zh-hk.js\": \"ZUyn\",\n\t\"./zh-mo\": \"+WA1\",\n\t\"./zh-mo.js\": \"+WA1\",\n\t\"./zh-tw\": \"BbgG\",\n\t\"./zh-tw.js\": \"BbgG\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"uslO\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = uslO\n// module chunks = 1","module.exports = {\"name\":\"红烧鸡爪\",\"need\":[\"鸡爪子\",\"八角\",\"香叶\",\"桂皮\",\"冰糖\",\"葱段\",\"姜片\",\"料酒\",\"花椒\",\"生抽\",\"老抽\",\"盐\",\"鸡精\"],\"todo\":[\"冷水下鸡爪，放料酒，葱段，姜片\",\"起锅熬糖色\",\"下入鸡爪，八角，香叶，桂皮，葱段，姜片\",\"加温水小火炖30分钟\"],\"remarks\":\"熬糖色时可加水\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/cooking/menu/红烧鸡爪.json\n// module id = v472\n// module chunks = 1","module.exports = {\"name\":\"地三鲜\",\"need\":[\"茄子\",\"土豆\",\"青椒\",\"淀粉\",\"葱花\",\"蒜末\",\"老抽\",\"生抽\",\"蚝油\",\"鸡精\",\"味精\",\"盐\",\"糖\"],\"todo\":[\"土豆切厚片，茄子青椒滚刀块\",\"茄子块抖粉\",\"炸土豆，捞出炸茄子，再下土豆，最后下青椒，然后立刻捞出\",\"重新起锅留底油，葱花蒜末炒香，加老抽，一品鲜/生抽，耗油，水，鸡精，味精，盐，一点糖，水淀粉勾芡\",\"下入炸好的菜，最后加生蒜末，翻炒出锅\"],\"remarks\":\"青椒擦干过一下油即可\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/cooking/menu/地三鲜.json\n// module id = z5ZN\n// module chunks = 1"],"sourceRoot":""}